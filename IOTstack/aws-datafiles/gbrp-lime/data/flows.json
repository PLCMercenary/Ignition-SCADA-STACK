[{"id":"6b3bbc5a.1e6d04","type":"tab","label":"GRBP Limerock - Post Estate","disabled":false,"info":""},{"id":"83afd947.e3d0f8","type":"twilioConfig","z":"","name":"SCADABit Twilio Midland"},{"id":"4fad8b3a.4a5844","type":"twilio-api","z":"","name":"SCADABit Twilio Midland","sid":"ACd3d1e28d6055eac9af7579cbe9b2df67","from":"+14323150086"},{"id":"2394da76.e09106","type":"ui_tab","z":"","name":"Tanks & Status","icon":"dashboard","order":1},{"id":"975eae2.064e85","type":"mqtt-broker","z":"","name":"MQTT Health Broker","broker":"18.222.119.245","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9a4b6151.b1386","type":"twilioConfig","z":"","name":"SCADABit Twilio Tyler"},{"id":"3b976e99.98f6d2","type":"ui_base","theme":{"name":"theme-custom","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#808080","baseFont":"Lucida Sans Unicode,Lucida Grande,sans-serif","reset":false},"themeState":{"base-color":{"default":"#4B7930","value":"#808080","edited":true},"page-titlebar-backgroundColor":{"value":"#808080","edited":false},"page-backgroundColor":{"value":"#c0c0c0","edited":true},"page-sidebar-backgroundColor":{"value":"#c0c0c0","edited":true},"group-textColor":{"value":"#000000","edited":true},"group-borderColor":{"value":"#808080","edited":true},"group-backgroundColor":{"value":"#c0c0c0","edited":true},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#808080","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"Lucida Sans Unicode,Lucida Grande,sans-serif"}}},"site":{"name":"Hannathon Petroleum - Morgan SWD 1","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":45,"sy":48,"gx":20,"gy":20,"cx":3,"cy":3,"px":0,"py":0}}},{"id":"70700cf0.3271c4","type":"mqtt-broker","z":"","name":"Test MQTT Connection","broker":"18.222.217.68","port":"1885","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b77c53f.84b19b","type":"ui_group","z":"","name":"Alarms","tab":"2394da76.e09106","order":2,"disp":true,"width":"6","collapse":false},{"id":"c870e4f4.c54aa8","type":"ui_group","z":"","name":"Status","tab":"2394da76.e09106","order":1,"disp":true,"width":"24","collapse":false},{"id":"6a986612.01cd18","type":"twilioConfig","z":"","name":"SCADABit Midland Twilio #2"},{"id":"f09a9209.4e99c","type":"mqtt-broker","z":"","name":"SCADABit MQTT","broker":"mqtt.scadabit.com","port":"1883","clientid":"auth0|5bb4e515c862aa105446f3fc","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"2dc075d.d5d7d8a","type":"modbus-client","z":"","name":"Hannathon Conroe","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.168.239.101","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"3000","reconnectTimeout":"5000"},{"id":"ddb7e166.80d18","type":"twilioConfig","z":"","name":"Aghorn JM Williamson"},{"id":"4965478d.191278","type":"twilioConfig","z":"","name":"Hannathon Conroe"},{"id":"dbdb33b3.9498d","type":"modbus-client","z":"","name":"LAB DEV","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"75.109.192.25","tcpPort":"15051","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectTimeout":"2000"},{"id":"335ae311.db003c","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"dff90020.a6a","type":"MySQLdatabase","z":"","host":"ccs-scada.cfmgwesetfrr.us-east-2.rds.amazonaws.com","port":"33036","db":"callouts","tz":""},{"id":"3b932dce.ae2c12","type":"ui_group","z":"","name":"Numbers","tab":"","order":1,"disp":false,"width":"5"},{"id":"fa648ea3.2abee","type":"ui_group","z":"","name":"Chart","tab":"","order":2,"disp":false,"width":"18"},{"id":"875a9aa4.4c3ba8","type":"modbus-client","z":"","name":"Hannathon Conroe LACT1","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.168.239.101","tcpPort":"503","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":3000,"reconnectTimeout":5000},{"id":"36d3806d.ab87f","type":"modbus-client","z":"","name":"Hannathon Conroe LACT2","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.168.239.101","tcpPort":"504","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":3000,"reconnectTimeout":5000},{"id":"75054f0c.91bfa","type":"modbus-client","z":"","name":"Hannathon Conroe LACT3","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.168.239.101","tcpPort":"505","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"3000","reconnectTimeout":"5000"},{"id":"187e60b.cb4fa9f","type":"ui_group","z":"","name":"LACT1","tab":"46fc5fe8.2f14d","order":1,"disp":true,"width":"8","collapse":false},{"id":"7b966023.ecbdb","type":"ui_group","z":"","name":"LACT2","tab":"46fc5fe8.2f14d","order":2,"disp":true,"width":"8","collapse":false},{"id":"b6adeca6.d51f8","type":"ui_group","z":"","name":"LACT3","tab":"46fc5fe8.2f14d","order":3,"disp":true,"width":"8","collapse":false},{"id":"46fc5fe8.2f14d","type":"ui_tab","z":"","name":"LACTs","icon":"dashboard","order":2},{"id":"aae5fd56.bcbbb","type":"ui_group","z":"","name":"Trends","tab":"46fc5fe8.2f14d","order":4,"disp":true,"width":"48","collapse":false},{"id":"641ab52b.7be49c","type":"twilioConfig","z":"6b3bbc5a.1e6d04","name":"Castaway 6"},{"id":"de82a041.cf459","type":"ui_group","z":"6b3bbc5a.1e6d04","name":"Alarms","tab":"d5b6c934.5f8de8","order":2,"disp":true,"width":"6","collapse":false},{"id":"73b00392.dce6fc","type":"modbus-client","z":"","name":"GNA","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.169.141.52","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":3000,"reconnectTimeout":5000},{"id":"3c1c4f23.21589","type":"mqtt-broker","z":"","name":"MQTT Health Broker","broker":"18.222.119.245","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"d5b6c934.5f8de8","type":"ui_tab","z":"6b3bbc5a.1e6d04","name":"Tanks & Status","icon":"dashboard","order":2},{"id":"1e61b22c.68b90e","type":"ui_link","name":"Link 4","icon":"open_in_browser","target":"newtab","order":4},{"id":"7de179a2.fc2428","type":"modbus-client","z":"","name":"GRBP Limerock ","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":true,"tcpHost":"166.169.71.194","tcpPort":"502","tcpType":"TPC-RTU-BUFFERED","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"90000","reconnectTimeout":"2000"},{"id":"f1f5c1cc.84212","type":"twilioConfig","z":null,"name":"Limerock"},{"id":"4ee675c5.6bca7c","type":"twilioConfig","z":null,"name":"CCS_Monitoring"},{"id":"a8095381.d897d","type":"twilioConfig","z":"","name":"CCS_monitoring"},{"id":"f2f29330.32df9","type":"mqtt-broker","z":"","name":"MQTT Broker Dev","broker":"ec2-18-223-155-39.us-east-2.compute.amazonaws.com","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"f7d0da0.52ddc28","type":"mqtt-broker","z":"","name":"vmq","broker":"66.90.199.147","port":"2883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"dad68e67.1e229","type":"sms","z":"6b3bbc5a.1e6d04","name":"Customer Twilio","message":"","numbers":"+18064016202, +18067828767,  +18066320851,  +18067828992, +14327411885","throttle":"15000","twilio":"a8095381.d897d","x":2030,"y":297,"wires":[[]]},{"id":"6eea7ac3.a589a4","type":"sms","z":"6b3bbc5a.1e6d04","name":"Internal Twilio","message":"","numbers":"+13375229291, +19568849966‬, +18324556922, +14323553163","throttle":"5000","twilio":"a8095381.d897d","x":2148,"y":784,"wires":[[]]},{"id":"bc10f80.ef82a08","type":"trigger","z":"6b3bbc5a.1e6d04","op1":"","op2":"bad","op1type":"pay","op2type":"str","duration":"2","extend":true,"units":"min","reset":"","bytopic":"all","name":"Comm Fail Message Trigger","x":493.9996109008789,"y":172.99998664855957,"wires":[["fcc816e5.0e2a38"]]},{"id":"94cdb7e4.3913d8","type":"function","z":"6b3bbc5a.1e6d04","name":"Comm Status Cache","func":"var m = \"Current Time        \" + msg.timeStamp\nm += \"\\nLimerock Post Estate\\n\"\n\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\nif(msg.payload === \"bad\") {\n        flow.set(\"scadaCommAlarm\", \"Alarm\")\n    if(scadaCommAlarm === \"Normal\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Active:   SCADA Communication Offline\"\n        msg.payload = m\n        return msg\n    }\n    \n} else {\n        flow.set(\"scadaCommAlarm\", \"Normal\")\n    if(scadaCommAlarm === \"Alarm\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Cleared:  SCADA Communication Now Online\"\n        msg.payload = m\n        return msg\n    }  \n}","outputs":1,"noerr":0,"x":1016,"y":173,"wires":[["86d2066e.0da898"]]},{"id":"1a809f0b.fe4fc1","type":"comment","z":"6b3bbc5a.1e6d04","name":"CUSTOMER ALARMS","info":"","x":205.4996109008789,"y":63.99998664855957,"wires":[]},{"id":"fcc816e5.0e2a38","type":"moment","z":"6b3bbc5a.1e6d04","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":746.4996109008789,"y":172.99998664855957,"wires":[["94cdb7e4.3913d8"]]},{"id":"d5ca1467.301308","type":"http in","z":"6b3bbc5a.1e6d04","name":"Manual Get Status","url":"/get_status","method":"post","upload":false,"swaggerDoc":"","x":499.0135192871094,"y":60.99999237060547,"wires":[["e2389832.b86308"]]},{"id":"65574e99.455a","type":"http response","z":"6b3bbc5a.1e6d04","name":"Respond with Status Msg","statusCode":"200","headers":{"content-type":"text/plain"},"x":1587.024024963379,"y":46.874990463256836,"wires":[]},{"id":"1c157759.f4d669","type":"function","z":"6b3bbc5a.1e6d04","name":"Check Cmd Add Return Phone","func":"var cmd = msg.payload.Body.toLowerCase()\n\nif(cmd.indexOf(\"status\") !== -1 || cmd.indexOf(\"1\") !== -1) {\n    return msg\n} else if(cmd.indexOf(\"reset\") !== -1 || cmd.indexOf(\"2\") !== -1) {\n    return [null, msg]\n} else if(cmd.indexOf(\"setpoints\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n    return [null, null, msg]\n} else if(cmd.indexOf(\"levels\") !== -1 || cmd.indexOf(\"4\") !== -1) {\n    return [null, null, null, msg]\n} else if(cmd.indexOf(\"ack\") !== -1 || cmd.indexOf(\"9\") !== -1) {\n    return [null, null, null, null, msg]\n} else if(cmd.indexOf(\"start\") == -1 && cmd.indexOf(\"stop\") == -1) {\n    return [null, null, null, null, null, msg]\n}\n// } else {\n//     return [null, null, null, msg]\n// }\n\n// else if(cmd.indexOf(\"setpoint\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n//     return [null, null, msg]\n// }","outputs":6,"noerr":0,"x":985.0204849243164,"y":60.99998664855957,"wires":[[],["f65cc3e2.0c52b","6817949.b2ac36c"],[],["e760df3c.5e53d"],["379c8117.c8434e"],["803d8d1d.dc204"]]},{"id":"e760df3c.5e53d","type":"function","z":"6b3bbc5a.1e6d04","name":"Send Status Message","func":"\n    var statusMsg = \"\\n\"\n    statusMsg += \"\\nLimerock-PE\\n\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var alarmRegDate = flow.get(\"alarmRegDate\")\n\n    var status = flow.get(\"Status\")\n    var alarms = flow.get(\"Alarms\")\n\n    var scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nStatus Time         \" + statusRegDate\n    status.sort()\n\n//spacing+naming\nvar sn = \"\\nPermissives:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 1 Perm\"){\n         var st = \"\\n\" + \"      \" + \"LACT 1\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]\n        \n    }\n    });\n\nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 2 Perm\"){\n         var st = \"\\n\" + \"      \" + \"LACT 2\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]\n        \n    }\n    });\n\nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 3 Perm\"){\n         var st = \"\\n\" + \"      \" + \"LACT 3\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]\n        \n    }\n    });\n    \n//spacing+naming\nvar sn = \"\\nRun:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n    \nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 1 Run\"){\n         var st = \"\\n\" + \"      \" + \"LACT 1\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]\n        \n    }\n    });\n\nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 2 Run\"){\n         var st = \"\\n\" + \"      \" + \"LACT 2\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]\n        \n    }\n    });\n\nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 3 Run\"){\n         var st = \"\\n\" + \"      \" + \"LACT 3\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]\n        \n    }\n    });\n \n//spacing+naming\nvar sn = \"\\nLevels:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n   \nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 1 Level\"){\n         var st = \"\\n\" + \"      \" + \"LACT 1\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                        var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt \n        \n    }\n    });    \n    \nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 2 Level\"){\n         var st = \"\\n\" + \"      \" + \"LACT 2\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                        var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt \n        \n    }\n    });\n    \nstatus.forEach(function(o){\n    var name = Object.keys(o)[0]\n    if(name == \"LACT 3 Level\"){\n         var st = \"\\n\" + \"      \" + \"LACT 3\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                        var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt \n        \n    }\n    });\n\n    var foundAlarm = false\n\n    alarms.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(o[name] === \"Alarm\") {\n\n            if(!foundAlarm) {\n            statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n            foundAlarm = true\n            }\n\n        var st = \"\\n\" + name\n      //  for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n     //       st = st + \" \"\n     //   }\n\n        statusMsg = statusMsg + st \n        }\n        \n    });\n\n//spacing+naming\nvar sn = \"\\nAlarms:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n\n    if(scadaCommAlarm === \"Alarm\") {\n    if(!foundAlarm) {\n    statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n    }\n\n    //statusMsg = statusMsg + \"\\nActive:  \" + scadaCommAlarmDate\n    statusMsg = statusMsg + \"\\nSCADA Communication Offline\"\n    foundAlarm = true  \n    }  \n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1270.516944885254,"y":188.01040840148926,"wires":[["65574e99.455a"]]},{"id":"e2389832.b86308","type":"moment","z":"6b3bbc5a.1e6d04","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":725.5169067382812,"y":61.010406494140625,"wires":[["1c157759.f4d669"]]},{"id":"c2b22790.1211f8","type":"cron","z":"6b3bbc5a.1e6d04","name":"Status Message Schedule","crontab":"0 0,30 6-17 * * 1-5","x":190,"y":240,"wires":[[]]},{"id":"4a2636d6.0f0bf8","type":"comment","z":"6b3bbc5a.1e6d04","name":"Mon-Fri 06:00AM-5:30PM 30 minutes","info":"","x":204.4996109008789,"y":206.01038932800293,"wires":[]},{"id":"a52c685b.cb4e48","type":"ui_button","z":"6b3bbc5a.1e6d04","name":"Alarm Reset","group":"de82a041.cf459","order":1,"width":0,"height":0,"passthru":false,"label":"RESET ALARMS","color":"","bgcolor":"red","icon":"","payload":"2","payloadType":"str","topic":"","x":190,"y":500,"wires":[["6817949.b2ac36c"]]},{"id":"970748f0.83bc58","type":"modbus-write","z":"6b3bbc5a.1e6d04","name":"Set/Reset Alarm Bit 0","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"81","quantity":"1","server":"7de179a2.fc2428","x":1052.9999389648438,"y":502,"wires":[[],[]]},{"id":"53dceac4.9bc9c4","type":"trigger","z":"6b3bbc5a.1e6d04","op1":"1","op2":"0","op1type":"num","op2type":"num","duration":"5","extend":false,"units":"s","reset":"","bytopic":"all","name":"","x":624.0240478515625,"y":500.41033935546875,"wires":[["54817d21.60f954"]]},{"id":"54817d21.60f954","type":"function","z":"6b3bbc5a.1e6d04","name":"Reset Cache","func":"if(msg.payload == 0) {\nflow.set(\"resetButton\", 0)\n} else {\nflow.set(\"resetButton\", 1)   \n}\nreturn msg\n\n\n","outputs":1,"noerr":0,"x":797.51708984375,"y":500.510986328125,"wires":[["970748f0.83bc58"]]},{"id":"f65cc3e2.0c52b","type":"function","z":"6b3bbc5a.1e6d04","name":"Send Reset Confirmation","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\n Limerock-PE\\nAlarm Reset executed.\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1280.523048400879,"y":97.03904914855957,"wires":[["65574e99.455a"]]},{"id":"6817949.b2ac36c","type":"function","z":"6b3bbc5a.1e6d04","name":"Send and Set Cache","func":"var resetButton = flow.get(\"resetButton\")\n\nif(resetButton != 1) {\nflow.set(\"resetButton\", 1)     \nreturn msg\n}\n\n\n","outputs":1,"noerr":0,"x":420,"y":500,"wires":[["53dceac4.9bc9c4"]]},{"id":"812ddf2.962b82","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"bad","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":261.9996032714844,"y":172.99998474121094,"wires":[["bc10f80.ef82a08"]]},{"id":"803d8d1d.dc204","type":"function","z":"6b3bbc5a.1e6d04","name":"Send Help Menu","func":"var statusMsg = \"Current Time        \" + msg.timeStamp\nstatusMsg += \"\\nError: Command not recognized.\\nTank Levels=1\\nReset Alarms=2\\nSetpoints=3\\nView Status=4\\nAckAlarm=9\"\n    \nmsg.payload = statusMsg\nreturn msg;\n\n","outputs":1,"noerr":0,"x":1261.5191650390625,"y":334.00391387939453,"wires":[["65574e99.455a"]]},{"id":"b151a273.4c1bb","type":"fastcsv","z":"6b3bbc5a.1e6d04","name":"fastcsv","headers":true,"headerstr":"","ignoreEmpty":true,"discardUnmappedColumns":true,"strictColumnHandling":false,"delimiter":",","quote":"\"","escape":"\"","comment":"#","ltrim":false,"rtrim":false,"rowDelimiter":"\\n","includeEndRowDelimiter":false,"quoteHeaders":false,"quoteColumns":false,"x":176.01522064208984,"y":374.32813262939453,"wires":[["471400ee.91e7"]]},{"id":"726ae686.9b37f8","type":"file in","z":"6b3bbc5a.1e6d04","name":"Read Modbus Point Config","filename":"/data/modbus_points.csv","format":"utf8","chunk":false,"sendError":false,"x":358.0191421508789,"y":300.71094512939453,"wires":[["b151a273.4c1bb"]]},{"id":"43928302.0fba5c","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"180","crontab":"","once":true,"onceDelay":0.1,"x":110,"y":300,"wires":[["726ae686.9b37f8"]]},{"id":"471400ee.91e7","type":"function","z":"6b3bbc5a.1e6d04","name":"cacheConfig","func":"var pts = msg.payload\nvar points_lookup = {}\npts.forEach(function(p){\n    \n    if (points_lookup[p.reg_name]) {\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off, 'parse': p.parse})\n    } else {\n      points_lookup[p.reg_name] = {}\n      points_lookup[p.reg_name].name = p.reg_name\n      points_lookup[p.reg_name].parse = p.parse\n      points_lookup[p.reg_name].group = p.group\n      points_lookup[p.reg_name].quantity = p.quantity\n      points_lookup[p.reg_name].address = parseInt(p.reg_address)\n      points_lookup[p.reg_name].points = []\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off})\n    } \n});\n\nflow.set('points', points_lookup)        ","outputs":1,"noerr":0,"x":368.0230484008789,"y":374.35157108306885,"wires":[[]]},{"id":"edeaf5d2.eafdd8","type":"modbus-flex-getter","z":"6b3bbc5a.1e6d04","name":"Read Modbus limerock-pe","showStatusActivities":false,"showErrors":true,"server":"7de179a2.fc2428","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":905,"y":619,"wires":[["bc10f80.ef82a08","423c8fe1.017a"],[]]},{"id":"5a5169e2.0541c8","type":"cron","z":"6b3bbc5a.1e6d04","name":"","crontab":"*/3 * * * * *","x":181.0230484008789,"y":620.4452991485596,"wires":[["3f3ab6ac.b04b9a","42045282.b9fd3c"]]},{"id":"309c290f.1f41b6","type":"function","z":"6b3bbc5a.1e6d04","name":"Loop Through Points","func":"var points = flow.get('points')\nvar modbusStatus = flow.get('modbusStatus')\nif(points && (modbusStatus.indexOf('active') != -1 || modbusStatus.indexOf('timeout') != -1)) {\nvar numPoints = Object.keys(points).length\nvar idx = flow.get('idx')\n\nif (idx === undefined || idx >= numPoints) {\n    idx = 0\n}\n\nvar names = Object.keys(points)\nmsg.points = points[names[idx]].points\nmsg.name = names[idx]\nmsg.parse = points[names[idx]].parse\nmsg.group = points[names[idx]].group\nnode.error(msg.name)\n\nmsg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': points[names[idx]].address, 'quantity': points[names[idx]].quantity }\n\nif(idx <= numPoints-1) {\n    idx += 1\n    flow.set('idx', idx)\n      \n} else {\nflow.set('idx', 0)  \n}\nreturn msg;  \n}\n\n","outputs":1,"noerr":0,"x":647,"y":620,"wires":[["edeaf5d2.eafdd8"]]},{"id":"3f3ab6ac.b04b9a","type":"moment","z":"6b3bbc5a.1e6d04","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":412.5191345214844,"y":620.00390625,"wires":[["309c290f.1f41b6"]]},{"id":"91befd3c.9f0b8","type":"comment","z":"6b3bbc5a.1e6d04","name":"Poll once 3 seconds","info":"","x":197.0230484008789,"y":564.3515491485596,"wires":[]},{"id":"7f11953.e21a26c","type":"inject","z":"6b3bbc5a.1e6d04","name":"SEND RESET MANUALLY","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":440,"wires":[["a52c685b.cb4e48","6817949.b2ac36c"]]},{"id":"ca1ebeb8.d8052","type":"status","z":"6b3bbc5a.1e6d04","name":"sendgrid","scope":["edeaf5d2.eafdd8"],"x":376.9996337890625,"y":674.3333740234375,"wires":[["7d938961.7afd08"]]},{"id":"7d938961.7afd08","type":"function","z":"6b3bbc5a.1e6d04","name":"modbus status","func":"flow.set(\"modbusStatus\",msg.status.text)","outputs":1,"noerr":0,"x":593.9996032714844,"y":674,"wires":[[]]},{"id":"cf8e84f0.384358","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":180,"y":100,"wires":[[]]},{"id":"423c8fe1.017a","type":"function","z":"6b3bbc5a.1e6d04","name":"Parse Result","func":"\nif (msg.name == \"Status\") {\n  return msg\n} else if(msg.name.indexOf(\"Alarms\") != -1) {\nreturn [null,msg]    \n} else {\nreturn [null,null,msg]\n}\n\n\n\n","outputs":3,"noerr":0,"x":1124.5231323242188,"y":614.0390625,"wires":[["7cc8d9e3.785f98"],["5c7e84c5.b91cbc","47462cec.5b1994"],["6ee99e9d.50be4","47462cec.5b1994"]]},{"id":"7cc8d9e3.785f98","type":"function","z":"6b3bbc5a.1e6d04","name":"Parse Status","func":"flow.set(\"statusRegDate\", msg.timeStamp)\nvar status = flow.get(\"Status\")||[]\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n// var names = Object.keys(status)\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    var val = \"\"\n    if((r & Math.pow(2,p.bit)) > 0) {\n        // var obj = {}\n        val = p.alias_on\n        // status.push(obj)\n    } else {\n        // var obj = {}\n        val = p.alias_off\n        // status.push(obj)\n    }\n    var idx = names.indexOf(p.name)\n    var o = {}\n    o[p.name] = val\n    if(idx == -1) {\n        status.push(o)\n    } else {\n        status[idx] = o\n    }\n});\n\nflow.set(\"Status\", status)","outputs":1,"noerr":0,"x":1400.0230712890625,"y":562.7031860351562,"wires":[[]]},{"id":"5c7e84c5.b91cbc","type":"function","z":"6b3bbc5a.1e6d04","name":"Parse Alarms","func":"\nvar alarmMsg = \"Current Time        \" + msg.timeStamp\nalarmMsg += \"\\nLimerock post estate\"\nvar voiceMsg = \"Hello. There are active alarms at location Limerock post estate \"\n\nvar newAlarm = false\n\nflow.set(\"alarmRegDate\", msg.timeStamp)\nvar alarms = flow.get(\"Alarms\")||[]\nvar old_names = []\nalarms.forEach(function(a){\n  old_names.push(Object.keys(a)[0]) \n});\n\n// var new_alarms = []\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    // ignore spamming Tank 2 L Alarm 10-18-2019 will\n  if(p.name.indexOf('L Alarm') == -1) {\n       \n     if((r & Math.pow(2,p.bit)) > 0) {\n      var obj = {}\n      obj[p.name] = p.alias_on\n    //   new_alarms.push(obj)\n     } else {\n      var obj = {}\n      obj[p.name] = p.alias_off\n    //   new_alarms.push(obj)\n     }\n    \n    // node.error(old_names)\n    var idx = old_names.indexOf(p.name)\n    // node.error('INDEX OF NAME')\n    // node.error(idx)\n    \n    if (idx != -1) {\n        // node.error('obj[p.name]')\n        // node.error(obj[p.name])\n        // node.error('alarms[idx][p.name]')\n        // node.error(alarms[idx][p.name])        \n        \n        \n        if(alarms[idx][p.name] != obj[p.name]) {\n          if(obj[p.name] == p.alias_on) {\n             alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n             voiceMsg = voiceMsg + \"Active. \" + p.name + \".\"\n          } else {\n             alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n          }\n          newAlarm = true\n        } \n        \n        alarms[idx][p.name] = obj[p.name]\n        \n    } else {\n        alarms.push(obj)\n    }\n    \n  }\n    \n});\n\n\n\nflow.set(\"Alarms\", alarms)\n\nif(newAlarm) {\n    var alarmActive = false\n    alarms.forEach(function(a){\n        var val = Object.keys(a)[0]\n        val = a[val]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            alarmActive = true\n        }\n    });\n    flow.set('alarmActive', alarmActive)\n    // if active alarm, call and text\n    if(alarmMsg.indexOf('Alarm Active') != -1) {\n        voiceMsg = voiceMsg + \". Press any key to acknowledge the alarm.\"\n        flow.set('voiceMsg', voiceMsg)\n        return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n    } else {\n    return {\"payload\": alarmMsg}     \n    }\n    // if alarm clear, just text\n   \n} \n\n\n\n\n\n\n\n\n\n\n\n// var alarmMsg = \"Current Time        \" + msg.timeStamp\n// alarmMsg += \"\\nConroe\"\n\n// var voiceMessage = \"Hello. There are active alarms at location. Conroe. \"\n\n// var newAlarm = false\n\n// flow.set(\"alarmRegDate\", msg.timeStamp)\n// var old_alarms = flow.get(\"Alarms\")||[]\n// var old_names = []\n// old_alarms.forEach(function(a){\n//   old_names.push(Object.keys(a)[0]) \n// });\n\n// var new_alarms = []\n// var r = msg.payload[0]\n\n// msg.points.forEach(function(p){\n\n//      if((r & Math.pow(2,p.bit)) > 0) {\n//       var obj = {}\n//       obj[p.name] = p.alias_on\n//       new_alarms.push(obj)\n//      } else {\n//       var obj = {}\n//       obj[p.name] = p.alias_off\n//       new_alarms.push(obj)\n//      }\n    \n//     // node.error(old_names)\n//     var idx = old_names.indexOf(p.name)\n//     // node.error('INDEX OF NAME')\n//     // node.error(idx)\n    \n//     if (idx != -1) {\n//         // node.error('obj[p.name]')\n//         // node.error(obj[p.name])\n//         // node.error('old_alarms[idx][p.name]')\n//         // node.error(old_alarms[idx][p.name])        \n        \n//         if(old_alarms[idx][p.name] != obj[p.name]) {\n//           if(obj[p.name] == p.alias_on) {\n//              alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n//              voiceMsg = voiceMsg + \"Active:   \" + p.name + \".\"\n//           } else {\n//              alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n//           }\n//           newAlarm = true\n//         } \n//     }\n    \n// });\n\n\n\n// flow.set(\"Alarms\", new_alarms)\n\n// if(newAlarm) {\n//     // if active alarm, call and text\n//     if(alarmMsg.indexOf('Alarm Active') != -1) {\n//         return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n//     } else {\n//     return {\"payload\": alarmMsg}     \n//     }\n//     // if alarm clear, just text\n   \n// } \n","outputs":2,"noerr":0,"x":1364,"y":635,"wires":[["86d2066e.0da898"],["137d1c72.4c4004"]]},{"id":"6ee99e9d.50be4","type":"function","z":"6b3bbc5a.1e6d04","name":"Parse Register Value","func":"if(msg.parse.length > 0) {\nvar parse = JSON.parse(msg.parse)\nvar val = msg.payload\n\n\nparse.forEach(function(p){\n    \nswitch(p.func) {\n    \ncase \"float32ToNum\":\nvar bits = (val[0] << 16 | val[1]);\nvar sign = ((bits >>> 31) == 0) ? 1.0 : -1.0;\nvar e = ((bits >>> 23) & 0xff);\nvar m = (e == 0) ? (bits & 0x7fffff) << 1 : (bits & 0x7fffff) | 0x800000;\nvar f = sign * m * Math.pow(2, e - 150);\nf = Math.fround(f);\nf = parseFloat(f)\nf = f.toFixed(2)\nval = f\nbreak;\n\ncase \"scale\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    \n    val = val * p.param\nbreak;  \n\ncase \"lact1SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 1; i <= 3; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;   \n\ncase \"lact2SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 4; i <= 5; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;  \n\ncase \"lact3SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 6; i <= 8; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;  \n\n\ncase \"alias\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    \n    val = p.param[val]\n    \nbreak;\n\ncase \"int32ABCD\":\n    if(val.constructor == Array) {\n        val = (val[0] << 16) + val[1]   \n    } else {\n        val = val\n    }\n    \nbreak;\n\n// LACT 1: 2,3,4\n// LACT 2: 5,6\n// LACT 3: 7,8,9\n\n\ndefault:\nnode.error('DIDNT FIND PARSER')\n    val = msg.payload[0]\n    break;\n\n}\n\n});\n} else {\n    // default for no parser is single reg value int\n    var val = msg.payload[0]\n}\n\n\n// cache value\nvar status = flow.get(msg.group)||[]\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n\nvar idx = names.indexOf(msg.name)\nvar o = {}\no[msg.name] = val\nif(idx == -1) {\n    status.push(o)\n} else {\n    status[idx] = o\n}\n\n\nflow.set(msg.group, status)","outputs":1,"noerr":0,"x":1337.0035400390625,"y":762.69921875,"wires":[["47462cec.5b1994"]]},{"id":"47462cec.5b1994","type":"debug","z":"6b3bbc5a.1e6d04","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1287.0386962890625,"y":920.9375,"wires":[]},{"id":"96d5b37f.5d55e","type":"function","z":"6b3bbc5a.1e6d04","name":"CLEAR CACHE","func":"// flow.set('scadaCommAlarm', \"Alarm\")\n// flow.set('Alarms', undefined)\n// flow.set('points', undefined)","outputs":1,"noerr":0,"x":639.0386962890625,"y":818.9375,"wires":[[]]},{"id":"6f08257d.c89bdc","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":377,"y":819,"wires":[["96d5b37f.5d55e"]]},{"id":"ee09542f.bb7458","type":"function","z":"6b3bbc5a.1e6d04","name":"Send Command Start","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nGBRP Limerock Post Estate\\n This is a test SMS alarm message if received you will receive SMS alarms. Please Call Scooter if this list needs to be modifyed. Any alarms following are actual\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1919,"y":221,"wires":[[]]},{"id":"690fcdd0.b4e8a4","type":"comment","z":"6b3bbc5a.1e6d04","name":"CLEAR CACHE","info":"","x":508.5230712890625,"y":776.0390625,"wires":[]},{"id":"ca60b89b.026538","type":"comment","z":"6b3bbc5a.1e6d04","name":"WELCOME MESSAGE","info":"","x":679.5230484008789,"y":916.0390491485596,"wires":[]},{"id":"d4a75eef.bc4ce","type":"function","z":"6b3bbc5a.1e6d04","name":"Send Levels","func":"\n    var statusMsg = \"\\n\"\n    statusMsg += \"\\nCastaway 6 Compressor\\n\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var status = flow.get(\"Levels\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nLevels Update Time         \" + statusRegDate\n    status.sort()\n\n//spacing+naming\nvar sn = \"\\nWater:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n//Call each by name for spacing/sorting\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(name == \"Water Tank Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        \n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt             \n        }\n    });   \n\n//spacing+naming\nvar sn = \"\\nConroe 1:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(name == \"Conroe #1 Tank 1 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank 1\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt           \n        }\n    });    \n\n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(name == \"Conroe #1 Tank 2 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank 2\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt          \n        }\n    });    \n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(name == \"Conroe #1 Tank 3 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank 3\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt         \n        }\n    });   \n\n//spacing+naming\nvar sn = \"\\nMidland:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(name == \"Midland Tank 1 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank 1\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt           \n        }\n    });   \n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(name == \"Midland Tank 2 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tamk 2\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt            \n        }\n    });   \n\n//spacing+naming\nvar sn = \"\\nConroe 2:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(name == \"Conroe #2 Tank 1 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank 1\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt           \n        }\n    });\n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]    \n        if(name == \"Conroe #2 Tank 2 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank 2\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt            \n        }\n    });\n\n    status.forEach(function(o){\n        var name = Object.keys(o)[0]    \n        if(name == \"Conroe #2 Tank 3 Level\"){\n         var st = \"\\n\" + \"      \" + \"Tank 3\" + \" (Ft): \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n                var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt            \n        }\n    });\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1240.499610900879,"y":47.99998664855957,"wires":[["65574e99.455a"]]},{"id":"7fde12c2.b419ac","type":"function","z":"6b3bbc5a.1e6d04","name":"Send Setpoints","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nLimerock-PE\\nSetpoints Update:\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var status = flow.get(\"Setpoints\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nSetpoints Time         \" + statusRegDate\n    status.sort()\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + name\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        if(name.indexOf(\"Select\") != -1) {\n        statusMsg = statusMsg + st + o[name]      \n        } else {\n                    var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt  \n        }\n                 \n    \n    });\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1250.499610900879,"y":147.99998664855957,"wires":[["65574e99.455a"]]},{"id":"2104559b.b4c6ba","type":"http in","z":"6b3bbc5a.1e6d04","name":"Alarm Call Pickup","url":"/call_answered","method":"post","upload":false,"swaggerDoc":"","x":1814.5034866333008,"y":1236.0350551605225,"wires":[["20af038.40b90fc"]]},{"id":"ad68292.96d03d8","type":"http response","z":"6b3bbc5a.1e6d04","name":"Send TwiML","statusCode":"200","headers":{},"x":2219.503486633301,"y":1236.0350551605225,"wires":[]},{"id":"137d1c72.4c4004","type":"function","z":"6b3bbc5a.1e6d04","name":"Start Call","func":"// msg.headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n// msg.headers = {\"Content-Type\": \"application/json\"}\n// msg.payload = {\"From\": \"+14322162465\", \"To\": \"+14696512674\", \"Url\": \"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"}\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls?To=14696512674&From=+14322162465&Url=http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls.json?To%3D%2B14696512674%26From%3D%2B14322162465%26\"\n// msg.url = \"https%3A%2F%2Fapi.twilio.com%2F2010-04-01%2FAccounts%2FACd3d1e28d6055eac9af7579cbe9b2df67%2FCalls%3FTo%3D%2B14696512674%26From%3D%2B14322162465%26Url%3Dhttp%3A%2F%2Fec2-18-218-144-146.us-east-2.compute.amazonaws.com%3A1880%2Fcall_answered\"\n\n// Download the helper library from https://www.twilio.com/docs/node/install\n// Your Account Sid and Auth Token from twilio.com/console\nnode.error(\"MESSAGE IN CALL\")\nnode.error(msg)\nvar ack = flow.get('alarmAcked')||false\nif(!ack || msg.reset) {\n    if(msg.reset) {\n        flow.set('alarmAcked', false)\n    }\nvar twilio = global.get('twilio')\nconst accountSid = 'ACd3d1e28d6055eac9af7579cbe9b2df67';\nconst authToken = '075c463b1989281acdfe67dd508ea15a';\nconst client = twilio(accountSid, authToken);\n\nvar users = flow.get('alarmContacts')  \nvar nums = Object.keys(users)\nvar numIndex = flow.get('numIndex')||0\n\nif(numIndex >= nums.length) {\n    numIndex = 0\n} else if(msg.reset) {\n    numIndex = 0\n}\nnode.error(numIndex)\nvar to = nums[numIndex]\nnode.error(\"ALARM CALL NOW\")\nnode.error(to)\nnumIndex = numIndex + 1\nflow.set('numIndex', numIndex)\n\nclient.calls\n      .create({\n         url: 'http://ec2-3-135-236-118.us-east-2.compute.amazonaws.com:1880/call_answered',\n         to: to,\n         from: '+12542210595'\n      })\n      .then(call => node.error(call.sid))\n      .done(node.error);\n      \n      \nreturn {'payload': 0}\n}","outputs":1,"noerr":0,"x":1650.5040283203125,"y":970.0352783203125,"wires":[["7bb80a45.78cb44"]]},{"id":"20af038.40b90fc","type":"function","z":"6b3bbc5a.1e6d04","name":"Process Call","func":"// node.error(\"CALL PICKED UP\")\n// var twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n//     <Response> \\\n//     <Gather action=\\\"http://ec2-13-59-107-160.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n//         <Say voice=\\\"woman\\\">Hello, there is an active alarm at the Conroe Location.  Press 1 to acknowledge and prevent the next operator from being notified.</Say> \\\n//         </Gather> \\\n//         <Say voice=\\\"woman\\\">Sorry, that choice is invalid.</Say> \\\n//     </Response>\"\n      var voiceMsg = flow.get('voiceMsg')\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n    <Response> \\\n      <Gather action=\\\"http://ec2-18-219-204-251.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n        <Say voice=\\\"woman\\\">\"+voiceMsg+\"</Say> \\\n      </Gather> \\\n      <Say voice=\\\"woman\\\">Sorry, I didn't get your response. You can still acknowledge the alarm by texting 9 or a. c. k. to this number. Goodbye.</Say> \\\n    </Response>\";\n\nmsg.payload = twiml_response;\nreturn msg;      \n      \n\n// <Gather action=\\\"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n\n    //   </Gather> \\\n    //   <Say voice=\\\"woman\\\">Sorry, that choice is invalid.</Say> \\","outputs":1,"noerr":0,"x":2030.5034866333008,"y":1236.0350551605225,"wires":[["ad68292.96d03d8"]]},{"id":"8aa8b938.3412d8","type":"function","z":"6b3bbc5a.1e6d04","name":"handleGather","func":"// Use 2 outputs, 2nd is for mqtt topic/payload combination\n// Could be useful to post other caller info to a topic\n// var mqttOut = null;\n// var responseMsg = \"\";\nnode.error('INSIDE GATHER')\n// var name = \"wholehouse\";\n// var reading = context.global[name];\n\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n        <Response><Say voice=\\\"woman\\\"> \\\n\tYou have acknowledged the alarm.  No other operators will be called.  Check text message for alarm details. Goodbye.\\\n</Say>\\\n</Response>\"\nmsg.payload = twiml_response\nflow.set('alarmAcked', true)\nreturn [msg,msg]\n\n","outputs":1,"noerr":0,"x":2039.5269775390625,"y":1306.5741863250732,"wires":[["ad68292.96d03d8"]]},{"id":"2e50794e.b697f6","type":"catch","z":"6b3bbc5a.1e6d04","name":"","scope":null,"x":1993.7769241333008,"y":1411.4413051605225,"wires":[["7c3fb7b2.120bb8"]]},{"id":"7c3fb7b2.120bb8","type":"debug","z":"6b3bbc5a.1e6d04","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":2177.0347900390625,"y":1410.9803466796875,"wires":[]},{"id":"90b67586.226e28","type":"comment","z":"6b3bbc5a.1e6d04","name":"SECOND OUTPUT = VOICE","info":"","x":1703.5270080566406,"y":921.0741653442383,"wires":[]},{"id":"f17a983b.f4de38","type":"function","z":"6b3bbc5a.1e6d04","name":"SET ALARM CONTACTS","func":"// var contacts = { '+14696512674': 'William Wylie', '+18172473760': 'Mark Cowan' }\n// 4326645113 +14696512674,+18172473760, +14328133806,+14328131895,+14326614092,+14325565341,+14324139363,+14324137920,+14326648765,+14327411885,+14326645113\n// '+15752634941': 'Operator', '+14322084818':'Mr Worcester', '+18172473760':'de Boss', '+13375229291':'who-needs-sleep', '+15757257206':'', '+14326340166':''\nvar contacts = {'+13375229291':'sean','+19568849966':'Raúl', '+18064016202': 'Marc McClain','+18067828767':'Edel Sanchez','+18066320851':'Kelly Baker', '+18067828992' : 'Rick Tadlock' }\nflow.set('alarmContacts', contacts)","outputs":1,"noerr":0,"x":2070.02685546875,"y":1491.9647216796875,"wires":[[]]},{"id":"c3e9a944.86fe98","type":"function","z":"6b3bbc5a.1e6d04","name":"CLEAR ALARM CONTACTS","func":"flow.set('alarmContacts', undefined)","outputs":1,"noerr":0,"x":2081.526611328125,"y":1565.0740966796875,"wires":[[]]},{"id":"5a6c44d2.a46d5c","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":1848.5269508361816,"y":1492.0741558074951,"wires":[["f17a983b.f4de38"]]},{"id":"301c6154.0363be","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1844.5269241333008,"y":1565.0741176605225,"wires":[["c3e9a944.86fe98"]]},{"id":"9e995dea.34015","type":"http in","z":"6b3bbc5a.1e6d04","name":"Operator Input","url":"/operator_response","method":"post","upload":false,"swaggerDoc":"","x":1751.5271453857422,"y":1307.0741539001465,"wires":[["8aa8b938.3412d8","6c8ec041.e84b5","fb02c740.265438"]]},{"id":"c75b3ad3.f546d8","type":"trigger","z":"6b3bbc5a.1e6d04","op1":"","op2":"call_next","op1type":"nul","op2type":"str","duration":"5","extend":true,"units":"min","reset":"","bytopic":"all","name":"","x":1785.03515625,"y":1098.957275390625,"wires":[["137d1c72.4c4004"]]},{"id":"7bb80a45.78cb44","type":"delay","z":"6b3bbc5a.1e6d04","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1890.7850341796875,"y":969.4335327148438,"wires":[["c75b3ad3.f546d8"]]},{"id":"379c8117.c8434e","type":"function","z":"6b3bbc5a.1e6d04","name":"Alarm Acknowledge","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n   var alarms = flow.get(\"Alarms\")\n   var scadaCommAlarm = flow.get(\"scadaCommAlarm\")||\"Normal\"\n   var updateOtherUsersMsg = null\n   var alarmAcked = flow.get(\"alarmAcked\")||false\n    if(alarms && !alarmAcked) {\n        \n    var activeAlarms = \"\"\n    if(scadaCommAlarm == \"Alarm\") {\n        activeAlarms = \"SCADA Comm Alarm, \"\n    }\n    \n        alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms = activeAlarms + name + \", \"\n        }\n    });\n    if ((activeAlarms.length > 0)) {\n        updateOtherUsersMsg = {\"payload\": {}}\n        updateOtherUsersMsg.payload.To = msg.payload.From\n        // node.error(\"updateOtherUsersMsg\", updateOtherUsersMsg)\n        // node.error(\"updateOtherUsersMsg.payload.To\", updateOtherUsersMsg.payload.To)\n        // node.error(\"updateOtherUsersMsg.payload.From\", updateOtherUsersMsg.payload.From)\n        \n     activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\n     statusMsg += \"\\nLimerock-PE\\nAlarms Acknowledged: \" + activeAlarms  \n     flow.set(\"alarmAcked\", true)\n    } else {\n     statusMsg += \"\\nLimerock-PE\\nNo Active Alarms to Acknowledge\"       \n    }\n\n    } else {\n        statusMsg += \"\\nLimerock-PE\\nNo Active Alarms to Acknowledge\" \n    }\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  if(updateOtherUsersMsg) {\n     return [msg, updateOtherUsersMsg]; \n  } else {\n      return [msg];\n  }\n  \n\n","outputs":2,"noerr":0,"x":1270.5230712890625,"y":236.03905487060547,"wires":[["65574e99.455a"],["fb02c740.265438"]]},{"id":"6c8ec041.e84b5","type":"debug","z":"6b3bbc5a.1e6d04","name":"OEPRATOR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1838.523048400879,"y":1376.5390491485596,"wires":[]},{"id":"fb02c740.265438","type":"function","z":"6b3bbc5a.1e6d04","name":"send ack text message to other users","func":"node.error(\"SEND ACK TEXT MESSAGE FUNCTION\")\nvar users = flow.get('alarmContacts')\nvar nums = Object.keys(users)\nnode.error(\"MSG PAYLOAD TO\")\nnode.error(msg.payload.To)\nvar idx = nums.indexOf(msg.payload.To)\nvar userName = users[nums[idx]]\nnums.splice(idx,1)\nvar activeAlarms = \"\"\nvar count = 0\nvar alarms = flow.get(\"Alarms\")\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")||\"Normal\"\nif(scadaCommAlarm == \"Alarm\") {\n    activeAlarms += \"SCADA Comm Alarm, \"\n    count += 1\n}\n\n\nnode.error(\"BEFORE LOOP\")\n    alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms += name + \", \"\n            count += 1\n        }\n    });\n    activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\nnode.error(\"AFTER LOOP\")\nif(count > 1) {\nvar msg = \"The alarms: \" + activeAlarms + \" were acknowledged by: \" + userName    \n} else {\nvar msg = \"The alarm: \" + activeAlarms + \" was acknowledged by: \" + userName    \n}\n\nvar n = \"\"\nnums.forEach(function(num){\n   n = n + num + \",\" \n});\nn = n.substring(0,n.length-1)\nvar obj = {\"payload\": msg, \"topic\": n, \"reset\": true}\nnode.error(obj)\nreturn obj","outputs":1,"noerr":0,"x":1368.5231857299805,"y":1135.5391130447388,"wires":[["c75b3ad3.f546d8"]]},{"id":"e9972cfc.4d28d","type":"sms","z":"6b3bbc5a.1e6d04","name":"Customer Twilio","message":"","numbers":"","throttle":"5000","twilio":"a8095381.d897d","x":2216,"y":149,"wires":[[]]},{"id":"eb6d7ff4.05ccf","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"Hello, this is the Hannathon Conroe Callout Alarm Number.  SMS alarms will come from this. You can text this number '1' for site status, '2' to reset alarms, '3' for setpoints, '4' for Tank Levels, '9' to acknowledge alarms.  If you are receiving this in error or need help, please contact Mark Cowan 8172473760 or Will Wylie 4695822274 #0.  Text 'STOP' to stop messages and 'START' to start messages if they were previously stopped.","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":657.7808570861816,"y":970.9609832763672,"wires":[[]]},{"id":"42045282.b9fd3c","type":"mqtt out","z":"6b3bbc5a.1e6d04","name":"Limerock","topic":"Limerock 6","qos":"1","retain":"","broker":"3c1c4f23.21589","x":681.4996109008789,"y":1064.9999866485596,"wires":[]},{"id":"572b9bfd.2e98b4","type":"comment","z":"6b3bbc5a.1e6d04","name":"SCADA HEALTH MANAGER MQTT KEEPALIVE","info":"","x":755.4996109008789,"y":1023.9999866485596,"wires":[]},{"id":"ceab2db7.3b316","type":"cron","z":"6b3bbc5a.1e6d04","name":"","crontab":"0 */3 * * * *","x":465.4996109008789,"y":218.99998664855957,"wires":[["726ae686.9b37f8"]]},{"id":"24db7d7b.923402","type":"comment","z":"6b3bbc5a.1e6d04","name":"REFRESH points every 3 minutes","info":"","x":730,"y":220,"wires":[]},{"id":"95939d00.31de6","type":"function","z":"6b3bbc5a.1e6d04","name":"Comm Status Cache","func":"var m = \"Current Time        \" + msg.timeStamp\nm += \"\\nGRBP Limerock Post Estate\\n\"\n\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Cleared:  SCADA Communication Now Online\"\n        msg.payload = m\n        return msg\n","outputs":1,"noerr":0,"x":1140,"y":420,"wires":[["86d2066e.0da898"]]},{"id":"154b7548.f24d1b","type":"inject","z":"6b3bbc5a.1e6d04","name":"SEND SCADA COMM ALM CLEAR","topic":"","payload":"good","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":893.4996147155762,"y":347.99996757507324,"wires":[["4469858a.1def1c"]]},{"id":"4469858a.1def1c","type":"moment","z":"6b3bbc5a.1e6d04","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":895.9996166229248,"y":419.99997901916504,"wires":[["95939d00.31de6"]]},{"id":"6b898b0.2dc9374","type":"sms","z":"6b3bbc5a.1e6d04","name":"Customer Twilio","message":"","numbers":"+13615377177, +8064386185","throttle":"5000","twilio":"a8095381.d897d","x":2223,"y":676,"wires":[[]]},{"id":"5f8bd03b.564d1","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":440,"y":731,"wires":[["3f3ab6ac.b04b9a"]]},{"id":"60bef473.ba61dc","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":190,"y":1300,"wires":[["f0922b9f.5d8e78"]]},{"id":"f0922b9f.5d8e78","type":"function","z":"6b3bbc5a.1e6d04","name":"CLEAR CACHE","func":"flow.set(\"Flow\", undefined)\nflow.set(\"Levels\", undefined)\nflow.set(\"Other\", undefined)\nflow.set(\"Status\", undefined)\nflow.set(\"Alarms\", undefined)\nflow.set(\"Setpoints\", undefined)","outputs":1,"noerr":0,"x":381.5,"y":1299.8905029296875,"wires":[[]]},{"id":"13c46308.be251d","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1767,"y":119,"wires":[["1c3f57a4.8e51e8"]]},{"id":"ec07dc1e.b7c27","type":"function","z":"6b3bbc5a.1e6d04","name":"Send ESD","func":"var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nGBRP Limerock Post Estate\\n Limerock site communications are down, Raul De La Rosa - Primary alarms contact for all Cell bot issues. this is the last will and testament of the GRBP Limerock, signing off\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n \n  msg.payload = statusMsg\n  var subj = \"Compressor Alarms\"\n  msg.topic = subj\n  return msg;\n  \n\n","outputs":1,"noerr":0,"x":1578,"y":258,"wires":[["6eea7ac3.a589a4"]]},{"id":"d98b9a4c.b72978","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1554,"y":128,"wires":[["ccdcd9ed.5fac98","379c8117.c8434e"]]},{"id":"5ceaf8d3.705de8","type":"sendgrid","z":"6b3bbc5a.1e6d04","from":"Notify@cownconsultingservices.com","to":"","name":"","content":"text","x":2012,"y":373,"wires":[]},{"id":"55854fa2.7359e","type":"sendgrid","z":"6b3bbc5a.1e6d04","from":"Notify@cowanconsultingservices.com","to":"scooter@cowanconsultingservices.com","name":"scoot","content":"text","x":1590,"y":840,"wires":[]},{"id":"d84ea5a2.69de38","type":"sendgrid","z":"6b3bbc5a.1e6d04","from":"Notify@cowanconsultingservices.com","to":"Raul@cowanconsultingservices.com","name":"Raúl","content":"text","x":1722,"y":840,"wires":[]},{"id":"43ce359c.c7645c","type":"sendgrid","z":"6b3bbc5a.1e6d04","from":"Notify@cowanconsultingservices.com","to":"willyw@cowanconsultingservices.com","name":"willyw","content":"text","x":1852,"y":838,"wires":[]},{"id":"707b6fd8.86e9","type":"sendgrid","z":"6b3bbc5a.1e6d04","from":"Notify@cowanconsultingservices.com","to":"wallyh@cowanconsultingservices.com","name":"wally","content":"text","x":1984,"y":836,"wires":[]},{"id":"86d2066e.0da898","type":"delay","z":"6b3bbc5a.1e6d04","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1600,"y":760,"wires":[["dad68e67.1e229","5ceaf8d3.705de8","789e55ce.80760c"]]},{"id":"789e55ce.80760c","type":"trigger","z":"6b3bbc5a.1e6d04","op1":"","op2":"","op1type":"nul","op2type":"pay","duration":"5","extend":false,"units":"min","reset":"","bytopic":"all","name":"","x":2017.5,"y":472,"wires":[["6b898b0.2dc9374","6eea7ac3.a589a4"]]},{"id":"1c3f57a4.8e51e8","type":"moment","z":"6b3bbc5a.1e6d04","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":1837,"y":171,"wires":[["ee09542f.bb7458"]]},{"id":"ccdcd9ed.5fac98","type":"moment","z":"6b3bbc5a.1e6d04","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":1560,"y":205,"wires":[["ec07dc1e.b7c27"]]},{"id":"87710d35.03066","type":"mqtt out","z":"6b3bbc5a.1e6d04","name":"","topic":"","qos":"1","retain":"","broker":"f7d0da0.52ddc28","x":991,"y":1489,"wires":[]},{"id":"bb17d5b2.d387f8","type":"debug","z":"6b3bbc5a.1e6d04","name":"MQTT TEST","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":955,"y":1593,"wires":[]},{"id":"6eb558a1.679a88","type":"function","z":"6b3bbc5a.1e6d04","name":"mqtt standard ","func":"//This takes the cache of point and iterates over it\n//to make it an object so tha tags come in \"pretty\"\n// and standardized into Ignition\nalarms = msg.payload[\"Alarms\"]\npoints = alarms[\"points\"]\nvalues = flow.get(\"Alarms\")\nvar newPoints = {}\nlenPoints = points.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   name = points[index].name\n   value = values[index]\n   if (value[name] == \"Alarm\"){\n       alias = \"Alarm\"\n       trueValue = true\n   } else if (value[name] == \"Normal\"){\n       alias = \"Clear\"\n       trueValue = false\n   } else {\n       trueValue = value[name]\n   }\n   if (name.includes(\"Alarm\") || name.includes(\"alarm\")){\n       units = \"none\"\n   } else if (name.includes(\"Pump\") || name.includes(\"pump\")){\n       units = \"psi\"\n   } else if (name.includes(\"Flow\") || name.includes(\"flow\")){\n       units = \"bpd\"\n   } else if (name.includes(\"Temp\") || name.includes(\"temp\")){\n       units = \"°F\"\n   } else if (name.includes(\"Tank\") || name.includes(\"Tank\")){\n       units = \"none\"\n   } else {\n       units = \"notinconfig\"\n   }\n   label = name.replace(\"Limerock-PE \", \"\")\n   point = {label: label, value: trueValue, units: units, alias: alias }\n   newPoints[label] = point\n   index++\n}\nmsg.payload = newPoints\nmsg.topic = \"GRB/postEstate\"\nreturn msg;","outputs":1,"noerr":0,"x":797,"y":1508,"wires":[["bb17d5b2.d387f8","87710d35.03066"]]},{"id":"dfca688e.abe128","type":"inject","z":"6b3bbc5a.1e6d04","name":"","topic":"","payload":"points","payloadType":"flow","repeat":"1","crontab":"","once":false,"onceDelay":0.1,"x":538,"y":1497,"wires":[["6eb558a1.679a88"]]}]