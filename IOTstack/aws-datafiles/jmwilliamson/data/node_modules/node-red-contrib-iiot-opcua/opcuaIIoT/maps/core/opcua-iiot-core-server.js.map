{"version":3,"sources":["core/opcua-iiot-core-server.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","server","internalDebugLog","detailDebugLog","isa95DebugLog","isa95DetailDebugLog","flex","simulatorInterval","maxTimeInterval","timeInterval","name","simulateVariation","data","value","Math","sin","tankLevel","setValueFromSource","dataType","constructAddressSpaceFromScript","constructAddressSpaceScript","eventObjects","Promise","reject","engine","addressSpace","resolve","err","Error","constructAddressSpace","asoDemo","organizedBy","rootFolder","browseName","views","displayName","constructAlarmAddressSpaceDemo","objects","nodeId","description","setInterval","variable1","componentOf","vendorName","get","coreServer","nodeOPCUA","Variant","variable2","parseFloat","StatusCodes","Good","variable3","addVariable","availableMemory","installHistoricalDataNode","memoryVariable","counterValue","counterVariable","fullcounterValue","fullcounterVariable","sourceTimestamp","sourcePicoseconds","externalValueWithSourceTimestamp","random","Date","timestamped_get","valueRank","arrayDimensions","arrayType","dimensions","VariantArrayType","Matrix","Array","now","DataType","DateTime","UTC","LocalizedText","text","locale","fanSpeed","addMethod","inputArguments","Scalar","outputArguments","bindMethod","context","nbBarks","volume","i","callback","barks","soundVolume","join","callMethodResult","statusCode","String","analogItemNode","engineeringUnitsRange","addAnalogDataItem","instrumentRange","engineeringUnits","low","high","standardUnits","degree_celsius","addReference","view","referenceType","start","node","this","initialized","endpoints","forEach","endpoint","endpointUrl","endpointDescriptions","endpointDescription","channel","toString","securityPolicyUri","session","clientDescription","remotePort","on","sessionName","productUri","applicationName","applicationType","stringify","serverInfo","sessionTimeout","sessionId","reason","JSON","module","exports"],"mappings":"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","file":"../../core/opcua-iiot-core-server.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {server: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.server\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {server: {}}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.core = de.biancoroyal.opcua.iiot.core.server.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.internalDebugLog = de.biancoroyal.opcua.iiot.core.server.internalDebugLog || require('debug')('opcuaIIoT:server') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.detailDebugLog = de.biancoroyal.opcua.iiot.core.server.detailDebugLog || require('debug')('opcuaIIoT:server:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.isa95DebugLog = de.biancoroyal.opcua.iiot.core.server.isa95DebugLog || require('debug')('opcuaIIoT:server:ISA95') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.isa95DetailDebugLog = de.biancoroyal.opcua.iiot.core.server.isa95DetailDebugLog || require('debug')('opcuaIIoT:server:ISA95:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.flex = de.biancoroyal.opcua.iiot.core.server.flex || {} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.flex.internalDebugLog = de.biancoroyal.opcua.iiot.core.server.flex.internalDebugLog || require('debug')('opcuaIIoT:server:flex') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.simulatorInterval = de.biancoroyal.opcua.iiot.core.server.simulatorInterval || null // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.maxTimeInterval = de.biancoroyal.opcua.iiot.core.server.maxTimeInterval || 500000 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.timeInterval = de.biancoroyal.opcua.iiot.core.server.timeInterval || 1 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.server.name = de.biancoroyal.opcua.iiot.core.server.name || 'server' // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.server.simulateVariation = function (data) {\n  let server = de.biancoroyal.opcua.iiot.core.server\n\n  let value = (1.0 + Math.sin(server.timeInterval / 360 * 3)) / 2.0\n\n  server.timeInterval++\n  if (server.timeInterval > server.maxTimeInterval) {\n    server.timeInterval = 1\n  }\n\n  if (data.tankLevel) data.tankLevel.setValueFromSource({dataType: 'Double', value: value})\n  if (data.tankLevel2) data.tankLevel2.setValueFromSource({dataType: 'Double', value: value})\n}\n\nde.biancoroyal.opcua.iiot.core.server.constructAddressSpaceFromScript = function (server, constructAddressSpaceScript, eventObjects) {\n  de.biancoroyal.opcua.iiot.core.server.flex.internalDebugLog('Construct Address Space From Script')\n  return new Promise(\n    function (resolve, reject) {\n      if (server.engine && constructAddressSpaceScript && constructAddressSpaceScript !== '') {\n        try {\n          constructAddressSpaceScript(de.biancoroyal.opcua.iiot.core.server.flex, server.engine.addressSpace, eventObjects, resolve)\n        } catch (err) {\n          reject(err)\n        }\n      } else {\n        reject(new Error('Wrong Parameters Construct AddressSpace From Script'))\n      }\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.server.constructAddressSpace = function (server, asoDemo) {\n  return new Promise(\n    function (resolve, reject) {\n      if (!server) {\n        reject(new Error('Server Not Valid To Construct Address Space'))\n      }\n\n      let coreServer = de.biancoroyal.opcua.iiot.core.server\n      let addressSpace = server.engine.addressSpace\n\n      if (!addressSpace) {\n        reject(new Error('No AddressSpace From OPC UA Server Engine'))\n      }\n\n      let view = addressSpace.addView({\n        organizedBy: addressSpace.rootFolder.views,\n        browseName: 'BiancoRoyalView',\n        displayName: 'Bianco Royal View'\n      })\n\n      if (!asoDemo) {\n        resolve()\n      } else {\n        let constructAlarmAddressSpaceDemo = require('../helpers/alarms-and-conditions-demo').constructAlarmAddressSpaceDemo\n        let data = {}\n        constructAlarmAddressSpaceDemo(data, addressSpace)\n\n        de.biancoroyal.opcua.iiot.core.server.timeInterval = 1\n        de.biancoroyal.opcua.iiot.core.server.simulatorInterval = setInterval(function () {\n          de.biancoroyal.opcua.iiot.core.server.simulateVariation(data)\n        }, 500)\n\n        let vendorName = addressSpace.addObject({\n          organizedBy: addressSpace.rootFolder.objects,\n          nodeId: 'ns=4;i=1234',\n          browseName: 'BiancoRoyal',\n          displayName: 'Bianco Royal',\n          description: 'Bianco Royal - Software Innovations®'\n        })\n\n        let variable1 = 1\n        setInterval(function () {\n          if (variable1 < 1000000) {\n            variable1 += 1\n          } else {\n            variable1 = 0\n          }\n        }, 100)\n\n        addressSpace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'ns=4;i=16479',\n          browseName: 'MyVariable1',\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                value: variable1\n              })\n            }\n          }\n        })\n\n        let variable2 = 10.0\n\n        addressSpace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'ns=4;b=1020FFAA',\n          browseName: 'MyVariable2',\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                value: variable2\n              })\n            },\n            set: function (variant) {\n              variable2 = parseFloat(variant.value)\n              return coreServer.core.nodeOPCUA.StatusCodes.Good\n            }\n          }\n        })\n\n        let variable3 = 1000.0\n\n        addressSpace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'ns=4;s=TestReadWrite',\n          browseName: 'TestReadWrite',\n          displayName: 'Test Read and Write',\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                value: variable3\n              })\n            },\n            set: function (variant) {\n              variable3 = parseFloat(variant.value)\n              return coreServer.core.nodeOPCUA.StatusCodes.Good\n            }\n          }\n        })\n\n        let memoryVariable = addressSpace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'ns=4;s=free_memory',\n          browseName: 'FreeMemory',\n          displayName: 'Free Memory',\n          dataType: 'Double',\n\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                value: coreServer.core.availableMemory()\n              })\n            }\n          }\n        })\n        addressSpace.installHistoricalDataNode(memoryVariable)\n\n        let counterValue = 0\n        setInterval(function () {\n          if (counterValue < 65000) {\n            counterValue += 1\n          } else {\n            counterValue = 0\n          }\n        }, 1000)\n\n        let counterVariable = addressSpace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'ns=4;s=Counter',\n          browseName: 'Counter',\n          dataType: 'UInt16',\n\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'UInt16',\n                value: counterValue\n              })\n            }\n          }\n        })\n        addressSpace.installHistoricalDataNode(counterVariable)\n\n        let fullcounterValue = 0\n        setInterval(function () {\n          if (fullcounterValue < 100000) {\n            fullcounterValue += 1\n          } else {\n            fullcounterValue = -100000\n          }\n        }, 1000)\n\n        let fullcounterVariable = addressSpace.addVariable({\n          componentOf: vendorName,\n          nodeId: 'ns=4;s=FullCounter',\n          browseName: 'FullCounter',\n          dataType: 'Int32',\n\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Int32',\n                value: fullcounterValue\n              })\n            }\n          }\n        })\n        addressSpace.installHistoricalDataNode(fullcounterVariable)\n\n        let externalValueWithSourceTimestamp = new coreServer.core.nodeOPCUA.DataValue({\n          value: new coreServer.core.nodeOPCUA.Variant({dataType: 'Double', value: 10.0}),\n          sourceTimestamp: null,\n          sourcePicoseconds: 0\n        })\n\n        setInterval(function () {\n          externalValueWithSourceTimestamp.value.value = Math.random()\n          externalValueWithSourceTimestamp.sourceTimestamp = new Date()\n        }, 1000)\n\n        addressSpace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 'ns=4;s=Pressure',\n          browseName: 'Pressure',\n          dataType: 'Double',\n          value: {\n            timestamped_get: function () {\n              return externalValueWithSourceTimestamp\n            }\n          }\n        })\n\n        addressSpace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 'ns=4;s=Matrix',\n          browseName: 'Matrix',\n          dataType: 'Double',\n          valueRank: 2,\n          arrayDimensions: [3, 3],\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                arrayType: coreServer.core.nodeOPCUA.VariantArrayType.Matrix,\n                dimensions: [3, 3],\n                value: [1, 2, 3, 4, 5, 6, 7, 8, 9]\n              })\n            }\n          }\n        })\n\n        addressSpace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 'ns=4;s=Position',\n          browseName: 'Position',\n          dataType: 'Double',\n          valueRank: 1,\n          arrayDimensions: null,\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                arrayType: coreServer.core.nodeOPCUA.VariantArrayType.Array,\n                value: [1, 2, 3, 4]\n              })\n            }\n          }\n        })\n\n        addressSpace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 'ns=4;s=PumpSpeed',\n          browseName: 'PumpSpeed',\n          displayName: 'Pump Speed',\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                value: 200 + 100 * Math.sin(Date.now() / 10000)\n              })\n            }\n          }\n        })\n\n        addressSpace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 'ns=4;s=SomeDate',\n          browseName: 'SomeDate',\n          displayName: 'Some Date',\n          dataType: 'DateTime',\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: coreServer.core.nodeOPCUA.DataType.DateTime,\n                value: new Date(Date.UTC(2016, 9, 13, 8, 40, 0))\n              })\n            }\n          }\n        })\n\n        addressSpace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 'ns=4;s=MultiLanguageText',\n          browseName: 'MultiLanguageText',\n          displayName: 'Multi Language Text',\n          dataType: 'LocalizedText',\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: coreServer.core.nodeOPCUA.DataType.LocalizedText,\n                value: [{text: 'multilingual text', locale: 'en'},\n                  {text: 'mehrsprachiger Text', locale: 'de'},\n                  {text: 'texte multilingue', locale: 'fr'}]\n              })\n            }\n          }\n        })\n\n        let fanSpeed = addressSpace.addVariable({\n          organizedBy: vendorName,\n          nodeId: 'ns=4;s=FanSpeed',\n          browseName: 'FanSpeed',\n          dataType: 'Double',\n          value: new coreServer.core.nodeOPCUA.Variant({dataType: 'Double', value: 1000.0})\n        })\n\n        setInterval(function () {\n          fanSpeed.setValueFromSource(new coreServer.core.nodeOPCUA.Variant({\n            dataType: 'Double',\n            value: 1000.0 + (Math.random() * 100 - 50)\n          }))\n        }, 10)\n\n        let method = addressSpace.addMethod(\n          vendorName, {\n            nodeId: 'ns=4;i=12345',\n            browseName: 'Bark',\n\n            inputArguments: [\n              {\n                name: 'barks',\n                dataType: 'UInt32',\n                arrayType: coreServer.core.nodeOPCUA.VariantArrayType.Scalar,\n                description: {text: 'specifies the number of time I should bark'}\n              }, {\n                name: 'volume',\n                dataType: 'UInt32',\n                arrayType: coreServer.core.nodeOPCUA.VariantArrayType.Scalar,\n                description: {text: 'specifies the sound volume [0 = quiet ,100 = loud]'}\n              }\n            ],\n\n            outputArguments: [{\n              name: 'Barks',\n              dataType: 'String',\n              arrayType: coreServer.core.nodeOPCUA.VariantArrayType.Array,\n              description: {text: 'the generated barks'},\n              valueRank: 1\n            }]\n          })\n\n        method.bindMethod(function (inputArguments, context, callback) {\n          let nbBarks = inputArguments[0].value\n          let volume = inputArguments[1].value\n          let soundVolume = new Array(volume).join('!')\n          let barks = []\n\n          for (let i = 0; i < nbBarks; i++) {\n            barks.push('Whaff' + soundVolume)\n          }\n\n          let callMethodResult = {\n            statusCode: coreServer.core.nodeOPCUA.StatusCodes.Good,\n            outputArguments: [{\n              dataType: coreServer.core.nodeOPCUA.DataType.String,\n              arrayType: coreServer.core.nodeOPCUA.VariantArrayType.Array,\n              value: barks\n            }]\n          }\n          callback(null, callMethodResult)\n        })\n\n        let analogItemNode = addressSpace.addAnalogDataItem({\n          organizedBy: vendorName,\n          nodeId: 'ns=1;s=TemperatureAnalogItem',\n          browseName: 'TemperatureAnalogItem',\n          definition: '(tempA -25) + tempB',\n          valuePrecision: 0.5,\n          engineeringUnitsRange: {low: 100, high: 200},\n          instrumentRange: {low: -100, high: +200},\n          engineeringUnits: coreServer.core.nodeOPCUA.standardUnits.degree_celsius,\n          dataType: 'Double',\n          value: {\n            get: function () {\n              return new coreServer.core.nodeOPCUA.Variant({\n                dataType: 'Double',\n                value: Math.random() + 19.0\n              })\n            }\n          }\n        })\n\n        view.addReference({\n          referenceType: 'Organizes',\n          nodeId: analogItemNode.nodeId\n        })\n\n        resolve()\n      }\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.server.start = function (server, node) {\n  let coreServer = this\n  return new Promise(\n    function (resolve, reject) {\n      if (!server) {\n        reject(new Error('Server Not Valid To Start'))\n      }\n\n      if (!node) {\n        reject(new Error('Node Not Valid To Start'))\n      }\n\n      server.start(function (err) {\n        if (err) {\n          reject(err)\n        } else {\n          node.initialized = true\n\n          if (server.endpoints) {\n            server.endpoints.forEach(function (endpoint) {\n              endpoint.endpointDescriptions().forEach(function (endpointDescription) {\n                coreServer.internalDebugLog('Server endpointUrl: ' +\n              endpointDescription.endpointUrl + ' securityMode: ' +\n              endpointDescription.securityMode.toString() +\n              ' securityPolicyUri: ' + endpointDescription.securityPolicyUri ? endpointDescription.securityPolicyUri.toString() : 'None Security Policy Uri')\n              })\n            })\n\n            let endpointUrl = server.endpoints[0].endpointDescriptions()[0].endpointUrl\n            coreServer.internalDebugLog('Primary Server Endpoint URL ' + endpointUrl)\n          }\n\n          server.on('newChannel', function (channel) {\n            coreServer.internalDebugLog('Client connected with address = ' +\n            channel.remoteAddress + ' port = ' + channel.remotePort\n            )\n          })\n\n          server.on('closeChannel', function (channel) {\n            coreServer.internalDebugLog('Client disconnected with address = ' +\n            channel.remoteAddress + ' port = ' + channel.remotePort\n            )\n          })\n\n          server.on('create_session', function (session) {\n            coreServer.internalDebugLog('############## SESSION CREATED ##############')\n            if (session.clientDescription) {\n              coreServer.detailDebugLog('Client application URI:' + session.clientDescription.applicationUri)\n              coreServer.detailDebugLog('Client product URI:' + session.clientDescription.productUri)\n              coreServer.detailDebugLog('Client application name:' + session.clientDescription.applicationName ? session.clientDescription.applicationName.toString() : 'none application name')\n              coreServer.detailDebugLog('Client application type:' + session.clientDescription.applicationType ? session.clientDescription.applicationType.toString() : 'none application type')\n            }\n\n            coreServer.internalDebugLog('Session name:' + session.sessionName ? session.sessionName.toString() : 'none session name')\n            coreServer.internalDebugLog('Session timeout:' + session.sessionTimeout)\n            coreServer.internalDebugLog('Session id:' + session.sessionId)\n          })\n\n          server.on('session_closed', function (session, reason) {\n            coreServer.internalDebugLog('############## SESSION CLOSED ##############')\n            coreServer.internalDebugLog('reason:' + reason)\n            coreServer.internalDebugLog('Session name:' + session.sessionName ? session.sessionName.toString() : 'none session name')\n          })\n\n          coreServer.internalDebugLog('Server Initialized')\n\n          if (server.serverInfo) {\n            coreServer.detailDebugLog('Server Info:' + JSON.stringify(server.serverInfo))\n          }\n\n          resolve()\n        }\n      })\n    })\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.server\n"]}