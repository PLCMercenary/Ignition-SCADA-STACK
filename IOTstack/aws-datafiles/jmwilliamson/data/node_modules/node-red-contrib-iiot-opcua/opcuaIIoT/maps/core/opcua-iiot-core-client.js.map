{"version":3,"sources":["core/opcua-iiot-core-client.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","client","internalDebugLog","detailDebugLog","readDebugLog","readDetailsDebugLog","writeDebugLog","write","session","nodesToWrite","Promise","reject","err","statusCodes","resolve","Error","read","nodesToRead","maxAge","dataValues","results","readVariableValue","readHistoryValue","start","end","readAllAttributes","stringifyFormatted","JSON","stringify","module","exports"],"mappings":"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","file":"../../core/opcua-iiot-core-client.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {client: {}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.client\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {client: {}}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.core = de.biancoroyal.opcua.iiot.core.client.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.internalDebugLog = de.biancoroyal.opcua.iiot.core.client.internalDebugLog || require('debug')('opcuaIIoT:client') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.detailDebugLog = de.biancoroyal.opcua.iiot.core.client.detailDebugLog || require('debug')('opcuaIIoT:client:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.readDebugLog = de.biancoroyal.opcua.iiot.core.client.readDebugLog || require('debug')('opcuaIIoT:client:read') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.readDetailsDebugLog = de.biancoroyal.opcua.iiot.core.client.readDetailsDebugLog || require('debug')('opcuaIIoT:client:read:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.writeDebugLog = de.biancoroyal.opcua.iiot.core.client.writeDebugLog || require('debug')('opcuaIIoT:client:write') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.client.writeDetailsDebugLog = de.biancoroyal.opcua.iiot.core.client.writeDetailsDebugLog || require('debug')('opcuaIIoT:client:write:details') // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.client.write = function (session, nodesToWrite) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        session.write(nodesToWrite, function (err, statusCodes) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              statusCodes: statusCodes,\n              nodesToWrite: nodesToWrite\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Write'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.read = function (session, nodesToRead, maxAge) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        session.read(nodesToRead, maxAge, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead: nodesToRead\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.readVariableValue = function (session, nodesToRead) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        session.readVariableValue(nodesToRead, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead: nodesToRead\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read Variable Value'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.readHistoryValue = function (session, nodesToRead, start, end) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        session.readHistoryValue(nodesToRead, start, end, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead: nodesToRead\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read History Value'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.readAllAttributes = function (session, nodesToRead) {\n  return new Promise(\n    function (resolve, reject) {\n      if (session) {\n        session.readAllAttributes(nodesToRead, function (err, dataValues) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve({\n              results: dataValues,\n              nodesToRead: nodesToRead\n            })\n          }\n        })\n      } else {\n        reject(new Error('Session Not Valid To Read All Attributes'))\n      }\n    }\n  )\n}\n\nde.biancoroyal.opcua.iiot.core.client.stringifyFormatted = function (dataValues) {\n  return JSON.stringify(dataValues, null, 2)\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.client\n"]}