"use strict";module.exports=function(i){require("source-map-support").install();var s=require("./core/opcua-iiot-core-server"),d=require("path"),l=require("os"),c=require("node-opcua").LocalizedText;i.nodes.registerType("OPCUA-IIoT-Server",function(e){i.nodes.createNode(this,e),this.port=e.port,this.endpoint=e.endpoint,this.maxAllowedSessionNumber=parseInt(e.maxAllowedSessionNumber)||10,this.maxConnectionsPerEndpoint=parseInt(e.maxConnectionsPerEndpoint)||10,this.maxAllowedSubscriptionNumber=parseInt(e.maxAllowedSubscriptionNumber)||50,this.alternateHostname=e.alternateHostname,this.name=e.name,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.publicCertificateFile=e.publicCertificateFile,this.privateCertificateFile=e.privateCertificateFile,this.allowAnonymous=e.allowAnonymous,this.users=e.users,this.xmlsets=e.xmlsets,this.isAuditing=e.isAuditing,this.asoDemo=e.asoDemo,this.disableDiscovery=!e.serverDiscovery,this.maxNodesPerRead=e.maxNodesPerRead||1e3,this.maxNodesPerBrowse=e.maxNodesPerBrowse||2e3;var n=this;n.initialized=!1,n.opcuaServer=null,s.core.nodeOPCUA.OPCUAServer.MAX_SUBSCRIPTION=n.maxAllowedSubscriptionNumber;var r=s.core.nodeOPCUA.get_fully_qualified_domain_name,o=s.core.nodeOPCUA.makeApplicationUrn,a=[s.core.nodeOPCUA.standard_nodeset_file];n.xmlsets&&(n.xmlsets.forEach(function(e,r){s.detailDebugLog("Load XML Set for "+e.name),e.path&&(e.path.startsWith("public/vendor/")?a.push(d.join(__dirname,e.path)):a.push(e.path),e.path.includes("ISA95")&&s.isa95DebugLog("installing ISA95 extend"))}),s.detailDebugLog("append xmlFiles: "+a.toString()));var t=s.core.getNodeOPCUAServerPath();s.detailDebugLog("config: "+n.publicCertificateFile),null!==n.publicCertificateFile&&""!==n.publicCertificateFile||(n.publicCertificateFile=d.join(t,"/certificates/server_selfsigned_cert_2048.pem"),s.detailDebugLog("default key: "+n.publicCertificateFile)),s.detailDebugLog("config: "+n.privateCertificateFile),null!==n.privateCertificateFile&&""!==n.privateCertificateFile||(n.privateCertificateFile=d.join(t,"/certificates/PKI/own/private/private_key.pem"),s.detailDebugLog("default key: "+n.privateCertificateFile)),n.setNodeStatusTo=function(e){var r=s.core.getNodeStatus(e);n.status({fill:r.fill,shape:r.shape,text:r.status})},n.setNodeStatusTo("waiting"),s.internalDebugLog("node set:"+a.toString()),n.checkUser=function(a,t){var i=!1;return s.internalDebugLog("Is Valid Server User?"),n.users.forEach(function(e,r,o){a===e.name&&t===e.password&&(s.internalDebugLog("Valid Server User Found"),i=!0)}),i},n.initNewServer=function(){n.initialized=!1,s.name="NodeREDIIoTServer";var e={port:n.port,nodeset_filename:a,resourcePath:n.endpoint||"UA/NodeREDIIoTServer",buildInfo:{productName:n.name||"NodeOPCUA IIoT Server",buildNumber:"160417",buildDate:new Date(2017,4,16)},serverCapabilities:{operationLimits:{maxNodesPerRead:n.maxNodesPerRead,maxNodesPerBrowse:n.maxNodesPerBrowse}},serverInfo:{applicationUri:o(r(),"NodeRED-IIoT-Server"),productUri:"NodeRED-IIoT-Server",applicationName:{text:"NodeRED",locale:"en"},gatewayServerUri:null,discoveryProfileUri:null,discoveryUrls:[]},maxAllowedSessionNumber:n.maxAllowedSessionNumber,maxConnectionsPerEndpoint:n.maxConnectionsPerEndpoint,allowAnonymous:n.allowAnonymous,certificateFile:n.publicCertificateFile,privateKeyFile:n.privateCertificateFile,alternateHostname:n.alternateHostname||"",userManager:{isValidUser:n.checkUser},isAuditing:n.isAuditing,disableDiscovery:n.disableDiscovery};s.detailDebugLog("serverOptions:"+JSON.stringify(e)),n.opcuaServer=new s.core.nodeOPCUA.OPCUAServer(e),n.opcuaServer.initialize(n.postInitialize),n.opcuaServer.on("newChannel",function(e){s.internalDebugLog("Client connected new channel with address = ".bgYellow,e.remoteAddress," port = ",e.remotePort)}),n.opcuaServer.on("closeChannel",function(e){s.internalDebugLog("Client disconnected close channel with address = ".bgCyan,e.remoteAddress," port = ",e.remotePort)})},n.postInitialize=function(){s.constructAddressSpace(n.opcuaServer,n.asoDemo).then(function(e){e?(s.internalDebugLog(e),n.showErrors&&n.error(e,{payload:""})):(s.start(n.opcuaServer,n),n.setNodeStatusTo("active"),n.registerDiscovery())}).catch(function(e){s.internalDebugLog(e),n.showErrors&&n.error(e,{payload:""})})},n.registerDiscovery=function(){var e=l.hostname(),r=void 0;e&&(r="opc.tcp://"+e+":4840/UADiscovery",s.internalDebugLog("Registering Server To "+r),n.opcuaServer.registerServer(r,function(e){e?s.internalDebugLog("Register Server Discovery Error".red+e):s.internalDebugLog("Discovery Setup Discovery Done".green)})),r="opc.tcp://localhost:4840/UADiscovery",s.internalDebugLog("Registering Server To "+r),n.opcuaServer.registerServer(r,function(e){e?s.internalDebugLog("Register Server Discovery Error".red+e):s.internalDebugLog("Discovery Setup Discovery Done".green)})},n.initNewServer(),n.on("input",function(e){if(!n.opcuaServer||!n.initialized)return n.error(new Error("Server Not Ready For Inputs"),e),!1;switch(e.nodetype){case"ASO":n.changeAddressSpace(e);break;case"CMD":n.executeOpcuaCommand(e);break;default:n.error(new Error("Unknown Node Type "+e.nodetype),e)}n.send(e)}),n.changeAddressSpace=function(e){e.payload.objecttype&&-1<e.payload.objecttype.indexOf("Variable")?n.addVariableToAddressSpace(e,e.payload.objecttype):n.addObjectToAddressSpace(e,e.payload.objecttype)},n.addVariableToAddressSpace=function(e,r){var o=n.opcuaServer.engine.addressSpace;o||n.error(new Error("Server AddressSpace Not Valid"),e);var a=o.findNode(e.payload.referenceNodeId),t=s.core.getVariantValue(e.payload.datatype,e.payload.value);a?(o.addVariable({componentOf:a,nodeId:e.payload.nodeId,browseName:e.payload.browsename,displayName:new c({locale:null,text:e.payload.displayname}),dataType:e.payload.datatype,value:{get:function(){return new s.core.nodeOPCUA.Variant({dataType:s.core.nodeOPCUA.DataType[e.payload.datatype],value:t})},set:function(e){return t=e.value,s.core.nodeOPCUA.StatusCodes.Good}}}),s.internalDebugLog(e.payload.nodeId+" "+r+" Added To Address Space")):n.error(new Error("Root Reference Not Found"),e)},n.addObjectToAddressSpace=function(e,r){var o=n.opcuaServer.engine.addressSpace;o||n.error(new Error("Server AddressSpace Not Valid"),e);var a=o.findNode(e.payload.referenceNodeId);a?(o.addObject({organizedBy:a,nodeId:e.payload.nodeId,browseName:e.payload.browsename,displayName:new c({locale:null,text:e.payload.displayname})}),s.internalDebugLog(e.payload.nodeId+" "+r+" Added To Address Space")):n.error(new Error("Root Reference Not Found"),e)},n.executeOpcuaCommand=function(e){var r=n.opcuaServer.engine.addressSpace;switch(r||n.error(new Error("Server AddressSpace Not Valid"),e),e.payload.commandtype){case"restart":n.restartServer();break;case"deleteNode":if(e.payload.nodeId){var o=r.findNode(e.payload.nodeId);o?(s.internalDebugLog("Delete NodeId "+e.payload.nodeId),r.deleteNode(o)):s.internalDebugLog("Delete NodeId Not Found "+e.payload.nodeId)}else n.error(new Error("OPC UA Command NodeId Not Valid"),e);break;default:n.error(new Error("Unknown OPC UA Command"),e)}},n.restartServer=function(){s.internalDebugLog("Restart OPC UA Server"),n.opcuaServer?n.opcuaServer.shutdown(function(){n.opcuaServer=null,n.emit("shutdown"),n.initNewServer()}):(n.opcuaServer=null,n.emit("shutdown"),n.initNewServer()),n.opcuaServer?s.internalDebugLog("OPC UA Server restarted"):s.internalDebugLog("Can not restart OPC UA Server")},n.on("close",function(e){n.closeServer(e)}),n.closeServer=function(e){n.opcuaServer?(s.simulatorInterval&&clearInterval(s.simulatorInterval),s.simulatorInterval=null,n.opcuaServer.shutdown(function(){n.opcuaServer=null,e&&e()})):(n.opcuaServer=null,e&&e())}})};
//# sourceMappingURL=maps/opcua-iiot-server.js.map
