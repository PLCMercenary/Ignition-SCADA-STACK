"use strict";require("source-map-support").install();var de=de||{biancoroyal:{opcua:{iiot:{core:{method:{}}}}}};de.biancoroyal.opcua.iiot.core.method.core=de.biancoroyal.opcua.iiot.core.method.core||require("./opcua-iiot-core"),de.biancoroyal.opcua.iiot.core.method.internalDebugLog=de.biancoroyal.opcua.iiot.core.method.internalDebugLog||require("debug")("opcuaIIoT:method"),de.biancoroyal.opcua.iiot.core.method.detailDebugLog=de.biancoroyal.opcua.iiot.core.method.detailDebugLog||require("debug")("opcuaIIoT:method:details"),de.biancoroyal.opcua.iiot.core.method.getArgumentDefinition=function(e,o){var t=this.core.nodeOPCUA.coerceNodeId;return new Promise(function(r,a){if(e)try{var n=t(o.methodId);e.getArgumentDefinition(n,function(e,o,t){if(e)a(e);else{var i={};i.methodId=n,i.methodDefinition={},i.methodDefinition.inputArguments=o,i.methodDefinition.outputArguments=t,r(i)}})}catch(e){a(e)}else a(new Error("Method Argument Definition Session Not Valid"))})},de.biancoroyal.opcua.iiot.core.method.callMethods=function(o,r){var a=this.core,n=this.core.nodeOPCUA.coerceNodeId;return new Promise(function(t,i){if(o)try{r.inputArguments.forEach(function(e,o,t){e.dataType=e.dataType,e.value=a.convertDataValueByDataType({value:e.value},e.dataType)});var e=[{objectId:n(r.objectId),methodId:n(r.methodId),inputArguments:r.inputArguments}];o.call(e,function(e,o){e?i(e):t({results:o,msg:r})})}catch(e){i(e)}else i(new Error("Methods Call Session Not Valid"))})},de.biancoroyal.opcua.iiot.core.method.buildMessagesFromMethodCalls=function(t){return new Promise(function(e,o){if(t){e({methodCallsResults:t,messages:[]})}else o(new Error("Methods Call Results To Messages Session Not Valid"))})},module.exports=de.biancoroyal.opcua.iiot.core.method;
//# sourceMappingURL=../maps/core/opcua-iiot-core-method.js.map
