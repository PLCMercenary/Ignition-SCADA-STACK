[{"id":"a51275a6.d66dd8","type":"tab","label":"Aghorn JM Williamson NEW","disabled":false,"info":"AGHORN CALLOUTS.\n\nNEED VOICE.\n\nPatrick Roberts +14325564441\nTroy Wilson +14325579961\nRick Mitchell +14327707511\nChuck Roberts +14326648448\n\n+18172473760,+14696512674,+14325564441,+14325579961,+14327707511,+14326648448"},{"id":"83afd947.e3d0f8","type":"twilioConfig","z":"","name":"SCADABit Twilio Midland"},{"id":"4fad8b3a.4a5844","type":"twilio-api","z":"","name":"SCADABit Twilio Midland","sid":"ACd3d1e28d6055eac9af7579cbe9b2df67","from":"+14323150086"},{"id":"2394da76.e09106","type":"ui_tab","z":"","name":"Aghorn JM Williamson","icon":"dashboard","order":1},{"id":"975eae2.064e85","type":"mqtt-broker","z":"","name":"MQTT Health Broker","broker":"18.222.119.245","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9a4b6151.b1386","type":"twilioConfig","z":"","name":"SCADABit Twilio Tyler"},{"id":"3b976e99.98f6d2","type":"ui_base","theme":{"name":"theme-custom","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#808080","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#4B7930","value":"#808080","edited":true},"page-titlebar-backgroundColor":{"value":"#808080","edited":false},"page-backgroundColor":{"value":"#ffffff","edited":true},"page-sidebar-backgroundColor":{"value":"#c0c0c0","edited":true},"group-textColor":{"value":"#000000","edited":true},"group-borderColor":{"value":"#808080","edited":true},"group-backgroundColor":{"value":"#c0c0c0","edited":true},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#808080","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"JM Williamson","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":45,"sy":48,"gx":20,"gy":20,"cx":3,"cy":3,"px":0,"py":0}}},{"id":"70700cf0.3271c4","type":"mqtt-broker","z":"","name":"Test MQTT Connection","broker":"18.222.217.68","port":"1885","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b77c53f.84b19b","type":"ui_group","z":"","name":"Alarms","tab":"2394da76.e09106","order":1,"disp":true,"width":"8","collapse":false},{"id":"c870e4f4.c54aa8","type":"ui_group","z":"","name":"Status","tab":"2394da76.e09106","order":2,"disp":true,"width":"8","collapse":false},{"id":"6a986612.01cd18","type":"twilioConfig","z":"","name":"SCADABit Midland Twilio #2"},{"id":"f09a9209.4e99c","type":"mqtt-broker","z":"","name":"SCADABit MQTT","broker":"mqtt.scadabit.com","port":"1883","clientid":"auth0|5bb4e515c862aa105446f3fc","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"2dc075d.d5d7d8a","type":"modbus-client","z":"","name":"Aghorn JM Williamson","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.168.239.40","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"3000","reconnectTimeout":"5000"},{"id":"ddb7e166.80d18","type":"twilioConfig","z":"","name":"Aghorn JM Williamson"},{"id":"84c1c24c.2a1db","type":"MySQLdatabase","z":"","host":"ccs-scada.cfmgwesetfrr.us-east-2.rds.amazonaws.com","port":"33036","db":"callouts","tz":""},{"id":"32883a48.1abb66","type":"MySQLdatabase","z":"","host":"ccs-scada.cfmgwesetfrr.us-east-2.rds.amazonaws.com","port":"33036","db":"callouts","tz":""},{"id":"c9d2d026.e631f","type":"ui_group","z":"","name":"Trends","tab":"2394da76.e09106","order":3,"disp":true,"width":"24","collapse":false},{"id":"6d5c0d92.d24324","type":"sms","z":"a51275a6.d66dd8","name":"Customer Twilio","message":"","numbers":"+18172473760,+14325564441,+14325579961,+14327707511,+14326648448,+14327411885","throttle":"5000","twilio":"ddb7e166.80d18","x":1510.500389099121,"y":611.1250085830688,"wires":[[]]},{"id":"24af3ffd.e290b","type":"sms","z":"a51275a6.d66dd8","name":"Internal Twilio","message":"","numbers":"+18172473760,+14327411885, +13375229291","throttle":"5000","twilio":"9a4b6151.b1386","x":1639,"y":112.12504577636719,"wires":[[]]},{"id":"7a6c7480.d27aac","type":"trigger","z":"a51275a6.d66dd8","op1":"","op2":"bad","op1type":"pay","op2type":"str","duration":"30","extend":true,"units":"min","reset":"","bytopic":"all","name":"Comm Fail Message Trigger","x":444.5,"y":144.12499523162842,"wires":[["e5ddb1ab.62aeb"]]},{"id":"156b6284.5be37d","type":"function","z":"a51275a6.d66dd8","name":"Comm Status Cache","func":"var m = \"Current Time        \" + msg.timeStamp\nm += \"\\nJM Williamson\\n\"\n\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\nif(msg.payload === \"bad\") {\n        flow.set(\"scadaCommAlarm\", \"Alarm\")\n    if(scadaCommAlarm === \"Normal\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Active:   SCADA Communication Offline\"\n        msg.payload = m\n        return msg\n    }\n    \n} else {\n        flow.set(\"scadaCommAlarm\", \"Normal\")\n    if(scadaCommAlarm === \"Alarm\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Cleared:  SCADA Communication Now Online\"\n        msg.payload = m\n        return msg\n    }  \n}","outputs":1,"noerr":0,"x":940.5,"y":145.12499523162842,"wires":[["24af3ffd.e290b","6d5c0d92.d24324"]]},{"id":"e619cc8.f72803","type":"comment","z":"a51275a6.d66dd8","name":"CUSTOMER ALARMS","info":"","x":156,"y":35.12499523162842,"wires":[]},{"id":"e5ddb1ab.62aeb","type":"moment","z":"a51275a6.d66dd8","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":692,"y":145.12499523162842,"wires":[["156b6284.5be37d"]]},{"id":"9b8ebc7e.a51b7","type":"http in","z":"a51275a6.d66dd8","name":"Manual Get Status","url":"/get_status","method":"post","upload":false,"swaggerDoc":"","x":493.513916015625,"y":26.124999046325684,"wires":[["96b2b2b0.31738"]]},{"id":"fda04b8c.d81c18","type":"http response","z":"a51275a6.d66dd8","name":"Respond with Status Msg","statusCode":"200","headers":{"content-type":"text/plain"},"x":1503.5243911743164,"y":23,"wires":[]},{"id":"e23a32f7.2a522","type":"function","z":"a51275a6.d66dd8","name":"Check Cmd Add Return Phone","func":"var cmd = msg.payload.Body.toLowerCase()\n\nif(cmd.indexOf(\"status\") !== -1 || cmd.indexOf(\"1\") !== -1) {\n    return msg\n} else if(cmd.indexOf(\"reset\") !== -1 || cmd.indexOf(\"2\") !== -1) {\n    return [null, msg]\n} else if(cmd.indexOf(\"pump\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n    return [null, null, msg]\n} else if(cmd.indexOf(\"ack\") !== -1 || cmd.indexOf(\"9\") !== -1) {\n    return [null, null, null, null, msg]\n} else if(cmd.indexOf(\"start\") == -1 && cmd.indexOf(\"stop\") == -1) {\n    return [null, null, null, null, null, msg]\n}\n// } else {\n//     return [null, null, null, msg]\n// }\n\n// else if(cmd.indexOf(\"setpoint\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n//     return [null, null, msg]\n// }\n","outputs":6,"noerr":0,"x":934.5208587646484,"y":52.12499523162842,"wires":[["90a36323.84a33"],["ee109a92.c2bcc8","c99b2900.bc6d18"],["99bb726d.6636f"],[],["7a841f60.06f78"],["66800662.676358"]]},{"id":"90a36323.84a33","type":"function","z":"a51275a6.d66dd8","name":"Send Status Message","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nJM Williamson\\nStatus Update:\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var alarmRegDate = flow.get(\"alarmRegDate\")\n\n    var status = flow.get(\"Status\")\n    var alarms = flow.get(\"Alarms\")\n\n    var scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nStatus Time         \" + statusRegDate\n\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + name\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n\n    });\n\n\n    var foundAlarm = false\n\n    alarms.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(o[name] === \"Alarm\") {\n\n            if(!foundAlarm) {\n            statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n            }\n\n        var st = \"\\n\" + name\n      //  for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n     //       st = st + \" \"\n     //   }\n\n        statusMsg = statusMsg + st \n        }\n        \n    });\n\n\n    if(scadaCommAlarm === \"Alarm\") {\n    if(!foundAlarm) {\n    statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n    }\n\n    //statusMsg = statusMsg + \"\\nActive:  \" + scadaCommAlarmDate\n    statusMsg = statusMsg + \"\\nSCADA Communication Offline\"\n    foundAlarm = true  \n    }  \n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1211.0173606872559,"y":23.135412216186523,"wires":[["fda04b8c.d81c18"]]},{"id":"96b2b2b0.31738","type":"moment","z":"a51275a6.d66dd8","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":694.0173187255859,"y":26.135412216186523,"wires":[["e23a32f7.2a522"]]},{"id":"598fadb4.cbdeb4","type":"cron","z":"a51275a6.d66dd8","name":"Status Message Schedule","crontab":"0 0,30 6-17 * * 1-5","x":136.01736450195312,"y":213.13540649414062,"wires":[[]]},{"id":"988b83de.56a47","type":"comment","z":"a51275a6.d66dd8","name":"Mon-Fri 06:00AM-5:30PM 30 minutes","info":"","x":155,"y":177.13539791107178,"wires":[]},{"id":"79486dc9.f1d7f4","type":"ui_button","z":"a51275a6.d66dd8","name":"Alarm Reset","group":"b77c53f.84b19b","order":1,"width":0,"height":0,"passthru":false,"label":"RESET ALARMS","color":"","bgcolor":"red","icon":"","payload":"2","payloadType":"str","topic":"","x":153.19469451904297,"y":473.90014839172363,"wires":[["c99b2900.bc6d18"]]},{"id":"d341f4af.0aad78","type":"modbus-write","z":"a51275a6.d66dd8","name":"Set/Reset Alarm Bit 0","showStatusActivities":true,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"50","quantity":"1","server":"2dc075d.d5d7d8a","x":1042.1876831054688,"y":464.7611999511719,"wires":[[],[]]},{"id":"dc69e10e.5779a","type":"trigger","z":"a51275a6.d66dd8","op1":"1","op2":"0","op1type":"num","op2type":"num","duration":"5","extend":false,"units":"s","reset":"","bytopic":"all","name":"","x":564.5244026184082,"y":472.53532695770264,"wires":[["a474aa3a.5c50e8"]]},{"id":"a474aa3a.5c50e8","type":"function","z":"a51275a6.d66dd8","name":"Reset Cache","func":"if(msg.payload == 0) {\nflow.set(\"resetButton\", 0)\n} else {\nflow.set(\"resetButton\", 1)   \n}\nreturn msg\n\n\n","outputs":1,"noerr":0,"x":718.0174407958984,"y":473.636004447937,"wires":[["d341f4af.0aad78"]]},{"id":"ee109a92.c2bcc8","type":"function","z":"a51275a6.d66dd8","name":"Send Reset Confirmation","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nJM Williamson\\nAlarm Reset executed.\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1237.0234375,"y":72.16405773162842,"wires":[["fda04b8c.d81c18"]]},{"id":"c99b2900.bc6d18","type":"function","z":"a51275a6.d66dd8","name":"Send and Set Cache","func":"var resetButton = flow.get(\"resetButton\")\n\nif(resetButton != 1) {\nflow.set(\"resetButton\", 1)     \nreturn msg\n}\n\n\n","outputs":1,"noerr":0,"x":370.02352142333984,"y":474.1647958755493,"wires":[["dc69e10e.5779a"]]},{"id":"ee0a7830.374b08","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"good","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":213.5,"y":138.12499523162842,"wires":[["7a6c7480.d27aac"]]},{"id":"66800662.676358","type":"function","z":"a51275a6.d66dd8","name":"Send Help Menu","func":"var statusMsg = \"Current Time        \" + msg.timeStamp\nstatusMsg += \"\\nError: Command not recognized.\\nView Status=1\\nReset Alarms=2\\nStart Pump=3\\nAckAlarm=9\"\n    \nmsg.payload = statusMsg\nreturn msg;\n\n","outputs":1,"noerr":0,"x":1217.0195541381836,"y":316.1289224624634,"wires":[["fda04b8c.d81c18"]]},{"id":"326b4400.bd3a6c","type":"fastcsv","z":"a51275a6.d66dd8","name":"fastcsv","headers":true,"headerstr":"","ignoreEmpty":true,"discardUnmappedColumns":true,"strictColumnHandling":false,"delimiter":",","quote":"\"","escape":"\"","comment":"#","ltrim":false,"rtrim":false,"rowDelimiter":"\\n","includeEndRowDelimiter":false,"quoteHeaders":false,"quoteColumns":false,"x":126.51560974121094,"y":345.4531412124634,"wires":[["86526dae.169ce"]]},{"id":"f63f6d4a.25bd4","type":"file in","z":"a51275a6.d66dd8","name":"Read Modbus Point Config","filename":"/data/modbus_points.csv","format":"utf8","chunk":false,"sendError":false,"x":308.51953125,"y":271.8359537124634,"wires":[["326b4400.bd3a6c"]]},{"id":"73583e61.4cb41","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":96.1367073059082,"y":270.5585880279541,"wires":[["f63f6d4a.25bd4"]]},{"id":"86526dae.169ce","type":"function","z":"a51275a6.d66dd8","name":"cacheConfig","func":"var pts = msg.payload\nvar points_lookup = {}\npts.forEach(function(p){\n    \n    if (points_lookup[p.reg_name]) {\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off, 'parse': p.parse})\n    } else {\n      points_lookup[p.reg_name] = {}\n      points_lookup[p.reg_name].name = p.reg_name\n      points_lookup[p.reg_name].parse = p.parse\n      points_lookup[p.reg_name].group = p.group\n      points_lookup[p.reg_name].quantity = p.quantity\n      points_lookup[p.reg_name].address = parseInt(p.reg_address)\n      points_lookup[p.reg_name].points = []\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off})\n    } \n});\n\nflow.set('points', points_lookup)        ","outputs":1,"noerr":0,"x":318.5234375,"y":349.4765796661377,"wires":[[]]},{"id":"f89d5ed.4b228a","type":"modbus-flex-getter","z":"a51275a6.d66dd8","name":"","showStatusActivities":false,"showErrors":false,"server":"2dc075d.d5d7d8a","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":833.5235595703125,"y":583.05859375,"wires":[["7a6c7480.d27aac","ac0c2a4a.cceff8"],[]]},{"id":"83938c06.51b42","type":"cron","z":"a51275a6.d66dd8","name":"","crontab":"*/10 * * * * *","x":112.52342987060547,"y":605.5703125,"wires":[["7862c85.bfd9d38","68fee708.bdf8d8"]]},{"id":"4bb7aa4f.354604","type":"function","z":"a51275a6.d66dd8","name":"Loop Through Points","func":"var points = flow.get('points')\nvar modbusStatus = flow.get('modbusStatus')\nif(points && (modbusStatus.indexOf('active') != -1 || modbusStatus.indexOf('timeout') != -1)) {\nvar numPoints = Object.keys(points).length\nvar idx = flow.get('idx')\n\nif (idx == undefined || idx >= numPoints) {\n    idx = 0\n}\n\nvar names = Object.keys(points)\nmsg.points = points[names[idx]].points\nmsg.name = names[idx]\nmsg.parse = points[names[idx]].parse\nmsg.group = points[names[idx]].group\nnode.error(msg.name)\n\nmsg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': points[names[idx]].address, 'quantity': points[names[idx]].quantity }\n\nif(idx <= numPoints-1) {\n    idx += 1\n    flow.set('idx', idx)\n      \n} else {\nflow.set('idx', 0)  \n}\nreturn msg;  \n}\n\n","outputs":1,"noerr":0,"x":588.5117492675781,"y":581.4648389816284,"wires":[["f89d5ed.4b228a"]]},{"id":"7862c85.bfd9d38","type":"moment","z":"a51275a6.d66dd8","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":374.01952743530273,"y":587.1289138793945,"wires":[["4bb7aa4f.354604"]]},{"id":"74e1e22.8bb991c","type":"comment","z":"a51275a6.d66dd8","name":"Poll once every 10 seconds","info":"","x":177.5234375,"y":535.4765577316284,"wires":[]},{"id":"83c54c40.12957","type":"inject","z":"a51275a6.d66dd8","name":"SEND RESET MANUALLY","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":126.5,"y":404.4583406448364,"wires":[["79486dc9.f1d7f4","c99b2900.bc6d18"]]},{"id":"533b7f00.b27c9","type":"status","z":"a51275a6.d66dd8","name":"","scope":["f89d5ed.4b228a"],"x":410.50000762939453,"y":647.4583883285522,"wires":[["7dd87b59.6dde24"]]},{"id":"7dd87b59.6dde24","type":"function","z":"a51275a6.d66dd8","name":"modbus status","func":"flow.set(\"modbusStatus\",msg.status.text)","outputs":1,"noerr":0,"x":586.5,"y":645.1249952316284,"wires":[[]]},{"id":"e3a8037.fd4a7","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":165.28125,"y":80.08593273162842,"wires":[[]]},{"id":"ac0c2a4a.cceff8","type":"function","z":"a51275a6.d66dd8","name":"Parse Result","func":"\nif (msg.name == \"Status\") {\n  return msg\n} else if(msg.name == \"Alarms\") {\nreturn [null,msg]    \n} else {\nreturn [null,null,msg]\n}\n\n\n\n","outputs":3,"noerr":0,"x":1052.0234985351562,"y":606.1640920639038,"wires":[["65d3002c.d11be","e33fa2fc.6c9e9"],["cd709ba7.d12328","e33fa2fc.6c9e9"],["e33fa2fc.6c9e9","4cb0b86f.07dcd8"]]},{"id":"65d3002c.d11be","type":"function","z":"a51275a6.d66dd8","name":"Parse Status","func":"flow.set(\"statusRegDate\", msg.timeStamp)\nvar status = flow.get(\"Status\")||[]\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n// var names = Object.keys(status)\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    var val = \"\"\n    if((r & Math.pow(2,p.bit)) > 0) {\n        // var obj = {}\n        val = p.alias_on\n        // status.push(obj)\n    } else {\n        // var obj = {}\n        val = p.alias_off\n        // status.push(obj)\n    }\n    var idx = names.indexOf(p.name)\n    var o = {}\n    o[p.name] = val\n    if(idx == -1) {\n        status.push(o)\n    } else {\n        status[idx] = o\n    }\n});\n\nflow.set(\"Status\", status)","outputs":1,"noerr":0,"x":1260.5234375,"y":556.8282470703125,"wires":[[]]},{"id":"cd709ba7.d12328","type":"function","z":"a51275a6.d66dd8","name":"Parse Alarms","func":"\nvar alarmMsg = \"Current Time        \" + msg.timeStamp\nalarmMsg += \"\\nJM Williamson\"\nvar voiceMsg = \"Hello. There are active alarms at location. J M Williamson. \"\n\nvar newAlarm = false\nvar status = flow.get(\"Status\")\nvar level = 0\n\nstatus.forEach(function(s){\n   var n = Object.keys(s)[0]\n   if(n == \"Tank Level\") {\n       level = s[n]\n   } \n});\n\nnode.error(\"LEVEL: \")\nnode.error(level)\n\nflow.set(\"alarmRegDate\", msg.timeStamp)\nvar alarms = flow.get(\"Alarms\")||[]\nvar old_names = []\nalarms.forEach(function(a){\n  old_names.push(Object.keys(a)[0]) \n});\n\n// var new_alarms = []\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    var obj = {}\n    var idx = old_names.indexOf(p.name)\n    \n     if((r & Math.pow(2,p.bit)) > 0) {\n      obj[p.name] = p.alias_on\n    //   new_alarms.push(obj)\n     } else {\n      obj[p.name] = p.alias_off\n    //   new_alarms.push(obj)\n     }\n    \n    // IF IDX is not -1, that means that this is a new alarm or clear, since the \n    // parsed alias value changed.\n    if (idx != -1) {\n        \n        if((alarms[idx][p.name] != obj[p.name])) {\n\n          if(obj[p.name] == p.alias_on) {\n             alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n             voiceMsg = voiceMsg + \"Active. \" + p.name + \".\"\n          } else {\n             alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n          }\n          newAlarm = true\n          \n        } \n          \n        alarms[idx][p.name] = obj[p.name]\n        \n    } else {\n        alarms.push(obj)\n    }\n    \n});\n\n\n\nflow.set(\"Alarms\", alarms)\n\nif(newAlarm) {\n    var alarmActive = false\n    alarms.forEach(function(a){\n        var val = Object.keys(a)[0]\n        val = a[val]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            alarmActive = true\n        }\n    });\n    flow.set('alarmActive', alarmActive)\n    // if active alarm, call and text\n    if(alarmMsg.indexOf('Alarm Active') != -1) {\n        voiceMsg = voiceMsg + \". Press any key to acknowledge the alarm.\"\n        flow.set('voiceMsg', voiceMsg)\n        return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n    } else {\n    return {\"payload\": alarmMsg}     \n    }\n    // if alarm clear, just text\n   \n} \n","outputs":2,"noerr":0,"x":1245.5234375,"y":614.8283081054688,"wires":[["6d5c0d92.d24324"],["21c57006.e37b4"]]},{"id":"e33fa2fc.6c9e9","type":"debug","z":"a51275a6.d66dd8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1163.5390625,"y":798.0625,"wires":[]},{"id":"452cf185.4f041","type":"function","z":"a51275a6.d66dd8","name":"CLEAR CACHE","func":"flow.set('Status', undefined)\nflow.set('Points', undefined)\nflow.set('Alarms', undefined)\n// flow.set('Alarms', undefined)\n// flow.set('points', undefined)","outputs":1,"noerr":0,"x":693.5390625,"y":812.0624952316284,"wires":[[]]},{"id":"27862a70.d8aef6","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":511.02346420288086,"y":806.1640558242798,"wires":[["452cf185.4f041"]]},{"id":"123eeb22.c10ae5","type":"comment","z":"a51275a6.d66dd8","name":"CLEAR CACHE","info":"","x":581.0234375,"y":753.1640577316284,"wires":[]},{"id":"2f69816f.5cef4e","type":"http in","z":"a51275a6.d66dd8","name":"Alarm Call Pickup","url":"/call_answered","method":"post","upload":false,"swaggerDoc":"","x":1765.0038757324219,"y":1206.1600637435913,"wires":[["e0b4cfe4.471a8"]]},{"id":"4edeee63.8443","type":"http response","z":"a51275a6.d66dd8","name":"Send TwiML","statusCode":"200","headers":{},"x":2211.00390625,"y":1207.1600341796875,"wires":[]},{"id":"21c57006.e37b4","type":"function","z":"a51275a6.d66dd8","name":"Start Call","func":"// msg.headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n// msg.headers = {\"Content-Type\": \"application/json\"}\n// msg.payload = {\"From\": \"+14322162465\", \"To\": \"+14696512674\", \"Url\": \"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"}\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls?To=14696512674&From=+14322162465&Url=http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls.json?To%3D%2B14696512674%26From%3D%2B14322162465%26\"\n// msg.url = \"https%3A%2F%2Fapi.twilio.com%2F2010-04-01%2FAccounts%2FACd3d1e28d6055eac9af7579cbe9b2df67%2FCalls%3FTo%3D%2B14696512674%26From%3D%2B14322162465%26Url%3Dhttp%3A%2F%2Fec2-18-218-144-146.us-east-2.compute.amazonaws.com%3A1880%2Fcall_answered\"\n\n// Download the helper library from https://www.twilio.com/docs/node/install\n// Your Account Sid and Auth Token from twilio.com/console\nnode.error(\"MESSAGE IN CALL\")\nnode.error(msg)\nvar ack = flow.get('alarmAcked')||false\nif(!ack || msg.reset) {\n    if(msg.reset) {\n        flow.set('alarmAcked', false)\n    }\nvar twilio = global.get('twilio')\nconst accountSid = 'ACd3d1e28d6055eac9af7579cbe9b2df67';\nconst authToken = '075c463b1989281acdfe67dd508ea15a';\nconst client = twilio(accountSid, authToken);\n\nvar users = flow.get('alarmContacts')  \nvar nums = Object.keys(users)\nvar numIndex = flow.get('numIndex')||0\n\nif(numIndex >= nums.length) {\n    numIndex = 0\n} else if(msg.reset) {\n    numIndex = 0\n}\nnode.error(numIndex)\nvar to = nums[numIndex]\nnode.error(\"ALARM CALL NOW\")\nnode.error(to)\nnumIndex = numIndex + 1\nflow.set('numIndex', numIndex)\n\nclient.calls\n      .create({\n         url: 'http://ec2-18-224-56-231.us-east-2.compute.amazonaws.com:1880/call_answered',\n         to: to,\n         from: '+14323152135'\n      })\n      .then(call => node.error(call.sid))\n      .done(node.error);\n      \n      \nreturn {'payload': 0}\n}","outputs":1,"noerr":0,"x":1608.0044479370117,"y":941.16028881073,"wires":[["f399e1bc.94c2e"]]},{"id":"e0b4cfe4.471a8","type":"function","z":"a51275a6.d66dd8","name":"Process Call","func":"\n      var voiceMsg = flow.get('voiceMsg')\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n    <Response> \\\n      <Gather action=\\\"http://ec2-18-218-79-2.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n        <Say voice=\\\"woman\\\">\"+voiceMsg+\"</Say> \\\n      </Gather> \\\n      <Say voice=\\\"woman\\\">Sorry, I didn't get your response. You can still acknowledge the alarm by texting 9 or a. c. k. to this number. Goodbye.</Say> \\\n    </Response>\";\n\nmsg.payload = twiml_response;\nreturn msg;      \n     ","outputs":1,"noerr":0,"x":1981.0038757324219,"y":1207.1600637435913,"wires":[["4edeee63.8443"]]},{"id":"3eb03504.1c95da","type":"function","z":"a51275a6.d66dd8","name":"handleGather","func":"// Use 2 outputs, 2nd is for mqtt topic/payload combination\n// Could be useful to post other caller info to a topic\n// var mqttOut = null;\n// var responseMsg = \"\";\nnode.error('INSIDE GATHER')\n// var name = \"wholehouse\";\n// var reading = context.global[name];\n\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n        <Response><Say voice=\\\"woman\\\"> \\\n\tYou have acknowledged the alarm.  No other operators will be called.  Check text message for alarm details. Goodbye.\\\n</Say>\\\n</Response>\"\nmsg.payload = twiml_response\nflow.set('alarmAcked', true)\nreturn [msg,msg]\n\n","outputs":1,"noerr":0,"x":1988.0273666381836,"y":1284.699194908142,"wires":[["4edeee63.8443"]]},{"id":"9052c09c.67dce","type":"catch","z":"a51275a6.d66dd8","name":"","scope":null,"x":1944.2773132324219,"y":1382.5663137435913,"wires":[["9aab00ac.c0b3"]]},{"id":"9aab00ac.c0b3","type":"debug","z":"a51275a6.d66dd8","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2111.535125732422,"y":1380.1053762435913,"wires":[]},{"id":"4a8b2681.54c448","type":"comment","z":"a51275a6.d66dd8","name":"SECOND OUTPUT = VOICE","info":"","x":1654.0273971557617,"y":892.1991739273071,"wires":[]},{"id":"5d2b3b61.b62c04","type":"function","z":"a51275a6.d66dd8","name":"SET ALARM CONTACTS","func":"var contacts = {'+14325564441': 'Patrick Roberts', '+14325579961': 'Troy Wilson', '+14327707511': 'Rick Mitchell', '+14326648448': 'Chuck Roberts'}\n// var contacts = { '+14696512674': 'William Wylie' }\nflow.set('alarmContacts', contacts)\n\n\n\n\n// AGHORN CALLOUTS.\n\n// NEED VOICE.\n\n// Patrick Roberts +14325564441\n// Troy Wilson +14325579961\n// Rick Mitchell +14327707511\n// Chuck Roberts +14326648448\n\n// +14325564441,+14325579961,+14327707511,+14326648448\n\n// +18172473760,+14696512674,+14325564441,+14325579961,+14327707511,+14326648448","outputs":1,"noerr":0,"x":2012.52734375,"y":1470.0897216796875,"wires":[[]]},{"id":"30976e5a.000542","type":"function","z":"a51275a6.d66dd8","name":"CLEAR ALARM CONTACTS","func":"flow.set('alarmContacts', undefined)","outputs":1,"noerr":0,"x":2022.0273132324219,"y":1527.1991262435913,"wires":[[]]},{"id":"22c502a9.08ecbe","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":"2","x":1799.0273399353027,"y":1463.199164390564,"wires":[["5d2b3b61.b62c04"]]},{"id":"f933cff4.a9505","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1795.0273132324219,"y":1536.1991262435913,"wires":[["30976e5a.000542"]]},{"id":"75237e36.b7d95","type":"http in","z":"a51275a6.d66dd8","name":"Operator Input","url":"/operator_response","method":"post","upload":false,"swaggerDoc":"","x":1702.0275344848633,"y":1278.1991624832153,"wires":[["3eb03504.1c95da","75766a24.bbd044","eff902b.3dd85"]]},{"id":"cade85a7.e28688","type":"trigger","z":"a51275a6.d66dd8","op1":"","op2":"call_next","op1type":"nul","op2type":"str","duration":"8","extend":true,"units":"min","reset":"","bytopic":"all","name":"","x":1866.5357208251953,"y":1099.082423210144,"wires":[["21c57006.e37b4"]]},{"id":"f399e1bc.94c2e","type":"delay","z":"a51275a6.d66dd8","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1835.2854080200195,"y":934.5585374832153,"wires":[["cade85a7.e28688"]]},{"id":"7a841f60.06f78","type":"function","z":"a51275a6.d66dd8","name":"Alarm Acknowledge","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n   var alarms = flow.get(\"Alarms\")\n    if(alarms) {\n        \n    var activeAlarms = \"\"\n        alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms += name + \", \"\n        }\n    });\n    if (activeAlarms.length > 0) {\n     activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\n     statusMsg += \"\\nJM Williamson\\nAlarms Acknowledged: \" + activeAlarms  \n     flow.set(\"alarmAcked\", true)\n    } else {\n     statusMsg += \"\\nJM Williamson\\nNo Active Alarms to Acknowledge\"       \n    }\n\n    } else {\n        statusMsg += \"\\nJM Williamson\\nNo Active Alarms to Acknowledge\" \n    }\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1234.0234298706055,"y":171.16406297683716,"wires":[["fda04b8c.d81c18"]]},{"id":"75766a24.bbd044","type":"debug","z":"a51275a6.d66dd8","name":"OEPRATOR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1789.0234375,"y":1347.6640577316284,"wires":[]},{"id":"eff902b.3dd85","type":"function","z":"a51275a6.d66dd8","name":"send ack text message to other users","func":"node.error(\"SEND ACK TEXT MESSAGE FUNCTION\")\nvar users = flow.get('alarmContacts')\nvar nums = Object.keys(users)\nvar idx = nums.indexOf(msg.payload.To)\nvar userName = users[nums[idx]]\nnums.splice(idx,1)\nvar alarms = flow.get(\"Alarms\")\nvar activeAlarms = \"\"\nvar count = 0\nnode.error(\"BEFORE LOOP\")\n    alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms += name + \", \"\n            count += 1\n        }\n    });\n    activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\nnode.error(\"AFTER LOOP\")\nif(count > 1) {\nvar msg = \"The alarms: \" + activeAlarms + \" were acknowledged by: \" + userName    \n} else {\nvar msg = \"The alarm: \" + activeAlarms + \" was acknowledged by: \" + userName    \n}\n\nvar n = \"\"\nnums.forEach(function(num){\n   n = n + num + \",\" \n});\nn = n.substring(0,n.length-1)\nvar obj = {\"payload\": msg, \"topic\": n, \"reset\": true}\nnode.error(obj)\nreturn obj","outputs":1,"noerr":0,"x":1319.0235748291016,"y":1106.6641216278076,"wires":[["cade85a7.e28688","aff3d5a.b105828"]]},{"id":"aff3d5a.b105828","type":"sms","z":"a51275a6.d66dd8","name":"Customer Twilio","message":"","numbers":"","throttle":"5000","twilio":"ddb7e166.80d18","x":1540.0234375,"y":686.1640577316284,"wires":[[]]},{"id":"12a66c31.33dd44","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":791.5000610351562,"y":994.4584350585938,"wires":[[]]},{"id":"fd16aa0f.d655e8","type":"function","z":"a51275a6.d66dd8","name":"CALL TEST","func":"var voiceMsg = \"Hello. There are active alarms at location. J M Williamson. \" + \" Active. low suction\" + \". Press any key to acknowledge the alarm.\"\nflow.set(\"voiceMsg\", voiceMsg)\nvar msg = {\"payload\": voiceMsg, 'reset': true}\nreturn msg;","outputs":1,"noerr":0,"x":1042.5,"y":1004.1249952316284,"wires":[["21c57006.e37b4"]]},{"id":"4cb0b86f.07dcd8","type":"function","z":"a51275a6.d66dd8","name":"Parse Register Value","func":"if(msg.parse.length > 0) {\nvar parse = JSON.parse(msg.parse)\nvar val = msg.payload\n\n\nparse.forEach(function(p){\n    \nswitch(p.func) {\n    \ncase \"float32ToNum\":\nnode.error('FLOAT32NUM')\nnode.error(val)\nvar bits = (val[0] << 16 | val[1]);\nvar sign = ((bits >>> 31) == 0) ? 1.0 : -1.0;\nvar e = ((bits >>> 23) & 0xff);\nvar m = (e == 0) ? (bits & 0x7fffff) << 1 : (bits & 0x7fffff) | 0x800000;\nvar f = sign * m * Math.pow(2, e - 150);\nf = Math.fround(f).toFixed(2);\nf = parseFloat(f)\nval = f\nnode.error(val)\nbreak;\n\ncase \"scale\":\n    node.error('SCALE')\n    node.error(val)\n    node.error(p.param)\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    \n    val = val * p.param\n    node.error(val)\nbreak;   \n\ndefault:\nnode.error('DIDNT FIND PARSER')\n    val = msg.payload[0]\n    break;\n\n}\n\n});\n} else {\n    // default for no parser is single reg value int\n    var val = msg.payload[0]\n}\n\n\n// cache value\nvar status = flow.get(\"Status\")||[]\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n\nvar idx = names.indexOf(msg.name)\nvar o = {}\no[msg.name] = val\nif(idx == -1) {\n    status.push(o)\n} else {\n    status[idx] = o\n}\n\nnode.error('status')\nnode.error(status)\n\nflow.set(\"Status\", status)","outputs":1,"noerr":0,"x":1272.0234375,"y":687.5390625,"wires":[[]]},{"id":"99bb726d.6636f","type":"function","z":"a51275a6.d66dd8","name":"Send Command Start","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nJM Williamson\\nPump command start executed.\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1494.0234375,"y":230.0390625,"wires":[["1967f5ba.35a31a","fda04b8c.d81c18"]]},{"id":"1967f5ba.35a31a","type":"trigger","z":"a51275a6.d66dd8","op1":"1","op2":"","op1type":"num","op2type":"nul","duration":"5","extend":false,"units":"s","reset":"","bytopic":"all","name":"","x":2007.3601417541504,"y":544.8132419586182,"wires":[["547dddd6.4f8554"]]},{"id":"547dddd6.4f8554","type":"modbus-write","z":"a51275a6.d66dd8","name":"Set/Reset Alarm Bit 0","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"51","quantity":"1","server":"2dc075d.d5d7d8a","x":2371.0233612060547,"y":545.0390491485596,"wires":[[],[]]},{"id":"87c43595.8d66a8","type":"comment","z":"a51275a6.d66dd8","name":"WELCOME MESSAGE","info":"","x":945,"y":760,"wires":[]},{"id":"9d5c44cd.03b9b8","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"Hello, this is the Aghorn JM Williamson callouts number. If you answer a voice callout alarm, you may press any key to acknowledge the alarm.  Acknowleding the alarm will stop more calls from being sent out for that alarm and will send an ack text message to the rest of the team. You can text this number '1' or 'status' for site status, '2' or 'reset' to reset alarms, 3' or 'pump' to start pump, and '9' or 'ack' to acknowledge voice callout alarms (if you did not previously acknowledge while answering a call).  If you are receiving this in error or need help, please contact Mark Cowan 8172473760 or Will Wylie 4695822274 #0.  Text 'STOP' to stop text messages and 'START' to start text messages if they were previously stopped.","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":928.2578392028809,"y":814.9219799041748,"wires":[[]]},{"id":"25059a7a.86d956","type":"comment","z":"a51275a6.d66dd8","name":"LOG STATUS VALUES","info":"","x":187.5,"y":1964.3334312438965,"wires":[]},{"id":"2a216bc7.1f0344","type":"function","z":"a51275a6.d66dd8","name":"write levels to db","func":"var status = flow.get(\"Status\")\nvar names = []\nvar query = \"INSERT INTO aghorn_historian_jm_williamson (value,name) VALUES\"\n        \nstatus.forEach(function(l){\n    var n = Object.keys(l)[0]\n    var title = n\n    if(l[n].constructor == Number) {\n    query = query + \" (\" + l[n] + \",'\" + title + \"'),\"    \n    }\n    \n})\n\nquery = query.substring(0, query.length - 1)\nquery = query + ';'\n\nmsg.topic = query\nreturn msg;","outputs":1,"noerr":0,"x":543.5,"y":2055.3333740234375,"wires":[[]]},{"id":"d1fe2c16.feecf","type":"inject","z":"a51275a6.d66dd8","name":"DB UPDATE INTERVAL","topic":"","payload":"","payloadType":"date","repeat":"300","crontab":"","once":true,"onceDelay":0.1,"x":170,"y":2055.3333740234375,"wires":[["2a216bc7.1f0344"]]},{"id":"f058e4be.a66cb8","type":"function","z":"a51275a6.d66dd8","name":"Status Values","func":"var status = flow.get('Status')\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\nvar arr = status\n\narr.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\narr.forEach(function(o){\n    var n = Object.keys(o)[0]\n    if (o[n].constructor == Number) {\n        msgs.push({'topic': n, 'payload': o[n].toFixed(2)})     \n    } else {\n        msgs.push({'topic': n, 'payload': o[n]}) \n    }\n    \n});\nreturn msgs","outputs":18,"noerr":0,"x":532.0000915527344,"y":1419.666748046875,"wires":[["df3c7171.18938"],["6265cb15.a3bfc4"],["d61710e5.9821e"],["f10dd509.7c9768"],["9f46daf4.7fd8e8"],["59663330.5fb46c"],["dbfec2c1.87508"],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"df3c7171.18938","type":"ui_text","z":"a51275a6.d66dd8","group":"c870e4f4.c54aa8","order":4,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":765.0000267028809,"y":1267.6663827896118,"wires":[]},{"id":"6265cb15.a3bfc4","type":"ui_text","z":"a51275a6.d66dd8","group":"c870e4f4.c54aa8","order":5,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":763.7421875,"y":1293.228515625,"wires":[]},{"id":"d61710e5.9821e","type":"ui_text","z":"a51275a6.d66dd8","group":"c870e4f4.c54aa8","order":6,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":762.7421875,"y":1321.228515625,"wires":[]},{"id":"f10dd509.7c9768","type":"ui_text","z":"a51275a6.d66dd8","group":"c870e4f4.c54aa8","order":7,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":762.7421875,"y":1351.228515625,"wires":[]},{"id":"9f46daf4.7fd8e8","type":"ui_text","z":"a51275a6.d66dd8","group":"c870e4f4.c54aa8","order":8,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":761.7421875,"y":1382.228515625,"wires":[]},{"id":"59663330.5fb46c","type":"ui_text","z":"a51275a6.d66dd8","group":"c870e4f4.c54aa8","order":9,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":762.7421875,"y":1413.228515625,"wires":[]},{"id":"dbfec2c1.87508","type":"ui_text","z":"a51275a6.d66dd8","group":"c870e4f4.c54aa8","order":10,"width":0,"height":0,"name":"lact1_text7","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":763.7421875,"y":1444.228515625,"wires":[]},{"id":"5acb9cf1.ecd684","type":"inject","z":"a51275a6.d66dd8","name":"Dashboard Update Interval","topic":"","payload":"","payloadType":"date","repeat":"10","crontab":"","once":true,"onceDelay":0.1,"x":212.00005722045898,"y":1556.6674880981445,"wires":[["f058e4be.a66cb8","829062d4.0c0db"]]},{"id":"2ce4263a.8e9fea","type":"comment","z":"a51275a6.d66dd8","name":"MAIN DASHBOARD","info":"","x":167.00005722045898,"y":1479.166877746582,"wires":[]},{"id":"d941992b.f1fd08","type":"comment","z":"a51275a6.d66dd8","name":"LACT TRENDs on sep page","info":"","x":180,"y":1761.3333740234375,"wires":[]},{"id":"7c0c0f0.766f3f","type":"inject","z":"a51275a6.d66dd8","name":"Dashboard Update Interval","topic":"","payload":"","payloadType":"date","repeat":"300","crontab":"","once":true,"onceDelay":0.1,"x":202.50347518920898,"y":1833.2848091125488,"wires":[["47b043eb.7e41ec"]]},{"id":"95421cca.f40ae","type":"ui_chart","z":"a51275a6.d66dd8","name":"","group":"c9d2d026.e631f","order":1,"width":0,"height":0,"label":"","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":true,"ymin":"-1","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1256.9825401306152,"y":1833.1002388000488,"wires":[[],[]]},{"id":"81ab74ad.760d48","type":"function","z":"a51275a6.d66dd8","name":"Organize Chart Data","func":"// [{\n// \"series\": [\"A\", \"B\", \"C\"],\n// \"data\": [\n//     [{ \"x\": 1504029632890, \"y\": 5 },\n//      { \"x\": 1504029636001, \"y\": 4 },\n//      { \"x\": 1504029638656, \"y\": 2 }\n//     ],\n//     [{ \"x\": 1504029633514, \"y\": 6 },\n//      { \"x\": 1504029636622, \"y\": 7 },\n//      { \"x\": 1504029639539, \"y\": 6 }\n//     ],\n//     [{ \"x\": 1504029634400, \"y\": 7 },\n//      { \"x\": 1504029637959, \"y\": 7 },\n//      { \"x\": 1504029640317, \"y\": 7 }\n//     ]\n// ],\n// \"labels\": [\"\"]\n// }]\nconst UTC_TO_CST_CONST = 21600\n\nvar series = []\nvar a = msg.payload\nvar records = {}\na.forEach(function(o){ \n    if (series.indexOf(o.name) == -1) {\n        series.push(o.name)\n        records[o.name] = []\n    }\n    var d = new Date((o.timestamp)*1000)\n    records[o.name].push({\"x\": d, \"y\": o.value})\n});\n\n// series.sort()\n// var labels = series\nvar res = {}\nvar data = []\nseries.forEach(function(s){\n    data.push(records[s])\n});\nres.series = series\n// res.labels = labels\nres.data = data\nvar result = [res]\nmsg.payload = result\n\n\n\n\n\n\n\n// var TEST = [{\n// \"series\": [\"A\", \"B\", \"C\"],\n// \"data\": [\n//     [{ \"x\": '2018-02-07T14:33:03.927Z', \"y\": 5 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 4 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 2 }\n//     ],\n//     [{ \"x\": '2018-02-07T14:33:03.927Z', \"y\": 6 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 7 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 6 }\n//     ],\n//     [{ \"x\": \"2018-03-05T22:27:21.068Z\", \"y\": 7 },\n//      { \"x\": \"2018-03-05T22:27:21.068Z\", \"y\": 7 },\n//      { \"x\": \"2018-03-05T22:27:21.068Z\", \"y\": 7 }\n//     ]\n// ],\n// \"labels\": [\"\"]\n// }]\n\n// msg.payload = TEST\n\n\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1034.4825401306152,"y":1834.1002388000488,"wires":[["95421cca.f40ae"]]},{"id":"47b043eb.7e41ec","type":"function","z":"a51275a6.d66dd8","name":"Weekly Trend All STATUS","func":"var query = \"SELECT name, value, timestamp FROM aghorn_historian_jm_williamson WHERE timestamp > unix_timestamp(NOW() - INTERVAL 1 WEEK)\"\nmsg.topic = query\nreturn msg;","outputs":1,"noerr":0,"x":553.9999389648438,"y":1832.8331298828125,"wires":[[]]},{"id":"829062d4.0c0db","type":"function","z":"a51275a6.d66dd8","name":"Alarm Values","func":"var status = flow.get('Alarms')\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\nvar arr = status\n\narr.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\narr.forEach(function(o){\n    var n = Object.keys(o)[0]\n    if (o[n].constructor == Number) {\n        msgs.push({'topic': n, 'payload': o[n].toFixed(2)})     \n    } else {\n        msgs.push({'topic': n, 'payload': o[n]}) \n    }\n    \n});\nreturn msgs","outputs":18,"noerr":0,"x":765.0000610351562,"y":1607.6666259765625,"wires":[["d46ebe9b.5a0f7"],["2750ddd8.b9a1d2"],["4fdd07ff.55d0b8"],["bfae214b.2c7be"],["f1321efc.c9715"],["6fd39c84.41a174"],["e4c66ce9.ad61a"],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"d46ebe9b.5a0f7","type":"ui_text","z":"a51275a6.d66dd8","group":"b77c53f.84b19b","order":4,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1022,"y":1464.6663818359375,"wires":[]},{"id":"2750ddd8.b9a1d2","type":"ui_text","z":"a51275a6.d66dd8","group":"b77c53f.84b19b","order":5,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1020.7421875,"y":1495.228515625,"wires":[]},{"id":"4fdd07ff.55d0b8","type":"ui_text","z":"a51275a6.d66dd8","group":"b77c53f.84b19b","order":6,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1020.7421875,"y":1525.228515625,"wires":[]},{"id":"bfae214b.2c7be","type":"ui_text","z":"a51275a6.d66dd8","group":"b77c53f.84b19b","order":7,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1020.7421875,"y":1555.228515625,"wires":[]},{"id":"f1321efc.c9715","type":"ui_text","z":"a51275a6.d66dd8","group":"b77c53f.84b19b","order":8,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1019.7421875,"y":1586.228515625,"wires":[]},{"id":"6fd39c84.41a174","type":"ui_text","z":"a51275a6.d66dd8","group":"b77c53f.84b19b","order":9,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1019.7421875,"y":1613.228515625,"wires":[]},{"id":"e4c66ce9.ad61a","type":"ui_text","z":"a51275a6.d66dd8","group":"b77c53f.84b19b","order":10,"width":0,"height":0,"name":"lact1_text7","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1020.7421875,"y":1645.228515625,"wires":[]},{"id":"68fee708.bdf8d8","type":"mqtt out","z":"a51275a6.d66dd8","name":"Aghorn_JM_Williamson Keepalive","topic":"Aghorn_JM_Williamson","qos":"0","retain":"","broker":"975eae2.064e85","x":404.9609375,"y":911,"wires":[]},{"id":"52a54130.215d5","type":"comment","z":"a51275a6.d66dd8","name":"CCS SCADA HEALTH MANAGER KEEPALIVE MQTT","info":"","x":406,"y":867,"wires":[]},{"id":"d97e8259.85877","type":"debug","z":"a51275a6.d66dd8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":949.523494720459,"y":2060.4532794952393,"wires":[]},{"id":"64c7eea9.ab4c","type":"cron","z":"a51275a6.d66dd8","name":"","crontab":"*/10 * * * * *","x":400,"y":190,"wires":[["f63f6d4a.25bd4"]]},{"id":"91a186d8.b6f4c8","type":"comment","z":"a51275a6.d66dd8","name":"REFRESH points every 3 minutes","info":"","x":633,"y":190,"wires":[]},{"id":"97f793b2.27754","type":"function","z":"a51275a6.d66dd8","name":"Send Comm Bad Error","func":"var m = \"Current Time        \" + msg.timeStamp\nm += \"\\nJM Williamson\\n\"\n\n        m += \"Alarm Active:   SCADA Communication Offline\"\n        msg.payload = m\n        return msg\n","outputs":1,"noerr":0,"x":1430.0195922851562,"y":413.0039052963257,"wires":[["6d5c0d92.d24324"]]},{"id":"55c2fdd4.16fa74","type":"inject","z":"a51275a6.d66dd8","name":"","topic":"","payload":"good","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":848.0196189880371,"y":366.0039281845093,"wires":[["18dda29e.3de05d"]]},{"id":"18dda29e.3de05d","type":"moment","z":"a51275a6.d66dd8","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":1073.019515991211,"y":395.00389671325684,"wires":[["97f793b2.27754"]]},{"id":"abeba6b.2963c58","type":"function","z":"a51275a6.d66dd8","name":"Parse Alarms BACKUP 05/17/2020","func":"\nvar alarmMsg = \"Current Time        \" + msg.timeStamp\nalarmMsg += \"\\nJM Williamson\"\nvar voiceMsg = \"Hello. There are active alarms at location. J M Williamson. \"\n\nvar newAlarm = false\nvar status = flow.get(\"Status\")\nvar level = 0\n\nstatus.forEach(function(s){\n   var n = Object.keys(s)[0]\n   if(n == \"Tank Level\") {\n       level = s[n]\n   } \n});\n\nnode.error(\"LEVEL: \")\nnode.error(level)\n\nflow.set(\"alarmRegDate\", msg.timeStamp)\nvar alarms = flow.get(\"Alarms\")||[]\nvar old_names = []\nalarms.forEach(function(a){\n  old_names.push(Object.keys(a)[0]) \n});\n\n// var new_alarms = []\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    var obj = {}\n    var idx = old_names.indexOf(p.name)\n    if((p.name != \"Tank H Alarm\") && (p.name != \"Tank HH Alarm\") && (p.name != \"Tank L Alarm\")) {\n    \n    if(p.name != \"High Discharge\") {\n    \n     if((r & Math.pow(2,p.bit)) > 0) {\n      obj[p.name] = p.alias_on\n    //   new_alarms.push(obj)\n     } else {\n      obj[p.name] = p.alias_off\n    //   new_alarms.push(obj)\n     }\n     \n    } else {\n       obj[p.name] = p.alias_off \n    }\n     \n    } else {\n        if(p.name == \"Tank H Alarm\") {\n            if (level >= 14) {\n                obj[p.name] = p.alias_on\n            } else if (level < 13.5) {\n                obj[p.name] = p.alias_off\n            } else {\n                obj[p.name] = alarms[idx][p.name]\n            }  \n        } else if (p.name == \"Tank HH Alarm\") {\n               if (level >= 18) {\n                obj[p.name] = p.alias_on\n            } else if (level < 17.5) {\n                obj[p.name] = p.alias_off\n            } else {\n                obj[p.name] = alarms[idx][p.name]\n            }  \n        } else if (p.name == \"Tank L Alarm\") {\n                if (level >= -5) {\n                obj[p.name] = p.alias_off\n            } else if (level < -9999) {\n                obj[p.name] = p.alias_on\n            } else {\n                obj[p.name] = alarms[idx][p.name]\n            }             \n        }\n    }\n    \n    // node.error(old_names)\n    \n    // node.error('INDEX OF NAME')\n    // node.error(idx)\n    \n    if (idx != -1) {\n        // node.error('obj[p.name]')\n        // node.error(obj[p.name])\n        // node.error('alarms[idx][p.name]')\n        // node.error(alarms[idx][p.name])        \n        \n        if((alarms[idx][p.name] != obj[p.name])) {\n\n          if(obj[p.name] == p.alias_on) {\n             alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n             voiceMsg = voiceMsg + \"Active. \" + p.name + \".\"\n          } else {\n             alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n          }\n          newAlarm = true\n          \n        } \n          \n        alarms[idx][p.name] = obj[p.name]\n        \n    } else {\n        alarms.push(obj)\n    }\n    \n});\n\n\n\nflow.set(\"Alarms\", alarms)\n\nif(newAlarm) {\n    var alarmActive = false\n    alarms.forEach(function(a){\n        var val = Object.keys(a)[0]\n        val = a[val]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            alarmActive = true\n        }\n    });\n    flow.set('alarmActive', alarmActive)\n    // if active alarm, call and text\n    if(alarmMsg.indexOf('Alarm Active') != -1) {\n        voiceMsg = voiceMsg + \". Press any key to acknowledge the alarm.\"\n        flow.set('voiceMsg', voiceMsg)\n        return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n    } else {\n    return {\"payload\": alarmMsg}     \n    }\n    // if alarm clear, just text\n   \n} \n","outputs":2,"noerr":0,"x":1135,"y":513,"wires":[[],[]]}]