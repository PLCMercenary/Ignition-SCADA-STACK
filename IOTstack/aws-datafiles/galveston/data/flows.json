[{"id":"1e3250c0.1694ff","type":"tab","label":"Hannathon Galveston","disabled":false,"info":"HANNATHON GALVESTON CONTACTS:\n\nVoice order top to bottom:\n\nKenneth Kuethe -> +14326648765\nMartin Gonzales -> +14328133806\nToby Santos -> +14328131895\n\n+14326648765,+14328133806,+14328131895"},{"id":"83afd947.e3d0f8","type":"twilioConfig","z":"","name":"SCADABit Twilio Midland"},{"id":"4fad8b3a.4a5844","type":"twilio-api","z":"","name":"SCADABit Twilio Midland","sid":"ACd3d1e28d6055eac9af7579cbe9b2df67","from":"+14323150086"},{"id":"2394da76.e09106","type":"ui_tab","z":"","name":"Tanks & Status","icon":"dashboard","order":1},{"id":"975eae2.064e85","type":"mqtt-broker","z":"","name":"MQTT Health Broker","broker":"18.222.119.245","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9a4b6151.b1386","type":"twilioConfig","z":"","name":"SCADABit Twilio Tyler"},{"id":"3b976e99.98f6d2","type":"ui_base","theme":{"name":"theme-custom","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#808080","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#4B7930","value":"#808080","edited":true},"page-titlebar-backgroundColor":{"value":"#808080","edited":false},"page-backgroundColor":{"value":"#c0c0c0","edited":true},"page-sidebar-backgroundColor":{"value":"#c0c0c0","edited":true},"group-textColor":{"value":"#000000","edited":true},"group-borderColor":{"value":"#808080","edited":true},"group-backgroundColor":{"value":"#c0c0c0","edited":true},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#808080","edited":true},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Hannathon Petroleum - Morgan SWD 1","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":45,"sy":48,"gx":20,"gy":20,"cx":3,"cy":3,"px":0,"py":0}}},{"id":"70700cf0.3271c4","type":"mqtt-broker","z":"","name":"Test MQTT Connection","broker":"18.222.217.68","port":"1885","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b77c53f.84b19b","type":"ui_group","z":"","name":"Alarms","tab":"2394da76.e09106","order":2,"disp":true,"width":"6","collapse":false},{"id":"c870e4f4.c54aa8","type":"ui_group","z":"","name":"Status","tab":"2394da76.e09106","order":1,"disp":true,"width":"24","collapse":false},{"id":"6a986612.01cd18","type":"twilioConfig","z":"","name":"SCADABit Midland Twilio #2"},{"id":"f09a9209.4e99c","type":"mqtt-broker","z":"","name":"SCADABit MQTT","broker":"mqtt.scadabit.com","port":"1883","clientid":"auth0|5bb4e515c862aa105446f3fc","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"ddb7e166.80d18","type":"twilioConfig","z":"","name":"Aghorn JM Williamson"},{"id":"4965478d.191278","type":"twilioConfig","z":"","name":"Hannathon Conroe"},{"id":"335ae311.db003c","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"dff90020.a6a","type":"MySQLdatabase","z":"","host":"ccs-scada-cluster-1.cluster-cfmgwesetfrr.us-east-2.rds.amazonaws.com","port":"33036","db":"callouts","tz":""},{"id":"3b932dce.ae2c12","type":"ui_group","z":"","name":"Numbers","tab":"","order":1,"disp":false,"width":"5"},{"id":"fa648ea3.2abee","type":"ui_group","z":"","name":"Chart","tab":"","order":2,"disp":false,"width":"18"},{"id":"187e60b.cb4fa9f","type":"ui_group","z":"","name":"LACT1","tab":"","order":1,"disp":true,"width":"8","collapse":false},{"id":"7b966023.ecbdb","type":"ui_group","z":"","name":"LACT2","tab":"","order":2,"disp":true,"width":"8","collapse":false},{"id":"b6adeca6.d51f8","type":"ui_group","z":"","name":"LACT3","tab":"","order":3,"disp":true,"width":"8","collapse":false},{"id":"aae5fd56.bcbbb","type":"ui_group","z":"","name":"Trends","tab":"","order":4,"disp":true,"width":"48","collapse":false},{"id":"c1da8caa.547a6","type":"modbus-client","z":"","name":"Hannathon Galveston Modbus","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.169.141.41","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"3000","reconnectTimeout":"5000"},{"id":"979f1bd5.ce3318","type":"ui_group","z":"","name":"Setpoints","tab":"2394da76.e09106","order":3,"disp":true,"width":"6","collapse":false},{"id":"e5b43ef6.24281","type":"twilioConfig","z":"","name":"Hannathon Galveston"},{"id":"ac0c43d5.6c257","type":"ui_group","z":"","name":"Other Values","tab":"2394da76.e09106","disp":true,"width":"6","collapse":false},{"id":"6517ed5d.38c2b4","type":"modbus-client","z":"","name":"Hannathon Galveston VFD 1 Modbus","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.169.141.41","tcpPort":"504","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectTimeout":2000},{"id":"f5705f78.452fa","type":"modbus-client","z":"","name":"Hannathon Galveston VFD 2 Modbus","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.169.141.41","tcpPort":"505","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectTimeout":2000},{"id":"7e8a6750.007f08","type":"ui_group","z":"","name":"Flow","tab":"2394da76.e09106","disp":true,"width":"6","collapse":false},{"id":"99e2c613.7095a8","type":"sms","z":"1e3250c0.1694ff","name":"Customer Twilio","message":"","numbers":"+18172473760, +14328133806,+14328131895,+14326614092,+14325565341,+14324139363,+14324137920,+14326648765,+14326645113,+14327411885","throttle":"5000","twilio":"e5b43ef6.24281","x":1560.01953125,"y":648.1250066757202,"wires":[[]]},{"id":"13dadaff.7d1115","type":"sms","z":"1e3250c0.1694ff","name":"Internal Twilio","message":"","numbers":"","throttle":"5000","twilio":"9a4b6151.b1386","x":2233.519287109375,"y":363.12506103515625,"wires":[[]]},{"id":"96ab7639.8fb418","type":"trigger","z":"1e3250c0.1694ff","op1":"","op2":"bad","op1type":"pay","op2type":"str","duration":"15","extend":true,"units":"min","reset":"","bytopic":"all","name":"Comm Fail Message Trigger","x":494.0191421508789,"y":181.12499332427979,"wires":[["dfaf3dc6.96468"]]},{"id":"8d8a4c12.69ba4","type":"function","z":"1e3250c0.1694ff","name":"Comm Status Cache","func":"var m = \"Current Time        \" + msg.timeStamp\nm += \"\\nGalveston\\n\"\n\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\nif(msg.payload === \"bad\") {\n        flow.set(\"scadaCommAlarm\", \"Alarm\")\n    if(scadaCommAlarm === \"Normal\") {\n        // added to make alarmAcked False at first comm alarm\n        flow.set(\"alarmAcked\", false)\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Active:   SCADA Communication Offline\"\n        msg.payload = m\n        return msg\n    }\n    \n} else {\n        flow.set(\"scadaCommAlarm\", \"Normal\")\n    if(scadaCommAlarm === \"Alarm\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Cleared:  SCADA Communication Now Online\"\n        msg.payload = m\n        return msg\n    }  \n}","outputs":1,"noerr":0,"x":990.0191421508789,"y":182.12499332427979,"wires":[["72c81b4.b954be4","b0cca161.4171"]]},{"id":"b11f9554.cc25f8","type":"comment","z":"1e3250c0.1694ff","name":"CUSTOMER ALARMS","info":"","x":205.5191421508789,"y":72.12499332427979,"wires":[]},{"id":"dfaf3dc6.96468","type":"moment","z":"1e3250c0.1694ff","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":741.5191421508789,"y":182.12499332427979,"wires":[["8d8a4c12.69ba4"]]},{"id":"ec96df04.5feb1","type":"http in","z":"1e3250c0.1694ff","name":"Manual Get Status","url":"/get_status","method":"post","upload":false,"swaggerDoc":"","x":541.0330505371094,"y":62.124996185302734,"wires":[["e5a02ad3.7d4eb8"]]},{"id":"c3fe43e1.cb72c","type":"http response","z":"1e3250c0.1694ff","name":"Respond with Status Msg","statusCode":"200","headers":{"content-type":"text/plain"},"x":1547.0435791015625,"y":61,"wires":[]},{"id":"b031a33f.021f1","type":"function","z":"1e3250c0.1694ff","name":"Check Cmd Add Return Phone","func":"var cmd = msg.payload.Body.toLowerCase()\n\nif(cmd.indexOf(\"status\") !== -1 || cmd.indexOf(\"1\") !== -1) {\n    return msg\n} else if(cmd.indexOf(\"reset\") !== -1 || cmd.indexOf(\"2\") !== -1) {\n    return [null, msg]\n} else if(cmd.indexOf(\"setpoints\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n    return [null, null, msg]\n} else if(cmd.indexOf(\"flow\") !== -1 || cmd.indexOf(\"4\") !== -1) {\n    return [null, null, null, msg]\n} else if(cmd.indexOf(\"ack\") !== -1 || cmd.indexOf(\"9\") !== -1) {\n    return [null, null, null, null, msg]\n} else if(cmd.indexOf(\"start\") == -1 && cmd.indexOf(\"stop\") == -1) {\n    return [null, null, null, null, null, msg]\n}\n// } else {\n//     return [null, null, null, msg]\n// }\n\n// else if(cmd.indexOf(\"setpoint\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n//     return [null, null, msg]\n// }","outputs":6,"noerr":0,"x":982.0400161743164,"y":91.12499523162842,"wires":[["3c20b8a0.a2a258"],["caf89676.8bb518","54e7a8b6.cec908"],["6b8d8fe7.9937e"],["69580305.1773cc"],["79fd2e73.03994","e5e81db2.ad1ad"],["5e9b4bdb.2b7144"]]},{"id":"3c20b8a0.a2a258","type":"function","z":"1e3250c0.1694ff","name":"Send Status Message","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nGalveston\\nStatus Update:\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var alarmRegDate = flow.get(\"alarmRegDate\")\n\n    var status = flow.get(\"Status\")\n    var flowVals = flow.get(\"Flow\")\n    var alarms = flow.get(\"Alarms\")\n    var levels = flow.get(\"Levels\")\n    var other = flow.get(\"Other\")\n    var scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nStatus Time         \" + statusRegDate\n    status.sort()\n\n    levels.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + name\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n\n    });\n\n    flowVals.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + name\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n\n    });\n    \n    other.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        \n        if(name == \"Flow Rate (BPD)\") {\n              var st = \"\\n\" + name\n            for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n                st = st + \" \"\n            }\n            statusMsg = statusMsg + st + o[name]               \n        }\n\n       \n    });    \n\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + name\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n\n    });\n\n\n\n    var foundAlarm = false\n\n    alarms.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(o[name] === \"Alarm\") {\n\n            if(!foundAlarm) {\n            statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n            foundAlarm = true\n            }\n\n        var st = \"\\n\" + name\n      //  for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n     //       st = st + \" \"\n     //   }\n\n        statusMsg = statusMsg + st \n        }\n        \n    });\n\n\n\n\n    if(scadaCommAlarm === \"Alarm\") {\n    if(!foundAlarm) {\n    statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n    }\n\n    //statusMsg = statusMsg + \"\\nActive:  \" + scadaCommAlarmDate\n    statusMsg = statusMsg + \"\\nSCADA Communication Offline\"\n    foundAlarm = true  \n    }  \n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1260.5365028381348,"y":60.13541030883789,"wires":[["c3fe43e1.cb72c"]]},{"id":"e5a02ad3.7d4eb8","type":"moment","z":"1e3250c0.1694ff","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":743.5364608764648,"y":63.13541030883789,"wires":[["b031a33f.021f1"]]},{"id":"e459007b.cfa49","type":"cron","z":"1e3250c0.1694ff","name":"Status Message Schedule","crontab":"0 0,30 6-17 * * 1-5","x":185.53650665283203,"y":250.135404586792,"wires":[[]]},{"id":"477f988d.c5e628","type":"comment","z":"1e3250c0.1694ff","name":"Mon-Fri 06:00AM-5:30PM 30 minutes","info":"","x":204.5191421508789,"y":214.13539600372314,"wires":[]},{"id":"5a85e941.be2ea8","type":"ui_button","z":"1e3250c0.1694ff","name":"Alarm Reset","group":"b77c53f.84b19b","order":1,"width":0,"height":0,"passthru":false,"label":"RESET ALARMS","color":"","bgcolor":"red","icon":"","payload":"2","payloadType":"str","topic":"","x":202.71383666992188,"y":510.900146484375,"wires":[["54e7a8b6.cec908"]]},{"id":"34dd5925.482f96","type":"trigger","z":"1e3250c0.1694ff","op1":"1","op2":"0","op1type":"num","op2type":"num","duration":"5","extend":false,"units":"s","reset":"","bytopic":"all","name":"","x":614.0435447692871,"y":509.535325050354,"wires":[["c50ee156.e7bd4"]]},{"id":"c50ee156.e7bd4","type":"function","z":"1e3250c0.1694ff","name":"Reset Cache","func":"if(msg.payload == 0) {\nflow.set(\"resetButton\", 0)\n} else {\nflow.set(\"resetButton\", 1)   \n}\nreturn msg\n\n\n","outputs":1,"noerr":0,"x":767.5365829467773,"y":510.6360025405884,"wires":[["79b81cdd.9492b4","36528c5e.d5ada4","6a174a98.e4e0d4"]]},{"id":"caf89676.8bb518","type":"function","z":"1e3250c0.1694ff","name":"Send Reset Confirmation","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nGalveston\\nAlarm Reset executed.\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1286.542579650879,"y":109.16405582427979,"wires":[["c3fe43e1.cb72c"]]},{"id":"54e7a8b6.cec908","type":"function","z":"1e3250c0.1694ff","name":"Send and Set Cache","func":"var resetButton = flow.get(\"resetButton\")\n\nif(resetButton != 1) {\nflow.set(\"resetButton\", 1)     \nreturn msg\n}\n\n\n","outputs":1,"noerr":0,"x":419.54266357421875,"y":511.1647939682007,"wires":[["34dd5925.482f96"]]},{"id":"e739bcf2.66609","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"good","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":263.0191421508789,"y":175.12499332427979,"wires":[["96ab7639.8fb418"]]},{"id":"5e9b4bdb.2b7144","type":"function","z":"1e3250c0.1694ff","name":"Send Help Menu","func":"var statusMsg = \"Current Time        \" + msg.timeStamp\nstatusMsg += \"\\nError: Command not recognized.\\nView Status=1\\nReset Alarms=2\\nSetpoints=3\\nFlow=4\\nAckAlarm=9\"\n    \nmsg.payload = statusMsg\nreturn msg;\n\n","outputs":1,"noerr":0,"x":1271.538673400879,"y":359.1289300918579,"wires":[["c3fe43e1.cb72c"]]},{"id":"85dcb279.76567","type":"fastcsv","z":"1e3250c0.1694ff","name":"fastcsv","headers":true,"headerstr":"","ignoreEmpty":true,"discardUnmappedColumns":true,"strictColumnHandling":false,"delimiter":",","quote":"\"","escape":"\"","comment":"#","ltrim":false,"rtrim":false,"rowDelimiter":"\\n","includeEndRowDelimiter":false,"quoteHeaders":false,"quoteColumns":false,"x":176.03475189208984,"y":382.45313930511475,"wires":[["52b4a664.646e58"]]},{"id":"1aaf9584.b553aa","type":"file in","z":"1e3250c0.1694ff","name":"Read Modbus Point Config","filename":"/data/modbus_points.csv","format":"utf8","chunk":false,"sendError":false,"x":369.28866958618164,"y":306.33594131469727,"wires":[["85dcb279.76567"]]},{"id":"79c093cd.ee367c","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":139.6558485031128,"y":304.55858516693115,"wires":[["1aaf9584.b553aa"]]},{"id":"52b4a664.646e58","type":"function","z":"1e3250c0.1694ff","name":"cacheConfig","func":"var pts = msg.payload\nvar points_lookup = {}\npts.forEach(function(p){\n    \n    if (points_lookup[p.reg_name]) {\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off, 'parse': p.parse})\n    } else {\n      points_lookup[p.reg_name] = {}\n      points_lookup[p.reg_name].name = p.reg_name\n      points_lookup[p.reg_name].parse = p.parse\n      points_lookup[p.reg_name].group = p.group\n      points_lookup[p.reg_name].quantity = p.quantity\n      points_lookup[p.reg_name].address = parseInt(p.reg_address)\n      points_lookup[p.reg_name].points = []\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off})\n    } \n});\n\nflow.set('points', points_lookup)        ","outputs":1,"noerr":0,"x":368.0425796508789,"y":386.47657775878906,"wires":[[]]},{"id":"46199edb.95641","type":"cron","z":"1e3250c0.1694ff","name":"","crontab":"*/2 * * * * *","x":160.04257202148438,"y":661.5703125,"wires":[["7caf4dbc.1674c4","8b967cda.35703"]]},{"id":"e77f11e7.bcc72","type":"function","z":"1e3250c0.1694ff","name":"Loop Through Points","func":"var points = flow.get('points')\nvar modbusStatus = flow.get('modbusStatus')\nif(points && (modbusStatus.indexOf('active') != -1 || modbusStatus.indexOf('timeout') != -1)) {\nvar numPoints = Object.keys(points).length\nvar idx = flow.get('idx')\n\nif (idx == undefined || idx >= numPoints) {\n    idx = 0\n}\n\nvar names = Object.keys(points)\nmsg.points = points[names[idx]].points\nmsg.name = names[idx]\nmsg.parse = points[names[idx]].parse\nmsg.group = points[names[idx]].group\n//node.error(msg.name)\n//node.error(points[names[idx]].address)\n//node.error(points[names[idx]].quantity)\n\nmsg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': points[names[idx]].address, 'quantity': points[names[idx]].quantity }\n\nif(idx <= numPoints-1) {\n    idx += 1\n    flow.set('idx', idx)\n      \n} else {\nflow.set('idx', 0)  \n}\nreturn msg;  \n}\n\n","outputs":1,"noerr":0,"x":635.0308837890625,"y":618.46484375,"wires":[["5fcd0bfb.2b1574"]]},{"id":"7caf4dbc.1674c4","type":"moment","z":"1e3250c0.1694ff","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":390.5386657714844,"y":619.12890625,"wires":[["e77f11e7.bcc72"]]},{"id":"7daa23cd.76ba9c","type":"comment","z":"1e3250c0.1694ff","name":"Poll once every 2 seconds","info":"","x":217.0425796508789,"y":572.4765558242798,"wires":[]},{"id":"2a1ef057.0d1e8","type":"inject","z":"1e3250c0.1694ff","name":"SEND RESET MANUALLY","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":228.0191421508789,"y":441.4583387374878,"wires":[["5a85e941.be2ea8","54e7a8b6.cec908"]]},{"id":"5d651816.465b98","type":"status","z":"1e3250c0.1694ff","name":"","scope":["5fcd0bfb.2b1574"],"x":460.01914978027344,"y":684.4583864212036,"wires":[["57b17442.3d9ddc"]]},{"id":"57b17442.3d9ddc","type":"function","z":"1e3250c0.1694ff","name":"modbus status","func":"flow.set(\"modbusStatus\",msg.status.text)","outputs":1,"noerr":0,"x":636.0191421508789,"y":682.1249933242798,"wires":[[]]},{"id":"5d67cab0.09df34","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":230.80039978027344,"y":117.08592987060547,"wires":[[]]},{"id":"2181a257.8cb1de","type":"function","z":"1e3250c0.1694ff","name":"Parse Result","func":"\nif (msg.name == \"Status\") {\n  return msg\n} else if(msg.name.indexOf(\"Alarms\") != -1) {\nreturn [null,msg]    \n} else {\nreturn [null,null,msg]\n}\n\n\n\n","outputs":3,"noerr":0,"x":1101.5426406860352,"y":643.1640901565552,"wires":[["68eeb828.a8ee98"],["76636a7e.a245e4","3334abae.1fbf94"],["93fec91b.522958","3334abae.1fbf94"]]},{"id":"68eeb828.a8ee98","type":"function","z":"1e3250c0.1694ff","name":"Parse Status","func":"flow.set(\"statusRegDate\", msg.timeStamp)\nvar status = flow.get(\"Status\")||[]\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n// var names = Object.keys(status)\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    var val = \"\"\n    if((r & Math.pow(2,p.bit)) > 0) {\n        // var obj = {}\n        val = p.alias_on\n        // status.push(obj)\n    } else {\n        // var obj = {}\n        val = p.alias_off\n        // status.push(obj)\n    }\n    var idx = names.indexOf(p.name)\n    var o = {}\n    o[p.name] = val\n    if(idx == -1) {\n        status.push(o)\n    } else {\n        status[idx] = o\n    }\n});\n\nflow.set(\"Status\", status)","outputs":1,"noerr":0,"x":1271.042610168457,"y":595.8282079696655,"wires":[[]]},{"id":"76636a7e.a245e4","type":"function","z":"1e3250c0.1694ff","name":"Parse Alarms","func":"\nvar alarmMsg = \"Current Time        \" + msg.timeStamp\nalarmMsg += \"\\nGalveston\"\nvar voiceMsg = \"Hello. There are active alarms at location. Galveston. \"\n\nvar newAlarm = false\n\nflow.set(\"alarmRegDate\", msg.timeStamp)\nvar alarms = flow.get(\"Alarms\")||[]\nvar old_names = []\nalarms.forEach(function(a){\n  old_names.push(Object.keys(a)[0]) \n});\n\n// var new_alarms = []\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n\n     if((r & Math.pow(2,p.bit)) > 0) {\n      var obj = {}\n      obj[p.name] = p.alias_on\n    //   new_alarms.push(obj)\n     } else {\n      obj = {}\n      obj[p.name] = p.alias_off\n    //   new_alarms.push(obj)\n     }\n    \n    // node.error(old_names)\n    var idx = old_names.indexOf(p.name)\n    // node.error('INDEX OF NAME')\n    // node.error(idx)\n    \n    \n    \n        \n    \n    if (idx != -1) {\n        // node.error('obj[p.name]')\n        // node.error(obj[p.name])\n        // node.error('alarms[idx][p.name]')\n        // node.error(alarms[idx][p.name])        \n        \n        if(alarms[idx][p.name] != obj[p.name]) {\n          if(obj[p.name] == p.alias_on) {\n              \n             alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n             voiceMsg = voiceMsg + \"Active. \" + p.name + \".\"\n          } else {\n             alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n          }\n        //   if((p.name != \"PD 1 Fail to Start\")){\n          newAlarm = true\n        //   }\n        } \n        \n        alarms[idx][p.name] = obj[p.name]\n        \n    } else {\n        alarms.push(obj)\n    }\n    \n    \n});\n\n\n\nflow.set(\"Alarms\", alarms)\n\nif(newAlarm) {\n    var alarmActive = false\n    alarms.forEach(function(a){\n        var val = Object.keys(a)[0]\n        val = a[val]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            alarmActive = true\n        }\n    });\n    flow.set('alarmActive', alarmActive)\n    // if active alarm, call and text\n    if(alarmMsg.indexOf('Alarm Active') != -1) {\n        voiceMsg = voiceMsg + \". Press any key to acknowledge the alarm.\"\n        flow.set('voiceMsg', voiceMsg)\n        return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n    } else {\n    return {\"payload\": alarmMsg}     \n    }\n    // if alarm clear, just text\n   \n} \n\n\n\n\n\n\n\n\n\n\n\n// var alarmMsg = \"Current Time        \" + msg.timeStamp\n// alarmMsg += \"\\nConroe\"\n\n// var voiceMessage = \"Hello. There are active alarms at location. Conroe. \"\n\n// var newAlarm = false\n\n// flow.set(\"alarmRegDate\", msg.timeStamp)\n// var old_alarms = flow.get(\"Alarms\")||[]\n// var old_names = []\n// old_alarms.forEach(function(a){\n//   old_names.push(Object.keys(a)[0]) \n// });\n\n// var new_alarms = []\n// var r = msg.payload[0]\n\n// msg.points.forEach(function(p){\n\n//      if((r & Math.pow(2,p.bit)) > 0) {\n//       var obj = {}\n//       obj[p.name] = p.alias_on\n//       new_alarms.push(obj)\n//      } else {\n//       var obj = {}\n//       obj[p.name] = p.alias_off\n//       new_alarms.push(obj)\n//      }\n    \n//     // node.error(old_names)\n//     var idx = old_names.indexOf(p.name)\n//     // node.error('INDEX OF NAME')\n//     // node.error(idx)\n    \n//     if (idx != -1) {\n//         // node.error('obj[p.name]')\n//         // node.error(obj[p.name])\n//         // node.error('old_alarms[idx][p.name]')\n//         // node.error(old_alarms[idx][p.name])        \n        \n//         if(old_alarms[idx][p.name] != obj[p.name]) {\n//           if(obj[p.name] == p.alias_on) {\n//              alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n//              voiceMsg = voiceMsg + \"Active:   \" + p.name + \".\"\n//           } else {\n//              alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n//           }\n//           newAlarm = true\n//         } \n//     }\n    \n// });\n\n\n\n// flow.set(\"Alarms\", new_alarms)\n\n// if(newAlarm) {\n//     // if active alarm, call and text\n//     if(alarmMsg.indexOf('Alarm Active') != -1) {\n//         return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n//     } else {\n//     return {\"payload\": alarmMsg}     \n//     }\n//     // if alarm clear, just text\n   \n// } \n","outputs":2,"noerr":0,"x":1306.0425720214844,"y":639.8282995223999,"wires":[["99e2c613.7095a8","b0cca161.4171"],["6e477533.91e50c"]]},{"id":"93fec91b.522958","type":"function","z":"1e3250c0.1694ff","name":"Parse Register Value","func":"if(msg.parse.length > 0) {\nvar parse = JSON.parse(msg.parse)\nvar val = msg.payload\n\n\nparse.forEach(function(p){\n    \nswitch(p.func) {\n    \ncase \"float32ToNum\":\n//node.error(\"val before\")\n//node.error(val)\nif(val[0] == 0 && val[1] == 0) {\n val = 0.0   \n} else {\nvar bits = (val[0] << 16 | val[1]);\nvar sign = ((bits >>> 31) == 0) ? 1.0 : -1.0;\nvar e = ((bits >>> 23) & 0xff);\nvar m = (e == 0) ? (bits & 0x7fffff) << 1 : (bits & 0x7fffff) | 0x800000;\nvar f = sign * m * Math.pow(2, e - 150);\nf = Math.fround(f);\n// f = parseFloat(f)\n//node.error(\"f before\")\n//node.error(f)\n\nf = parseFloat(f)\n// node.error(\"f after\")\n// node.error(f)\nf = f.toFixed(2)\n// node.error(\"f after\")\n// node.error(f)\nval = f\n}\nbreak;\n\ncase \"scale\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    \n    val = val * p.param\nbreak;  \n\ncase \"lact1SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 1; i <= 3; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;   \n\ncase \"lact2SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 4; i <= 5; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;  \n\ncase \"lact3SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 6; i <= 8; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;  \n\n\ncase \"alias\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    \n    val = p.param[val]\n    \nbreak;\n\ncase \"int32ABCD\":\n    if(val.constructor == Array) {\n        val = (val[0] << 16) + val[1]   \n    } else {\n        val = val\n    }\n    \nbreak;\n\n// LACT 1: 2,3,4\n// LACT 2: 5,6\n// LACT 3: 7,8,9\n\n\ndefault:\n// node.error('DIDNT FIND PARSER')\n    val = msg.payload[0]\n    break;\n\n}\n\n});\n} else {\n    // default for no parser is single reg value int\n    var val = msg.payload[0]\n}\n\n\n// cache value\n// node.error(msg.group)\nvar status = flow.get(msg.group)||[]\n// node.error(\"PREVIOUS STATUS\")\n// node.error(status)\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n\nvar idx = names.indexOf(msg.name)\nvar o = {}\no[msg.name] = val\nif(idx == -1) {\n    status.push(o)\n} else {\n    status[idx] = o\n}\n\n\nflow.set(msg.group, status)","outputs":1,"noerr":0,"x":1242.0230407714844,"y":802.8242406845093,"wires":[["3334abae.1fbf94"]]},{"id":"3334abae.1fbf94","type":"debug","z":"1e3250c0.1694ff","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1249.0582580566406,"y":967.0624914169312,"wires":[]},{"id":"a32d7e08.2b6c3","type":"function","z":"1e3250c0.1694ff","name":"CLEAR CACHE","func":"// flow.set('Other', undefined)\nflow.set('Flow', undefined)\n// flow.set('Setpoints', undefined)\n// flow.set('Alarms', undefined)\n// flow.set('Levels', undefined)\n// flow.set('Alarms', undefined)\n// flow.set('points', undefined)","outputs":1,"noerr":0,"x":743.0582046508789,"y":849.0624933242798,"wires":[[]]},{"id":"191da712.ef5789","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":560.5426063537598,"y":843.1640539169312,"wires":[["a32d7e08.2b6c3"]]},{"id":"941e045c.c8e298","type":"comment","z":"1e3250c0.1694ff","name":"CLEAR CACHE","info":"","x":630.5425796508789,"y":790.1640558242798,"wires":[]},{"id":"c11a503.18702b","type":"comment","z":"1e3250c0.1694ff","name":"WELCOME MESSAGE","info":"","x":679.5425796508789,"y":924.1640558242798,"wires":[]},{"id":"6b8d8fe7.9937e","type":"function","z":"1e3250c0.1694ff","name":"Send Setpoints","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nGalveston\\nSetpoints Update:\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var status = flow.get(\"Setpoints\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nSetpoints Time         \" + statusRegDate\n    status.sort()\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + name\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n    });\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1265.5191650390625,"y":158.125,"wires":[["c3fe43e1.cb72c"]]},{"id":"1279c6ec.b945e9","type":"http in","z":"1e3250c0.1694ff","name":"Alarm Call Pickup","url":"/call_answered","method":"post","upload":false,"swaggerDoc":"","x":1814.5230178833008,"y":1243.1600618362427,"wires":[["6cc5da72.266a94"]]},{"id":"10c68cd3.552bb3","type":"http response","z":"1e3250c0.1694ff","name":"Send TwiML","statusCode":"200","headers":{},"x":2219.523017883301,"y":1244.1600618362427,"wires":[]},{"id":"44cae48d.a694ec","type":"function","z":"1e3250c0.1694ff","name":"Start Call","func":"// msg.headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n// msg.headers = {\"Content-Type\": \"application/json\"}\n// msg.payload = {\"From\": \"+14322162465\", \"To\": \"+14696512674\", \"Url\": \"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"}\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls?To=14696512674&From=+14322162465&Url=http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls.json?To%3D%2B14696512674%26From%3D%2B14322162465%26\"\n// msg.url = \"https%3A%2F%2Fapi.twilio.com%2F2010-04-01%2FAccounts%2FACd3d1e28d6055eac9af7579cbe9b2df67%2FCalls%3FTo%3D%2B14696512674%26From%3D%2B14322162465%26Url%3Dhttp%3A%2F%2Fec2-18-218-144-146.us-east-2.compute.amazonaws.com%3A1880%2Fcall_answered\"\n\n// Download the helper library from https://www.twilio.com/docs/node/install\n// Your Account Sid and Auth Token from twilio.com/console\nnode.error(\"MESSAGE IN CALL\")\nnode.error(msg)\nvar ack = flow.get('alarmAcked')||false\nif(!ack || msg.reset) {\n    if(msg.reset) {\n        flow.set('alarmAcked', false)\n    }\nvar twilio = global.get('twilio')\nconst accountSid = 'ACd3d1e28d6055eac9af7579cbe9b2df67';\nconst authToken = '075c463b1989281acdfe67dd508ea15a';\nconst client = twilio(accountSid, authToken);\n\nvar users = flow.get('alarmContacts')  \nvar nums = Object.keys(users)\nvar numIndex = flow.get('numIndex')||0\n\nif(numIndex >= nums.length) {\n    numIndex = 0\n} else if(msg.reset) {\n    numIndex = 0\n}\nnode.error(numIndex)\nvar to = nums[numIndex]\nnode.error(\"ALARM CALL NOW\")\nnode.error(to)\nnumIndex = numIndex + 1\nflow.set('numIndex', numIndex)\n\nclient.calls\n      .create({\n         url: 'http://ec2-3-15-5-193.us-east-2.compute.amazonaws.com:1880/call_answered',\n         to: to,\n         from: '+14322872107'\n      })\n      .then(call => node.error(call.sid))\n      .done(node.error);\n      \n      \nreturn {'payload': 0}\n}","outputs":1,"noerr":0,"x":1657.5235900878906,"y":978.1602869033813,"wires":[["7d2af393.b55abc"]]},{"id":"6cc5da72.266a94","type":"function","z":"1e3250c0.1694ff","name":"Process Call","func":"// node.error(\"CALL PICKED UP\")\n// var twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n//     <Response> \\\n//     <Gather action=\\\"http://ec2-13-59-107-160.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n//         <Say voice=\\\"woman\\\">Hello, there is an active alarm at the Conroe Location.  Press 1 to acknowledge and prevent the next operator from being notified.</Say> \\\n//         </Gather> \\\n//         <Say voice=\\\"woman\\\">Sorry, that choice is invalid.</Say> \\\n//     </Response>\"\n      var voiceMsg = flow.get('voiceMsg')\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n    <Response> \\\n      <Gather action=\\\"http://ec2-3-15-5-193.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n        <Say voice=\\\"woman\\\">\"+voiceMsg+\"</Say> \\\n      </Gather> \\\n      <Say voice=\\\"woman\\\">Sorry, I didn't get your response. You can still acknowledge the alarm by texting 9 or a. c. k. to this number. Goodbye.</Say> \\\n    </Response>\";\n\nmsg.payload = twiml_response;\nreturn msg;      \n      \n\n// <Gather action=\\\"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n\n    //   </Gather> \\\n    //   <Say voice=\\\"woman\\\">Sorry, that choice is invalid.</Say> \\","outputs":1,"noerr":0,"x":2030.5230178833008,"y":1244.1600618362427,"wires":[["10c68cd3.552bb3"]]},{"id":"2f1a9e0e.fc4f32","type":"function","z":"1e3250c0.1694ff","name":"handleGather","func":"// Use 2 outputs, 2nd is for mqtt topic/payload combination\n// Could be useful to post other caller info to a topic\n// var mqttOut = null;\n// var responseMsg = \"\";\nnode.error('INSIDE GATHER')\n// var name = \"wholehouse\";\n// var reading = context.global[name];\n\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n        <Response><Say voice=\\\"woman\\\"> \\\n\tYou have acknowledged the alarm.  No other operators will be called.  Check text message for alarm details. Goodbye.\\\n</Say>\\\n</Response>\"\nmsg.payload = twiml_response\nflow.set('alarmAcked', true)\nreturn [msg,msg]\n\n","outputs":1,"noerr":0,"x":2037.5465087890625,"y":1321.6991930007935,"wires":[["10c68cd3.552bb3"]]},{"id":"7ca13c7f.801284","type":"catch","z":"1e3250c0.1694ff","name":"","scope":null,"x":1993.7964553833008,"y":1419.5663118362427,"wires":[["8f632dba.21e8e"]]},{"id":"8f632dba.21e8e","type":"debug","z":"1e3250c0.1694ff","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2161.054267883301,"y":1417.1053743362427,"wires":[]},{"id":"69f2f334.f7436c","type":"comment","z":"1e3250c0.1694ff","name":"SECOND OUTPUT = VOICE","info":"","x":1703.5465393066406,"y":929.1991720199585,"wires":[]},{"id":"480a395d.ef1ec8","type":"function","z":"1e3250c0.1694ff","name":"SET ALARM CONTACTS","func":"// var contacts = { '+14696512674': 'William Wylie',  '+19036180235': 'Test Wylie'}\nvar contacts = { '+14328133806': 'Martin Gonzales' , '+14328131895': 'Julian', '+14326614092': 'Lewis', '+14325565341': 'Pumper', '+14324139363': 'Mizza', '+14324137920': 'Layton', '+14326645113': 'Gregg Dean', '+14326648765': 'Kenneth Kuethe'}\nflow.set('alarmContacts', contacts)\n\n\n\n\n// +14326648765,+14328133806,+14328131895\n// kuethgk@sbcglobal.net","outputs":1,"noerr":0,"x":2062.046455383301,"y":1505.0897493362427,"wires":[[]]},{"id":"c94bb3d1.9d86f","type":"function","z":"1e3250c0.1694ff","name":"CLEAR ALARM CONTACTS","func":"flow.set('alarmContacts', undefined)","outputs":1,"noerr":0,"x":2071.546455383301,"y":1564.1991243362427,"wires":[[]]},{"id":"85ee8609.d8a998","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":1848.5464820861816,"y":1500.1991624832153,"wires":[["480a395d.ef1ec8"]]},{"id":"2061ccda.695d14","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1844.5464553833008,"y":1573.1991243362427,"wires":[["c94bb3d1.9d86f"]]},{"id":"3d20f532.22b95a","type":"http in","z":"1e3250c0.1694ff","name":"Operator Input","url":"/operator_response","method":"post","upload":false,"swaggerDoc":"","x":1751.5466766357422,"y":1315.1991605758667,"wires":[["2f1a9e0e.fc4f32","210a314.86b38ce","350f2ec6.7bd582"]]},{"id":"f6fe776e.e67a88","type":"trigger","z":"1e3250c0.1694ff","op1":"","op2":"call_next","op1type":"nul","op2type":"str","duration":"5","extend":true,"units":"min","reset":"","bytopic":"all","name":"","x":1803.0546875,"y":1120.082275390625,"wires":[["6e477533.91e50c"]]},{"id":"7d2af393.b55abc","type":"delay","z":"1e3250c0.1694ff","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1884.8045501708984,"y":971.5585355758667,"wires":[["f6fe776e.e67a88"]]},{"id":"210a314.86b38ce","type":"debug","z":"1e3250c0.1694ff","name":"OEPRATOR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1838.542579650879,"y":1384.6640558242798,"wires":[]},{"id":"2a51cfc.3c42a3","type":"function","z":"1e3250c0.1694ff","name":"send ack text message to other users","func":"node.error(\"SEND ACK TEXT MESSAGE FUNCTION\")\nvar users = flow.get('alarmContacts')\nvar nums = Object.keys(users)\nnode.error(\"MSG PAYLOAD TO\")\nnode.error(msg.payload.To)\nvar idx = nums.indexOf(msg.payload.To)\nvar userName = users[nums[idx]]\nnums.splice(idx,1)\nvar activeAlarms = \"\"\nvar count = 0\nvar alarms = flow.get(\"Alarms\")\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")||\"Normal\"\nif(scadaCommAlarm == \"Alarm\") {\n    activeAlarms += \"SCADA Comm Alarm, \"\n    count += 1\n}\n\n\nnode.error(\"BEFORE LOOP\")\n    alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms += name + \", \"\n            count += 1\n        }\n    });\n    activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\nnode.error(\"AFTER LOOP\")\nif(count > 1) {\nvar msg = \"The alarms: \" + activeAlarms + \" were acknowledged by: \" + userName    \n} else {\nvar msg = \"The alarm: \" + activeAlarms + \" was acknowledged by: \" + userName    \n}\n\nvar n = \"\"\nnums.forEach(function(num){\n   n = n + num + \",\" \n});\nn = n.substring(0,n.length-1)\nvar obj = {\"payload\": msg, \"topic\": n, \"reset\": true}\nnode.error(obj)\nreturn obj","outputs":1,"noerr":0,"x":1368.5427169799805,"y":1143.664119720459,"wires":[["f6fe776e.e67a88"]]},{"id":"b0cca161.4171","type":"sms","z":"1e3250c0.1694ff","name":"Customer Twilio","message":"","numbers":"+13375229291","throttle":"5000","twilio":"e5b43ef6.24281","x":1589.542579650879,"y":723.1640558242798,"wires":[[]]},{"id":"5046c4cf.00f24c","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"Hello, this is the Hannathon Galveston Callout Alarm Number.  SMS and Voice alarms will come from this. If a voice alarm comes, press any key to acknowledge the alarm when you answer the call. You can text this number '1' for site status, '2' to reset alarms, '3' for setpoints, '9' to acknowledge alarms.  If you are receiving this in error or need help, please contact Mark Cowan 8172473760 or Will Wylie 4695822274 #0.  Text 'STOP' to stop messages and 'START' to start messages if they were previously stopped.","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":670.8003921508789,"y":974.085991859436,"wires":[["99e2c613.7095a8"]]},{"id":"14cf6acd.676cf5","type":"inject","z":"1e3250c0.1694ff","name":"Dashboard Update Interval","topic":"","payload":"","payloadType":"date","repeat":"10","crontab":"","once":true,"onceDelay":0.1,"x":321.54260635375977,"y":1597.1646661758423,"wires":[["acd558ad.e722a8","34881f4f.97cc3","c516c3e.febde4","1d3e721e.8affbe","98bdc7c.74b8438"]]},{"id":"eed3b354.c5aa7","type":"comment","z":"1e3250c0.1694ff","name":"MAIN DASHBOARD","info":"","x":276.54260635375977,"y":1519.6640558242798,"wires":[]},{"id":"acd558ad.e722a8","type":"function","z":"1e3250c0.1694ff","name":"Setpoint Values","func":"var lact1 = flow.get('Setpoints')\n\n// var reA = /[^a-zA-Z]/g;\n// var reN = /[^0-9]/g;\n\n// function sortAlphaNum(a, b) {\n//   var aA = Object.keys(a)[0].replace(reA, \"\");\n//   var bA = Object.keys(b)[0].replace(reA, \"\");\n//   if (aA === bA) {\n//     var aN = parseInt(Object.keys(a)[0].replace(reN, \"\"), 10);\n//     var bN = parseInt(Object.keys(b)[0].replace(reN, \"\"), 10);\n//     return aN === bN ? 0 : aN > bN ? 1 : -1;\n//   } else {\n//     return aA > bA ? 1 : -1;\n//   }\n// }\n\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\n\nlact1.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\nlact1.forEach(function(o){\n    var n = Object.keys(o)[0]\n    msgs.push({'topic': n, 'payload': o[n]}) \n});\nreturn msgs","outputs":16,"noerr":0,"x":621.542610168457,"y":1593.6642999649048,"wires":[["57bd68f.f4bcd98"],["3f3dfd2d.e711b2"],["8de1516f.c0ee7"],["d2ca1cc0.5b097"],["4f8aec21.f39164"],["dc649082.6bf91"],[],[],[],[],[],[],[],[],[],[]]},{"id":"57bd68f.f4bcd98","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":1,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":831.5425872802734,"y":1510.6639490127563,"wires":[]},{"id":"3f3dfd2d.e711b2","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":2,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":830.2847480773926,"y":1536.2260818481445,"wires":[]},{"id":"8de1516f.c0ee7","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":3,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":828.2847480773926,"y":1565.2260818481445,"wires":[]},{"id":"d2ca1cc0.5b097","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":4,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":830.2847480773926,"y":1586.2260818481445,"wires":[]},{"id":"4f8aec21.f39164","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":5,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":836.2847480773926,"y":1616.2260818481445,"wires":[]},{"id":"dc649082.6bf91","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":6,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":837.2847480773926,"y":1638.2260818481445,"wires":[]},{"id":"34881f4f.97cc3","type":"function","z":"1e3250c0.1694ff","name":"Status Values","func":"var status = flow.get('Status')\nvar status1 = flow.get('Levels')\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\nvar arr = status\n\narr.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\narr = status1.concat(arr)\n\nvar msgs = []\narr.forEach(function(o){\n    var n = Object.keys(o)[0]\n    if (o[n].constructor == Number) {\n        msgs.push({'topic': n, 'payload': o[n]})     \n    } else {\n        msgs.push({'topic': n, 'payload': o[n]}) \n    }\n    \n});\nreturn msgs","outputs":18,"noerr":0,"x":604.5425796508789,"y":2177.164032936096,"wires":[["42389156.669d3"],["dbe8735a.d5a3a"],["879d783d.141058"],["b8fc45c9.59c518"],["1e3bc643.978c8a"],["3d2574b.273ce8c"],["c59049b1.2e1c48"],["c9a9f96.a52a508"],["1fce7dae.69cf92"],["2d5012ad.c3a1fe"],["4e99141.c49e6ec"],["18e91463.881d8c"],["e36b27fe.f3ee88"],["c30a9c71.4e998"],[],[],[],[]]},{"id":"42389156.669d3","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":2,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":805.5425643920898,"y":2086.163598060608,"wires":[]},{"id":"dbe8735a.d5a3a","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":5,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":804.284725189209,"y":2111.725730895996,"wires":[]},{"id":"879d783d.141058","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":6,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":802.284725189209,"y":2140.725730895996,"wires":[]},{"id":"b8fc45c9.59c518","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":7,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":804.284725189209,"y":2161.725730895996,"wires":[]},{"id":"1e3bc643.978c8a","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":8,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":810.284725189209,"y":2191.725730895996,"wires":[]},{"id":"3d2574b.273ce8c","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":9,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":811.284725189209,"y":2213.725730895996,"wires":[]},{"id":"c59049b1.2e1c48","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":10,"width":0,"height":0,"name":"lact1_text7","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":804.284725189209,"y":2236.725730895996,"wires":[]},{"id":"c9a9f96.a52a508","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":11,"width":0,"height":0,"name":"lact1_text8","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":816.284725189209,"y":2273.725730895996,"wires":[]},{"id":"1fce7dae.69cf92","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":12,"width":0,"height":0,"name":"lact1_text9","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":807.284725189209,"y":2314.725730895996,"wires":[]},{"id":"c516c3e.febde4","type":"function","z":"1e3250c0.1694ff","name":"Alarm Values","func":"var status = flow.get('Alarms')\n\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\n\nstatus.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\nstatus.forEach(function(o){\n    var n = Object.keys(o)[0]\n    msgs.push({'topic': n, 'payload': o[n]}) \n});\nreturn msgs","outputs":27,"noerr":0,"x":1068.5425872802734,"y":2203.1639490127563,"wires":[["4e2eeabc.15b6d4"],["bca765fd.f4dd38"],["43bb6163.21733"],["c4b5c277.8ebd2"],["80395e0e.ef43f"],["abde55de.f9f928"],["f2f543b2.31c63"],["89dd15a2.6281a8"],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"4e2eeabc.15b6d4","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":2,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1288.5425643920898,"y":2120.163598060608,"wires":[]},{"id":"bca765fd.f4dd38","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":3,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1287.284725189209,"y":2145.725730895996,"wires":[]},{"id":"43bb6163.21733","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":4,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1285.284725189209,"y":2174.725730895996,"wires":[]},{"id":"c4b5c277.8ebd2","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":5,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1287.284725189209,"y":2195.725730895996,"wires":[]},{"id":"80395e0e.ef43f","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":6,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1293.284725189209,"y":2225.725730895996,"wires":[]},{"id":"abde55de.f9f928","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":7,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1294.284725189209,"y":2247.725730895996,"wires":[]},{"id":"f2f543b2.31c63","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":8,"width":0,"height":0,"name":"lact1_text7","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1287.284725189209,"y":2270.725730895996,"wires":[]},{"id":"89dd15a2.6281a8","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":9,"width":0,"height":0,"name":"lact1_text8","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1299.284725189209,"y":2307.725730895996,"wires":[]},{"id":"2d5012ad.c3a1fe","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":13,"width":0,"height":0,"name":"lact1_text10","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":808.5425872802734,"y":2355.1639490127563,"wires":[]},{"id":"4e99141.c49e6ec","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":14,"width":0,"height":0,"name":"lact1_text11","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":807.2847480773926,"y":2380.7260818481445,"wires":[]},{"id":"18e91463.881d8c","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":15,"width":0,"height":0,"name":"lact1_text12","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":805.2847480773926,"y":2409.7260818481445,"wires":[]},{"id":"e36b27fe.f3ee88","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":16,"width":0,"height":0,"name":"lact1_text13","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":807.2847480773926,"y":2430.7260818481445,"wires":[]},{"id":"c30a9c71.4e998","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":17,"width":0,"height":0,"name":"lact1_text14","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":813.2847480773926,"y":2460.7260818481445,"wires":[]},{"id":"bd86e53c.111678","type":"function","z":"1e3250c0.1694ff","name":"CLEAR LEVELS AND ALARMS","func":"flow.set(\"Levels\", undefined)\nflow.set(\"Alarms\", undefined)","outputs":1,"noerr":0,"x":291.05821228027344,"y":1931.5467615127563,"wires":[[]]},{"id":"1f0ecec3.e602f1","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":171.05039978027344,"y":1856.5936365127563,"wires":[["bd86e53c.111678"]]},{"id":"5fcd0bfb.2b1574","type":"modbus-flex-getter","z":"1e3250c0.1694ff","name":"","showStatusActivities":false,"showErrors":false,"server":"c1da8caa.547a6","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":877.0427017211914,"y":672.0585870742798,"wires":[["2181a257.8cb1de","96ab7639.8fb418"],[]]},{"id":"79fd2e73.03994","type":"function","z":"1e3250c0.1694ff","name":"Alarm Acknowledge","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n   var alarms = flow.get(\"Alarms\")\n   var scadaCommAlarm = flow.get(\"scadaCommAlarm\")||\"Normal\"\n   var updateOtherUsersMsg = null\n   var alarmAcked = flow.get(\"alarmAcked\")||false\n    if(alarms && !alarmAcked) {\n        \n    var activeAlarms = \"\"\n    if(scadaCommAlarm == \"Alarm\") {\n        activeAlarms = \"SCADA Comm Alarm, \"\n    }\n    \n        alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms = activeAlarms + name + \", \"\n        }\n    });\n    if ((activeAlarms.length > 0)) {\n        updateOtherUsersMsg = {\"payload\": {}}\n        updateOtherUsersMsg.payload.To = msg.payload.From\n        // node.error(\"updateOtherUsersMsg\", updateOtherUsersMsg)\n        // node.error(\"updateOtherUsersMsg.payload.To\", updateOtherUsersMsg.payload.To)\n        // node.error(\"updateOtherUsersMsg.payload.From\", updateOtherUsersMsg.payload.From)\n        \n     activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\n     statusMsg += \"\\nGalveston\\nAlarms Acknowledged: \" + activeAlarms  \n     flow.set(\"alarmAcked\", true)\n    } else {\n     statusMsg += \"\\nGalveston\\nNo Active Alarms to Acknowledge\"       \n    }\n\n    } else {\n        statusMsg += \"\\nGalveston\\nNo Active Alarms to Acknowledge\" \n    }\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  if(updateOtherUsersMsg) {\n     return [msg, updateOtherUsersMsg]; \n  } else {\n      return [msg];\n  }\n  \n\n","outputs":2,"noerr":0,"x":1281.5426025390625,"y":242.1640625,"wires":[["c3fe43e1.cb72c"],["350f2ec6.7bd582"]]},{"id":"6a174a98.e4e0d4","type":"modbus-write","z":"1e3250c0.1694ff","name":"Set/Reset Alarm Bit 0","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"60","quantity":"1","server":"c1da8caa.547a6","x":1014.5191650390625,"y":517.1250066757202,"wires":[[],[]]},{"id":"1d3e721e.8affbe","type":"function","z":"1e3250c0.1694ff","name":"Other Values","func":"var lact1 = flow.get('Other')\n\n// var reA = /[^a-zA-Z]/g;\n// var reN = /[^0-9]/g;\n\n// function sortAlphaNum(a, b) {\n//   var aA = Object.keys(a)[0].replace(reA, \"\");\n//   var bA = Object.keys(b)[0].replace(reA, \"\");\n//   if (aA === bA) {\n//     var aN = parseInt(Object.keys(a)[0].replace(reN, \"\"), 10);\n//     var bN = parseInt(Object.keys(b)[0].replace(reN, \"\"), 10);\n//     return aN === bN ? 0 : aN > bN ? 1 : -1;\n//   } else {\n//     return aA > bA ? 1 : -1;\n//   }\n// }\n\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\n\nlact1.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\nlact1.forEach(function(o){\n    var n = Object.keys(o)[0]\n    msgs.push({'topic': n, 'payload': o[n]}) \n});\nreturn msgs","outputs":16,"noerr":0,"x":1110.542579650879,"y":1596.1640558242798,"wires":[["9f872bd1.bcca58"],["78f1a7f5.188cd8"],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"9f872bd1.bcca58","type":"ui_text","z":"1e3250c0.1694ff","group":"ac0c43d5.6c257","order":1,"width":0,"height":0,"name":"other_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1330.5425567626953,"y":1513.1637048721313,"wires":[]},{"id":"78f1a7f5.188cd8","type":"ui_text","z":"1e3250c0.1694ff","group":"ac0c43d5.6c257","order":2,"width":0,"height":0,"name":"other_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1329.2847175598145,"y":1538.7258377075195,"wires":[]},{"id":"8b967cda.35703","type":"mqtt out","z":"1e3250c0.1694ff","name":"Hannathon Galveston Keepalive","topic":"Hannathon_Galveston","qos":"0","retain":"","broker":"975eae2.064e85","x":694.5191421508789,"y":1068.1249933242798,"wires":[]},{"id":"e17d7e24.543bb","type":"comment","z":"1e3250c0.1694ff","name":"CCS SCADA HEALTH MANAGER KEEPALIVE MQTT","info":"","x":752.5582046508789,"y":1022.1249933242798,"wires":[]},{"id":"38393e9c.ca4612","type":"cron","z":"1e3250c0.1694ff","name":"","crontab":"0 */3 * * * *","x":465.5191421508789,"y":223.12499332427979,"wires":[["1aaf9584.b553aa"]]},{"id":"216dbe7a.954562","type":"comment","z":"1e3250c0.1694ff","name":"REFRESH points every 3 minutes","info":"","x":704.5191421508789,"y":226.12499332427979,"wires":[]},{"id":"36528c5e.d5ada4","type":"modbus-write","z":"1e3250c0.1694ff","name":"Set/Reset Alarm Bit 0 VFD 1","showStatusActivities":true,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"50","quantity":"1","server":"6517ed5d.38c2b4","x":1133.5192260742188,"y":446.1250305175781,"wires":[[],[]]},{"id":"79b81cdd.9492b4","type":"modbus-write","z":"1e3250c0.1694ff","name":"Set/Reset Alarm Bit 0 VFD 2","showStatusActivities":true,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"50","quantity":"1","server":"f5705f78.452fa","x":1025.5191650390625,"y":388.125,"wires":[[],[]]},{"id":"69580305.1773cc","type":"function","z":"1e3250c0.1694ff","name":"Send Flow","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nGalveston\\nFlow Update:\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var status = flow.get(\"Flow\");\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    // statusMsg = statusMsg + \"\\nFlow Time         \" + statusRegDate\n    status.sort()\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + name\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n    });\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1265.019515991211,"y":200.00390815734863,"wires":[["c3fe43e1.cb72c"]]},{"id":"98bdc7c.74b8438","type":"function","z":"1e3250c0.1694ff","name":"Flow Values","func":"var lact1 = flow.get('Flow')\n\n// var reA = /[^a-zA-Z]/g;\n// var reN = /[^0-9]/g;\n\n// function sortAlphaNum(a, b) {\n//   var aA = Object.keys(a)[0].replace(reA, \"\");\n//   var bA = Object.keys(b)[0].replace(reA, \"\");\n//   if (aA === bA) {\n//     var aN = parseInt(Object.keys(a)[0].replace(reN, \"\"), 10);\n//     var bN = parseInt(Object.keys(b)[0].replace(reN, \"\"), 10);\n//     return aN === bN ? 0 : aN > bN ? 1 : -1;\n//   } else {\n//     return aA > bA ? 1 : -1;\n//   }\n// }\n\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\n\nlact1.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\nlact1.forEach(function(o){\n    var n = Object.keys(o)[0]\n    msgs.push({'topic': n, 'payload': o[n]}) \n});\n\nreturn msgs","outputs":16,"noerr":0,"x":1324.019515991211,"y":1870.003890991211,"wires":[["32c49fe8.23d3a"],["2297ee34.8ec812"],["a774c56e.a80468"],["ecaa1cd2.a6408"],["45cd2c1c.e1d3b4"],["41cc3fd2.14eb3"],["6453cf45.70aeb"],["f3bd0103.02aa7"],[],[],[],[],[],[],[],[]]},{"id":"32c49fe8.23d3a","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":1,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1536.0195083618164,"y":1783.0035552978516,"wires":[]},{"id":"2297ee34.8ec812","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":2,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1534.7616691589355,"y":1808.5656881332397,"wires":[]},{"id":"a774c56e.a80468","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":3,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1532.7616691589355,"y":1837.5656881332397,"wires":[]},{"id":"ecaa1cd2.a6408","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":4,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1534.7616691589355,"y":1858.5656881332397,"wires":[]},{"id":"45cd2c1c.e1d3b4","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":5,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1540.7616691589355,"y":1888.5656881332397,"wires":[]},{"id":"41cc3fd2.14eb3","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":6,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1541.7616691589355,"y":1910.5656881332397,"wires":[]},{"id":"6453cf45.70aeb","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":5,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1541.01953125,"y":1940.00390625,"wires":[]},{"id":"f3bd0103.02aa7","type":"ui_text","z":"1e3250c0.1694ff","group":"7e8a6750.007f08","order":6,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1542.01953125,"y":1962.00390625,"wires":[]},{"id":"87bd88a5.7174e8","type":"function","z":"1e3250c0.1694ff","name":"CLEAR SCADA COMM ALARM COUNT","func":"flow.set(\"scadaCommAlarmCount\",0)","outputs":1,"noerr":0,"x":2031.5714797973633,"y":520.2856969833374,"wires":[[]]},{"id":"3b099b56.ef7064","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1769,"y":407,"wires":[["87bd88a5.7174e8"]]},{"id":"c3bfc600.be4bb8","type":"function","z":"1e3250c0.1694ff","name":"SET ALARM ACKED TO FALSE","func":"flow.set(\"alarmAcked\",false)","outputs":1,"noerr":0,"x":2040,"y":573,"wires":[[]]},{"id":"b4ffbca8.159ee","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1781,"y":464,"wires":[["c3bfc600.be4bb8"]]},{"id":"e5e81db2.ad1ad","type":"debug","z":"1e3250c0.1694ff","name":"TEXT MSG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1054.5,"y":262,"wires":[]},{"id":"e5ff66f3.a28dc8","type":"status","z":"1e3250c0.1694ff","name":"VFD Status 2","scope":["79b81cdd.9492b4"],"x":105.01953125,"y":823.0038890838623,"wires":[["92f5fa0c.1ba228"]]},{"id":"afcfd8fb.bf1118","type":"status","z":"1e3250c0.1694ff","name":"VFD Status 1","scope":["36528c5e.d5ada4"],"x":101.01953125,"y":772.0039501190186,"wires":[["92f5fa0c.1ba228"]]},{"id":"92f5fa0c.1ba228","type":"function","z":"1e3250c0.1694ff","name":"Check Alarm Status","func":"return msg","outputs":1,"noerr":0,"x":288.01953887939453,"y":792.0039043426514,"wires":[["39524d8d.2df242"]]},{"id":"39524d8d.2df242","type":"debug","z":"1e3250c0.1694ff","name":"VFD STATUS DEBUG","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":311.8984375,"y":922.6015625,"wires":[]},{"id":"7ec7e5cf.ac37fc","type":"modbus-getter","z":"1e3250c0.1694ff","name":"Hannathon Galveston AC Power Fail","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"Coil","adr":"1032","quantity":"1","server":"c1da8caa.547a6","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":487,"y":737,"wires":[["62343c31.5dcec4"],[]]},{"id":"3c87224f.93975e","type":"cron","z":"1e3250c0.1694ff","name":"","crontab":"*/5 * * * * *","x":214,"y":719,"wires":[["7ec7e5cf.ac37fc"]]},{"id":"27daf5bd.9297ca","type":"function","z":"1e3250c0.1694ff","name":"Parse AC Power Fail ALARM","func":"var hasText = false\nvar hasVoice = false\nvar newAlarmValue = msg.payload[0]\n\nif(newAlarmValue == true) {\n    newAlarmValue = 'Alarm'\n} else {\n    newAlarmValue = 'Normal'\n}\nvar oldAlarmValue = flow.get(\"ACPowerAlarm\")\n\n\nif(oldAlarmValue != undefined) {\n    if(newAlarmValue != oldAlarmValue) {\n          var alarmMsg = \"Current Time        \" + msg.timeStamp\n            alarmMsg += \"\\nGalveston\"          \n        \n        if(newAlarmValue == \"Alarm\") {\n            alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + \"AC Power\"\n            var voiceMsg = \"Hello. There are active alarms at location. Galveston. \"  \n             voiceMsg = voiceMsg + \"Active. \" + \"AC Power\" + \".\"\n             voiceMsg = voiceMsg + \". Press any key to acknowledge the alarm.\"\n             flow.set('voiceMsg', voiceMsg)\n             hasVoice = true\n        } else {\n            alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + \"AC Power\"\n             hasText = true\n        }\n        \n    }\n}\n\nflow.set(\"ACPowerAlarm\", newAlarmValue)\n\nif(hasVoice == true) {\n  return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n} else if(hasText == true) {\n  return {\"payload\": alarmMsg}  \n}\n\n","outputs":2,"noerr":0,"x":1000,"y":732,"wires":[["99e2c613.7095a8"],["6e477533.91e50c"]]},{"id":"62343c31.5dcec4","type":"moment","z":"1e3250c0.1694ff","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":751,"y":732,"wires":[["27daf5bd.9297ca"]]},{"id":"76bbe87d.5a03b8","type":"sms","z":"1e3250c0.1694ff","name":"Will Test","message":"","numbers":"","throttle":"5000","twilio":"e5b43ef6.24281","x":1634,"y":809,"wires":[[]]},{"id":"d1d80991.dff758","type":"function","z":"1e3250c0.1694ff","name":"Start Call","func":"// msg.headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n// msg.headers = {\"Content-Type\": \"application/json\"}\n// msg.payload = {\"From\": \"+14322162465\", \"To\": \"+14696512674\", \"Url\": \"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"}\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls?To=14696512674&From=+14322162465&Url=http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls.json?To%3D%2B14696512674%26From%3D%2B14322162465%26\"\n// msg.url = \"https%3A%2F%2Fapi.twilio.com%2F2010-04-01%2FAccounts%2FACd3d1e28d6055eac9af7579cbe9b2df67%2FCalls%3FTo%3D%2B14696512674%26From%3D%2B14322162465%26Url%3Dhttp%3A%2F%2Fec2-18-218-144-146.us-east-2.compute.amazonaws.com%3A1880%2Fcall_answered\"\n\n// Download the helper library from https://www.twilio.com/docs/node/install\n// Your Account Sid and Auth Token from twilio.com/console\n\nvar twilio = global.get('twilio')\nconst accountSid = 'ACd3d1e28d6055eac9af7579cbe9b2df67';\nconst authToken = '075c463b1989281acdfe67dd508ea15a';\nconst client = twilio(accountSid, authToken);\n\n\nvar to = '+14696512674'\n\nclient.calls\n      .create({\n         url: 'http://ec2-3-15-5-193.us-east-2.compute.amazonaws.com:1880/call_answered',\n         to: to,\n         from: '+14322872107'\n      })\n      .then(call => node.error(call.sid))\n      .done(node.error);\n","outputs":1,"noerr":0,"x":1652,"y":862,"wires":[[]]},{"id":"83bfcbda.b0e538","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":189,"y":1130,"wires":[["5f82f9d8.ef20e8"]]},{"id":"5f82f9d8.ef20e8","type":"function","z":"1e3250c0.1694ff","name":"CLEAR ALARM CACHE","func":"flow.set(\"Alarms\", undefined)\nreturn msg;","outputs":1,"noerr":0,"x":404,"y":1129,"wires":[[]]},{"id":"72c81b4.b954be4","type":"sms","z":"1e3250c0.1694ff","name":"Customer Twilio","message":"","numbers":"+14327411885","throttle":"5000","twilio":"e5b43ef6.24281","x":1541,"y":480,"wires":[[]]},{"id":"6e477533.91e50c","type":"function","z":"1e3250c0.1694ff","name":"StopCalling","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1601,"y":1036,"wires":[[]]},{"id":"350f2ec6.7bd582","type":"function","z":"1e3250c0.1694ff","name":"StopCalling","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1595,"y":1089,"wires":[[]]}]