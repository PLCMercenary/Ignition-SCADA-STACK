[{"id":"1e3250c0.1694ff","type":"tab","label":"Hannathon Kramph","disabled":false,"info":"HANNATHON GALVESTON CONTACTS:\n\nVoice order top to bottom:\n\nKenneth Kuethe -> +14326648765\nMartin Gonzales -> +14328133806\nToby Santos -> +14328131895\n\n+14326648765,+14328133806,+14328131895"},{"id":"83afd947.e3d0f8","type":"twilioConfig","z":"","name":"SCADABit Twilio Midland"},{"id":"4fad8b3a.4a5844","type":"twilio-api","z":"","name":"SCADABit Twilio Midland","sid":"ACd3d1e28d6055eac9af7579cbe9b2df67","from":"+14323150086"},{"id":"2394da76.e09106","type":"ui_tab","z":"","name":"Tanks & Status","icon":"dashboard","order":1},{"id":"975eae2.064e85","type":"mqtt-broker","z":"","name":"MQTT Health Broker","broker":"18.222.119.245","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9a4b6151.b1386","type":"twilioConfig","z":"","name":"SCADABit Twilio Tyler"},{"id":"3b976e99.98f6d2","type":"ui_base","theme":{"name":"theme-custom","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#808080","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#4B7930","value":"#808080","edited":true},"page-titlebar-backgroundColor":{"value":"#808080","edited":false},"page-backgroundColor":{"value":"#c0c0c0","edited":true},"page-sidebar-backgroundColor":{"value":"#c0c0c0","edited":true},"group-textColor":{"value":"#000000","edited":true},"group-borderColor":{"value":"#808080","edited":true},"group-backgroundColor":{"value":"#c0c0c0","edited":true},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#808080","edited":true},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Hannathon Petroleum - Morgan SWD 1","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":45,"sy":48,"gx":20,"gy":20,"cx":3,"cy":3,"px":0,"py":0}}},{"id":"70700cf0.3271c4","type":"mqtt-broker","z":"","name":"Test MQTT Connection","broker":"18.222.217.68","port":"1885","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b77c53f.84b19b","type":"ui_group","z":"","name":"Alarms","tab":"2394da76.e09106","order":2,"disp":true,"width":"6","collapse":false},{"id":"c870e4f4.c54aa8","type":"ui_group","z":"","name":"Status","tab":"2394da76.e09106","order":1,"disp":true,"width":"24","collapse":false},{"id":"6a986612.01cd18","type":"twilioConfig","z":"","name":"SCADABit Midland Twilio #2"},{"id":"f09a9209.4e99c","type":"mqtt-broker","z":"","name":"SCADABit MQTT","broker":"mqtt.scadabit.com","port":"1883","clientid":"auth0|5bb4e515c862aa105446f3fc","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"ddb7e166.80d18","type":"twilioConfig","z":"","name":"Aghorn JM Williamson"},{"id":"4965478d.191278","type":"twilioConfig","z":"","name":"Hannathon Conroe"},{"id":"335ae311.db003c","type":"mqtt-broker","z":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"dff90020.a6a","type":"MySQLdatabase","z":"","host":"ccs-scada-cluster-1.cluster-cfmgwesetfrr.us-east-2.rds.amazonaws.com","port":"33036","db":"callouts","tz":""},{"id":"3b932dce.ae2c12","type":"ui_group","z":"","name":"Numbers","tab":"","order":1,"disp":false,"width":"5"},{"id":"fa648ea3.2abee","type":"ui_group","z":"","name":"Chart","tab":"","order":2,"disp":false,"width":"18"},{"id":"187e60b.cb4fa9f","type":"ui_group","z":"","name":"LACT1","tab":"","order":1,"disp":true,"width":"8","collapse":false},{"id":"7b966023.ecbdb","type":"ui_group","z":"","name":"LACT2","tab":"","order":2,"disp":true,"width":"8","collapse":false},{"id":"b6adeca6.d51f8","type":"ui_group","z":"","name":"LACT3","tab":"","order":3,"disp":true,"width":"8","collapse":false},{"id":"aae5fd56.bcbbb","type":"ui_group","z":"","name":"Trends","tab":"","order":4,"disp":true,"width":"48","collapse":false},{"id":"979f1bd5.ce3318","type":"ui_group","z":"","name":"Setpoints","tab":"2394da76.e09106","order":3,"disp":true,"width":"6","collapse":false},{"id":"e5b43ef6.24281","type":"twilioConfig","z":"","name":"Hannathon Galveston"},{"id":"ac0c43d5.6c257","type":"ui_group","z":"","name":"Other Values","tab":"2394da76.e09106","disp":true,"width":"6","collapse":false},{"id":"7e8a6750.007f08","type":"ui_group","z":"","name":"Flow","tab":"2394da76.e09106","disp":true,"width":"6","collapse":false},{"id":"ec520ccd.c27e8","type":"twilioConfig","z":"","name":"Hannathon Krampf"},{"id":"a45ba8ab.a571f8","type":"modbus-client","z":"","name":"Hannathon Krampf Modbus","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.247.86.131","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectTimeout":2000},{"id":"ce4da90c.ba04d8","type":"ui_group","z":"","name":"HMI:","tab":"9721a9fa.d81918","order":2,"disp":true,"width":"24","collapse":false},{"id":"9721a9fa.d81918","type":"ui_tab","z":"","name":"Web-View","icon":"dashboard","order":2},{"id":"9eb6c26d.ec4e","type":"modbus-client","z":"","name":"Hannathon Krampf VFD1 Modbus","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.247.86.131","tcpPort":"504","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"3000","reconnectTimeout":"5000"},{"id":"7be2ae99.22e84","type":"modbus-client","z":"","name":"Hannathon Krampf VFD2 Modbus","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"tcpHost":"166.247.86.131","tcpPort":"505","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"3500","reconnectTimeout":"5000"},{"id":"70345195.529bb","type":"mqtt-broker","z":"","name":"","broker":"ec2-18-223-155-39.us-east-2.compute.amazonaws.com","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"423f7437.64712c","type":"sms","z":"1e3250c0.1694ff","name":"SCADA Tech Twilio","message":"","numbers":"+18172473760, +14328133806,+14328131895,+14326614092,+14325565341,+14324139363,+14324137920,+14326648765,+14326645113,+19568849966","throttle":"5000","twilio":"ec520ccd.c27e8","x":1651.5003662109375,"y":603.9895629882812,"wires":[[]]},{"id":"c719c824.47e518","type":"sms","z":"1e3250c0.1694ff","name":"Internal Twilio","message":"","numbers":"","throttle":"5000","twilio":"ec520ccd.c27e8","x":1560,"y":144.9896354675293,"wires":[[]]},{"id":"cf044c94.765ff","type":"trigger","z":"1e3250c0.1694ff","op1":"","op2":"bad","op1type":"pay","op2type":"str","duration":"15","extend":true,"units":"min","reset":"","bytopic":"all","name":"Comm Fail Message Trigger","x":449.5,"y":151.98958206176758,"wires":[["e9ce020f.152e2"]]},{"id":"8706e71e.afc838","type":"function","z":"1e3250c0.1694ff","name":"Comm Status Cache","func":"var m = \"Current Time        \" + msg.timeStamp\nm += \"\\nKrampf\\n\"\n\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\nif(msg.payload === \"bad\") {\n        flow.set(\"scadaCommAlarm\", \"Alarm\")\n    if(scadaCommAlarm === \"Normal\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Active:   SCADA Communication Offline\"\n        msg.payload = m\n        return msg\n    }\n    \n} else {\n        flow.set(\"scadaCommAlarm\", \"Normal\")\n    if(scadaCommAlarm === \"Alarm\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Cleared:  SCADA Communication Now Online\"\n        msg.payload = m\n        return msg\n    }  \n}","outputs":1,"noerr":0,"x":971.5000305175781,"y":211.98958778381348,"wires":[["6662d90c.872578"]]},{"id":"69b7ec44.010fe4","type":"comment","z":"1e3250c0.1694ff","name":"CUSTOMER ALARMS","info":"","x":156,"y":43.98958206176758,"wires":[]},{"id":"e9ce020f.152e2","type":"moment","z":"1e3250c0.1694ff","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":695,"y":151.98958206176758,"wires":[["8706e71e.afc838"]]},{"id":"1f6ae13f.0733ff","type":"http in","z":"1e3250c0.1694ff","name":"Manual Get Status","url":"/get_status","method":"post","upload":false,"swaggerDoc":"","x":493.513916015625,"y":34.989585876464844,"wires":[["e90ba02e.6a0ff"]]},{"id":"cc0f2c75.8b58f","type":"http response","z":"1e3250c0.1694ff","name":"Respond with Status Msg","statusCode":"200","headers":{"content-type":"text/plain"},"x":1525.5244750976562,"y":28.864585876464844,"wires":[]},{"id":"97ec0889.7b6c78","type":"function","z":"1e3250c0.1694ff","name":"Check Cmd Add Return Phone","func":"var cmd = msg.payload.Body.toLowerCase()\nnode.error(\"\\n**\\n**RECEIVED PAYLOAD\")\nnode.error(cmd)\nif(cmd.indexOf(\"status\") !== -1 || cmd.indexOf(\"1\") !== -1) {\n    return msg\n} else if(cmd.indexOf(\"reset\") !== -1 || cmd.indexOf(\"2\") !== -1) {\n    return [null, msg]\n} else if(cmd.indexOf(\"setpoints\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n    return [null, null, msg]\n} else if(cmd.indexOf(\"ack\") !== -1 || cmd.indexOf(\"9\") !== -1) {\n    return [null, null, null, null, msg]\n} else if(cmd.indexOf(\"start\") == -1 && cmd.indexOf(\"stop\") == -1) {\n    return [null, null, null, null, null, msg]\n}\n// } else {\n//     return [null, null, null, msg]\n// }\n\n// else if(cmd.indexOf(\"setpoint\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n//     return [null, null, msg]\n// }","outputs":6,"noerr":0,"x":934.5208740234375,"y":64.98958206176758,"wires":[["69ce5a64.f0d834"],["76f98eec.f3aa7","45d3e8b6.6feed8"],["1a527d86.9f24b2"],[],["870b8150.78e41"],["8e0cab3c.e40de8"]]},{"id":"69ce5a64.f0d834","type":"function","z":"1e3250c0.1694ff","name":"Send Status Message","func":"    \n    var statusMsg = \"\\n\"\n    statusMsg += \"\\nKraphe SWD\\n\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var alarmRegDate = flow.get(\"alarmRegDate\")\n \n    var status = flow.get(\"Status\")\n    var alarms = flow.get(\"Alarms\")\n    var tanks = flow.get(\"Levels\")\n    var flowv = flow.get(\"Flow\")\n    var pressure = flow.get(\"Pressure\")\n    var total = flow.get(\"Total\")\n    var scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nStatus Time:         \" + statusRegDate\n    status.sort()\n    \n//spacing+naming\nvar sn = \"\\nTank Levels:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n\n    tanks.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + \"     \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        \n        var whole = o[name]\n        var feet = Math.floor(whole)\n        var part = ((whole - feet) * 12)\n        var inch = Math.floor(part)\n        var part2 = ((inch - part) * 16)\n        var frac = Math.floor(part2)\n        frac = frac * -1\n        dem = \"/16\"\n        \n        msgFt = feet + \" (ft), \" + inch + \" (\" + frac + dem + \") (in)\"\n        \n        statusMsg = statusMsg + st + msgFt        \n    \n\n    });\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        if(name == \"Tank 1 Selected\" && o[name] == \"Selected\"){\n         var st = \"\\n\" + \"     \" + \"Tank: \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + \"Tank 1 \" + o[name]        \n    \n        }\n    });\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        if(name == \"Tank 2 Selected\" && o[name] == \"Selected\"){\n         var st = \"\\n\" + \"     \" + \"Tank: \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + \"Tank 2 \" + o[name]        \n    \n        }\n    });\n\n\n//spacing+naming\nvar sn = \"\\nPressure:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    pressure.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        \n\n              var st = \"\\n\" + \"     \" + name + \": \"\n            for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n                st = st\n            }\n            statusMsg = statusMsg + st + o[name] + \" (PSI)\"               \n        \n\n       \n    });    \n\n//spacing+naming\nvar sn = \"\\nStatus:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        \n         var st = \"\\n\" + \"      \" + name + \": \"\n         if(name == \"Head Switch Status\"){\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + o[name]           \n         }\n\n    });\n    \n        status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        if(name == \"AC Power OK\"){\n         var st = \"\\n\" + \"      \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + o[name]           \n        }\n\n    });\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        if(name == \"Charge Pump Running\"){\n         var st = \"\\n\" + \"      \" + \"Charge Pump Status\" + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + o[name]           \n        }\n\n    });\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        if(name == \"PD1 Run Status\"){\n         var st = \"\\n\" + \"      \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + o[name]           \n        }\n\n    });\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        if(name == \"PD2 Run Status\"){\n         var st = \"\\n\" + \"      \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + o[name]           \n        }\n\n    });\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        if(name == \"PD3 Run Status\"){\n         var st = \"\\n\" + \"      \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + o[name]           \n        }\n\n    });\n\n//spacing+naming\nvar sn = \"\\nFlow:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    flowv.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        \n\n              var st = \"\\n\" + \"     \" + name + \": \"\n              if(name == \"Flow\"){\n            for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n                st = st\n            }\n            statusMsg = statusMsg + st + o[name] + \" (BPD)\"\n              }\n        \n\n       \n    });    \n\n    total.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + \"     \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st\n        }\n        statusMsg = statusMsg + st + o[name] + \" (BBL)\"          \n    \n\n    });\n    \n        flowv.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n        \n\n              var st = \"\\n\" + \"     \" + name + \": \"\n              \n            for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n                st = st\n            }\n            if(name == \"Totalizer\"){\n            statusMsg = statusMsg + st + o[name] + \" (BBL)\"              \n              } else if (name == \"Flow Rate\") {\n             statusMsg = statusMsg + st + o[name] + \" (BBL/D)\"            \n              }\n       \n    });\n\n//spacing\nvar sp = \"\\n\"\nstatusMsg = statusMsg + sp\n//spacing\n\n    var foundAlarm = false\n\n    alarms.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(o[name] === \"Alarm\") {\n\n            if(!foundAlarm) {\n            statusMsg = statusMsg + \"\\n\\nActive Alarms: \"\n            foundAlarm = true\n            }\n\n        var st = \"\\n\" + name\n      //  for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n     //       st = st + \" \"\n     //   }\n\n        statusMsg = statusMsg + st \n        }\n        \n    });\n\n\n\n\n    if(scadaCommAlarm === \"Alarm\") {\n    if(!foundAlarm) {\n    statusMsg = statusMsg + \"\\n\\nActive Alarms: \"\n    }\n\n    //statusMsg = statusMsg + \"\\nActive:  \" + scadaCommAlarmDate\n    statusMsg = statusMsg + \"\\nSCADA Communication Offline\"\n    foundAlarm = true  \n    }  \n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1236.017333984375,"y":29,"wires":[["cc0f2c75.8b58f"]]},{"id":"e90ba02e.6a0ff","type":"moment","z":"1e3250c0.1694ff","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":694.0173187255859,"y":34.999999046325684,"wires":[["97ec0889.7b6c78"]]},{"id":"9baf5437.3a2ce8","type":"cron","z":"1e3250c0.1694ff","name":"Status Message Schedule","crontab":"0 0,30 6-17 * * 1-5","x":136.01736450195312,"y":221.99999332427979,"wires":[[]]},{"id":"f0a6df04.137df","type":"comment","z":"1e3250c0.1694ff","name":"Mon-Fri 06:00AM-5:30PM 30 minutes","info":"","x":155,"y":185.99998474121094,"wires":[]},{"id":"bc9d3baf.6c6d08","type":"comment","z":"1e3250c0.1694ff","name":"TANK TREND","info":"","x":204.0174674987793,"y":2911.223342895508,"wires":[]},{"id":"21d994dc.a2d2ec","type":"inject","z":"1e3250c0.1694ff","name":"Dashboard Update Interval","topic":"","payload":"","payloadType":"date","repeat":"300","crontab":"","once":true,"onceDelay":0.1,"x":276.5209426879883,"y":2983.174777984619,"wires":[["73a2002c.bcc96"]]},{"id":"51787799.27b408","type":"ui_button","z":"1e3250c0.1694ff","name":"Alarm Reset","group":"b77c53f.84b19b","order":1,"width":0,"height":0,"passthru":false,"label":"RESET ALARMS","color":"","bgcolor":"red","icon":"","payload":"2","payloadType":"str","topic":"","x":153.19469451904297,"y":482.7647352218628,"wires":[["45d3e8b6.6feed8"]]},{"id":"693c5433.d1e20c","type":"trigger","z":"1e3250c0.1694ff","op1":"1","op2":"0","op1type":"num","op2type":"num","duration":"5","extend":false,"units":"s","reset":"","bytopic":"all","name":"","x":564.5244026184082,"y":481.3999137878418,"wires":[["69f088a3.ff7dd8"]]},{"id":"69f088a3.ff7dd8","type":"function","z":"1e3250c0.1694ff","name":"Reset Cache","func":"if(msg.payload == 0) {\nflow.set(\"resetButton\", 0)\n} else {\nflow.set(\"resetButton\", 1)   \n}\nreturn msg\n\n\n","outputs":1,"noerr":0,"x":718.0174407958984,"y":482.5005912780762,"wires":[["14aef8c.a3eba07","1238494f.d872d7","e5c4796a.4a0068"]]},{"id":"76f98eec.f3aa7","type":"function","z":"1e3250c0.1694ff","name":"Send Reset Confirmation","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nKrampf\\nAlarm Reset executed.\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1242.0234375,"y":81.02864456176758,"wires":[["cc0f2c75.8b58f"]]},{"id":"45d3e8b6.6feed8","type":"function","z":"1e3250c0.1694ff","name":"Send and Set Cache","func":"var resetButton = flow.get(\"resetButton\")\n\nif(resetButton != 1) {\nflow.set(\"resetButton\", 1)     \nreturn msg\n}\n\n\n","outputs":1,"noerr":0,"x":371.02352142333984,"y":483.0293827056885,"wires":[["693c5433.d1e20c"]]},{"id":"55e646ce.428bd8","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"good","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":213.5,"y":146.98958206176758,"wires":[["cf044c94.765ff"]]},{"id":"8e0cab3c.e40de8","type":"function","z":"1e3250c0.1694ff","name":"Send Help Menu","func":"var statusMsg = \"Current Time        \" + msg.timeStamp\nstatusMsg += \"\\nError: Command not recognized.\\nView Status=1\\nReset Alarms=2\\nSetpoints=3\\nAckAlarm=9\"\n    \nmsg.payload = statusMsg\nreturn msg;\n\n","outputs":1,"noerr":0,"x":1217.0195541381836,"y":324.99350929260254,"wires":[["cc0f2c75.8b58f"]]},{"id":"b36fa8d1.56e238","type":"fastcsv","z":"1e3250c0.1694ff","name":"fastcsv","headers":true,"headerstr":"","ignoreEmpty":true,"discardUnmappedColumns":true,"strictColumnHandling":false,"delimiter":",","quote":"\"","escape":"\"","comment":"#","ltrim":false,"rtrim":false,"rowDelimiter":"\\n","includeEndRowDelimiter":false,"quoteHeaders":false,"quoteColumns":false,"x":126.51560974121094,"y":354.31772804260254,"wires":[["3abebc6d.9f8664"]]},{"id":"d32d11dc.c8ec4","type":"file in","z":"1e3250c0.1694ff","name":"Read Modbus Point Config","filename":"/data/modbus_points.csv","format":"utf8","chunk":false,"sendError":false,"x":310.51953125,"y":277.70054054260254,"wires":[["b36fa8d1.56e238"]]},{"id":"dffe897f.980238","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":90.13670635223389,"y":276.42317390441895,"wires":[["d32d11dc.c8ec4"]]},{"id":"3abebc6d.9f8664","type":"function","z":"1e3250c0.1694ff","name":"cacheConfig","func":"var pts = msg.payload\nvar points_lookup = {}\npts.forEach(function(p){\n    \n    if (points_lookup[p.reg_name]) {\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off, 'parse': p.parse})\n    } else {\n      points_lookup[p.reg_name] = {}\n      points_lookup[p.reg_name].name = p.reg_name\n      points_lookup[p.reg_name].parse = p.parse\n      points_lookup[p.reg_name].group = p.group\n      points_lookup[p.reg_name].quantity = p.quantity\n      points_lookup[p.reg_name].address = parseInt(p.reg_address)\n      points_lookup[p.reg_name].points = []\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off})\n    } \n});\n\nflow.set('points', points_lookup)        ","outputs":1,"noerr":0,"x":318.5234375,"y":354.34116649627686,"wires":[[]]},{"id":"23ebdd8e.334882","type":"cron","z":"1e3250c0.1694ff","name":"","crontab":"*/3 * * * * *","x":94.5234375,"y":606.4348754882812,"wires":[["f0980537.280ef8","762fbf00.bb604"]]},{"id":"48ffbea4.0ca8","type":"function","z":"1e3250c0.1694ff","name":"Loop Through Points","func":"var points = flow.get('points')\nvar modbusStatus = flow.get('modbusStatus')\nif(points && (modbusStatus.indexOf('active') != -1 || modbusStatus.indexOf('timeout') != -1)) {\nvar numPoints = Object.keys(points).length\nvar idx = flow.get('idx')\n\nif (idx == undefined || idx >= numPoints) {\n    idx = 0\n}\n\nvar names = Object.keys(points)\nmsg.points = points[names[idx]].points\nmsg.name = names[idx]\nmsg.parse = points[names[idx]].parse\nmsg.group = points[names[idx]].group\nnode.error(msg.name)\nnode.error(points[names[idx]].address)\nnode.error(points[names[idx]].quantity)\n\nmsg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': points[names[idx]].address, 'quantity': points[names[idx]].quantity }\n\nif(idx <= numPoints-1) {\n    idx += 1\n    flow.set('idx', idx)\n      \n} else {\nflow.set('idx', 0)  \n}\nreturn msg;  \n}\n\n","outputs":1,"noerr":0,"x":596.5117492675781,"y":596.3294258117676,"wires":[["439397e1.e7c528"]]},{"id":"f0980537.280ef8","type":"moment","z":"1e3250c0.1694ff","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":374.01952743530273,"y":595.9935007095337,"wires":[["48ffbea4.0ca8"]]},{"id":"650e81bb.6dbdc","type":"comment","z":"1e3250c0.1694ff","name":"Poll once every 3 seconds","info":"","x":167.5234375,"y":544.3411445617676,"wires":[]},{"id":"8c327c33.bd325","type":"inject","z":"1e3250c0.1694ff","name":"SEND RESET MANUALLY","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":158.5,"y":414.32292556762695,"wires":[["51787799.27b408","45d3e8b6.6feed8"]]},{"id":"ce29fcc.af4b5","type":"status","z":"1e3250c0.1694ff","name":"","scope":["439397e1.e7c528"],"x":410.50000762939453,"y":656.3229751586914,"wires":[["8fc5b01e.9a616"]]},{"id":"8fc5b01e.9a616","type":"function","z":"1e3250c0.1694ff","name":"modbus status","func":"flow.set(\"modbusStatus\",msg.status.text)","outputs":1,"noerr":0,"x":587.5,"y":655.9895629882812,"wires":[[]]},{"id":"b34b8461.268878","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":165.28125,"y":88.95051956176758,"wires":[[]]},{"id":"12c5665d.83d32a","type":"function","z":"1e3250c0.1694ff","name":"Parse Result","func":"\nif (msg.name == \"Status\") {\n  return msg\n} else if(msg.name.indexOf(\"Alarms\") != -1) {\nreturn [null,msg]    \n} else {\nreturn [null,null,msg]\n}\n\n\n\n","outputs":3,"noerr":0,"x":1052.0234985351562,"y":615.028678894043,"wires":[["692c8791.db3e48"],["ee1efd2c.00231","d5f3c9ae.f88e78"],["ec8a74d7.841118","d5f3c9ae.f88e78"]]},{"id":"692c8791.db3e48","type":"function","z":"1e3250c0.1694ff","name":"Parse Status","func":"flow.set(\"statusRegDate\", msg.timeStamp)\nvar status = flow.get(\"Status\")||[]\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n// var names = Object.keys(status)\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    var val = \"\"\n    if((r & Math.pow(2,p.bit)) > 0) {\n        // var obj = {}\n        val = p.alias_on\n        // status.push(obj)\n    } else {\n        // var obj = {}\n        val = p.alias_off\n        // status.push(obj)\n    }\n    var idx = names.indexOf(p.name)\n    var o = {}\n    o[p.name] = val\n    if(idx == -1) {\n        status.push(o)\n    } else {\n        status[idx] = o\n    }\n});\n\nflow.set(\"Status\", status)","outputs":1,"noerr":0,"x":1221.5234680175781,"y":567.6927967071533,"wires":[[]]},{"id":"ee1efd2c.00231","type":"function","z":"1e3250c0.1694ff","name":"Parse Alarms","func":"\nvar alarmMsg = \"Current Time        \" + msg.timeStamp\nalarmMsg += \"\\nKrampf\"\nvar voiceMsg = \"Hello. There are active alarms at location. Krampf. \"\n\nvar newAlarm = false\n\nflow.set(\"alarmRegDate\", msg.timeStamp)\nvar alarms = flow.get(\"Alarms\")||[]\nvar old_names = []\nalarms.forEach(function(a){\n  old_names.push(Object.keys(a)[0]) \n});\n\n// var new_alarms = []\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n\n     if((r & Math.pow(2,p.bit)) > 0) {\n      var obj = {}\n      obj[p.name] = p.alias_on\n    //   new_alarms.push(obj)\n     } else {\n      var obj = {}\n      obj[p.name] = p.alias_off\n    //   new_alarms.push(obj)\n     }\n    \n    // node.error(old_names)\n    var idx = old_names.indexOf(p.name)\n    // node.error('INDEX OF NAME')\n    // node.error(idx)\n    \n    \n    \n        \n    \n    if (idx != -1) {\n        // node.error('obj[p.name]')\n        // node.error(obj[p.name])\n        // node.error('alarms[idx][p.name]')\n        // node.error(alarms[idx][p.name])        \n        \n        if(alarms[idx][p.name] != obj[p.name]) {\n          if(obj[p.name] == p.alias_on) {\n             alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n             voiceMsg = voiceMsg + \"Active. \" + p.name + \".\"\n          } else {\n             alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n          }\n        //   if((p.name == \"Tank High-High Level\") || (p.name == \"Charge 1 Fail to Start\") || (p.name == \"PD 2 Fail to Start\")){\n          newAlarm = true\n        //   }\n        } \n        \n        alarms[idx][p.name] = obj[p.name]\n        \n    } else {\n        alarms.push(obj)\n    }\n    \n    \n});\n\n\n\nflow.set(\"Alarms\", alarms)\n\nif(newAlarm) {\n    var alarmActive = false\n    alarms.forEach(function(a){\n        var val = Object.keys(a)[0]\n        val = a[val]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            alarmActive = true\n        }\n    });\n    flow.set('alarmActive', alarmActive)\n    // if active alarm, call and text\n    if(alarmMsg.indexOf('Alarm Active') != -1) {\n        voiceMsg = voiceMsg + \". Press any key to acknowledge the alarm.\"\n        flow.set('voiceMsg', voiceMsg)\n        return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n    } else {\n    return {\"payload\": alarmMsg}     \n    }\n    // if alarm clear, just text\n   \n} \n\n\n\n\n\n\n\n\n\n\n\n// var alarmMsg = \"Current Time        \" + msg.timeStamp\n// alarmMsg += \"\\nConroe\"\n\n// var voiceMessage = \"Hello. There are active alarms at location. Conroe. \"\n\n// var newAlarm = false\n\n// flow.set(\"alarmRegDate\", msg.timeStamp)\n// var old_alarms = flow.get(\"Alarms\")||[]\n// var old_names = []\n// old_alarms.forEach(function(a){\n//   old_names.push(Object.keys(a)[0]) \n// });\n\n// var new_alarms = []\n// var r = msg.payload[0]\n\n// msg.points.forEach(function(p){\n\n//      if((r & Math.pow(2,p.bit)) > 0) {\n//       var obj = {}\n//       obj[p.name] = p.alias_on\n//       new_alarms.push(obj)\n//      } else {\n//       var obj = {}\n//       obj[p.name] = p.alias_off\n//       new_alarms.push(obj)\n//      }\n    \n//     // node.error(old_names)\n//     var idx = old_names.indexOf(p.name)\n//     // node.error('INDEX OF NAME')\n//     // node.error(idx)\n    \n//     if (idx != -1) {\n//         // node.error('obj[p.name]')\n//         // node.error(obj[p.name])\n//         // node.error('old_alarms[idx][p.name]')\n//         // node.error(old_alarms[idx][p.name])        \n        \n//         if(old_alarms[idx][p.name] != obj[p.name]) {\n//           if(obj[p.name] == p.alias_on) {\n//              alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n//              voiceMsg = voiceMsg + \"Active:   \" + p.name + \".\"\n//           } else {\n//              alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n//           }\n//           newAlarm = true\n//         } \n//     }\n    \n// });\n\n\n\n// flow.set(\"Alarms\", new_alarms)\n\n// if(newAlarm) {\n//     // if active alarm, call and text\n//     if(alarmMsg.indexOf('Alarm Active') != -1) {\n//         return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n//     } else {\n//     return {\"payload\": alarmMsg}     \n//     }\n//     // if alarm clear, just text\n   \n// } \n","outputs":2,"noerr":0,"x":1256.5234298706055,"y":611.6928882598877,"wires":[["423f7437.64712c"],["90e35dbc.b35a9"]]},{"id":"ec8a74d7.841118","type":"function","z":"1e3250c0.1694ff","name":"Parse Register Value","func":"if(msg.parse.length > 0) {\nvar parse = JSON.parse(msg.parse)\nvar val = msg.payload\n\n\nparse.forEach(function(p){\n    \nswitch(p.func) {\n    \ncase \"float32ToNum\":\nnode.error(\"val before\")\nnode.error(val)\nif(val[0] == 0 && val[1] == 0) {\n val = 0.0   \n} else {\nvar bits = (val[0] << 16 | val[1]);\nvar sign = ((bits >>> 31) == 0) ? 1.0 : -1.0;\nvar e = ((bits >>> 23) & 0xff);\nvar m = (e == 0) ? (bits & 0x7fffff) << 1 : (bits & 0x7fffff) | 0x800000;\nvar f = sign * m * Math.pow(2, e - 150);\nf = Math.fround(f);\n// f = parseFloat(f)\nnode.error(\"f before\")\nnode.error(f)\n\nf = parseFloat(f)\nnode.error(\"f after\")\nnode.error(f)\nf = f.toFixed(2)\nnode.error(\"f after\")\nnode.error(f)\nval = f\n}\nbreak;\n\ncase \"scale\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    \n    val = val * p.param\nbreak;  \n\ncase \"lact1SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 1; i <= 3; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;   \n\ncase \"lact2SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 4; i <= 5; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;  \n\ncase \"lact3SelectTank\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    for(var i = 6; i <= 8; i++) {\n        if((val & Math.pow(2,i)) > 0) {\n            var num = i + 1;\n            val = \"Tank \" + num\n            i = 16\n        }\n    }\n    \n    if(val.constructor == Number) {\n        val = \"Error\"\n    }\n    // val = val * p.param\n\nbreak;  \n\n\ncase \"alias\":\n    if(val.constructor == Array) {\n        val = val[0]    \n    } \n    \n    val = p.param[val]\n    \nbreak;\n\ncase \"int32ABCD\":\n    if(val.constructor == Array) {\n        val = (val[0] << 16) + val[1]   \n    } else {\n        val = val\n    }\n    \nbreak;\n\n// LACT 1: 2,3,4\n// LACT 2: 5,6\n// LACT 3: 7,8,9\n\n\ndefault:\nnode.error('DIDNT FIND PARSER')\n    val = msg.payload[0]\n    break;\n\n}\n\n});\n} else {\n    // default for no parser is single reg value int\n    var val = msg.payload[0]\n}\n\n\n// cache value\nnode.error(msg.group)\nvar status = flow.get(msg.group)||[]\nnode.error(\"PREVIOUS STATUS\")\nnode.error(status)\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n\nvar idx = names.indexOf(msg.name)\nvar o = {}\no[msg.name] = val\nif(idx == -1) {\n    status.push(o)\n} else {\n    status[idx] = o\n}\n\n\nflow.set(msg.group, status)","outputs":1,"noerr":0,"x":1189.50390625,"y":775.6888008117676,"wires":[["d5f3c9ae.f88e78"]]},{"id":"d5f3c9ae.f88e78","type":"debug","z":"1e3250c0.1694ff","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1219.5391159057617,"y":938.927080154419,"wires":[]},{"id":"2fe5a82e.082e08","type":"function","z":"1e3250c0.1694ff","name":"CLEAR CACHE","func":"flow.set('Status', undefined)\nflow.set('Setpoints', undefined)\nflow.set('Alarms', undefined)\nflow.set('Levels', undefined)\nflow.set(\"Total\", undefined)\nflow.set(\"Setpoints.Pump\", undefined)\nflow.set(\"Flow\", undefined)\nflow.set(\"Running\", undefined)\nflow.set(\"Tank\", undefined)\nflow.set(\"Pressure\", undefined)\nflow.set(\"Pressure\", undefined)\nflow.set(\"Other\", undefined)\n// flow.set('Alarms', undefined)\nflow.set('points', undefined)","outputs":1,"noerr":0,"x":693.5390625,"y":820.9270820617676,"wires":[[]]},{"id":"267c41b9.ae3e2e","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":511.02346420288086,"y":821.028642654419,"wires":[["2fe5a82e.082e08"]]},{"id":"d98ba5a0.4b0638","type":"comment","z":"1e3250c0.1694ff","name":"CLEAR CACHE","info":"","x":581.0234375,"y":762.0286445617676,"wires":[]},{"id":"1050ffe.e4234","type":"comment","z":"1e3250c0.1694ff","name":"WELCOME MESSAGE","info":"","x":1506.0234375,"y":260.0286445617676,"wires":[]},{"id":"1a527d86.9f24b2","type":"function","z":"1e3250c0.1694ff","name":"Send Setpoints","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nLocation: Krampf\\nSetpoints Update:\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var status = flow.get(\"Setpoints\")\n    var pump = flow.get(\"Setpoints.Pump\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nSetpoints Time         \" + statusRegDate\n    status.sort()\n\n//spacing+naming\nvar sn = \"\\nTanks:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + \"     \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n    });\n\n//spacing+naming\nvar sn = \"\\nPumps:\"\nvar spa = \"\\n\"\n{\n    statusMsg = statusMsg + spa\n}\n\n{\n    statusMsg = statusMsg + sn + spa\n}\n//spacing+naming\n\n    pump.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n         var st = \"\\n\" + \"     \" + name + \": \"\n        for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n            st = st + \" \"\n        }\n        statusMsg = statusMsg + st + o[name]           \n    \n    });\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1218,"y":129.98958206176758,"wires":[["cc0f2c75.8b58f"]]},{"id":"5ca26a90.8d8844","type":"http in","z":"1e3250c0.1694ff","name":"Alarm Call Pickup","url":"/call_answered","method":"post","upload":false,"swaggerDoc":"","x":1765.0038757324219,"y":1215.0246505737305,"wires":[["52e201a1.7145a"]]},{"id":"12630eaa.141281","type":"http response","z":"1e3250c0.1694ff","name":"Send TwiML","statusCode":"200","headers":{},"x":2170.003875732422,"y":1216.0246505737305,"wires":[]},{"id":"90e35dbc.b35a9","type":"function","z":"1e3250c0.1694ff","name":"Start Call","func":"// msg.headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n// msg.headers = {\"Content-Type\": \"application/json\"}\n// msg.payload = {\"From\": \"+14322162465\", \"To\": \"+14696512674\", \"Url\": \"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"}\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls?To=14696512674&From=+14322162465&Url=http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls.json?To%3D%2B14696512674%26From%3D%2B14322162465%26\"\n// msg.url = \"https%3A%2F%2Fapi.twilio.com%2F2010-04-01%2FAccounts%2FACd3d1e28d6055eac9af7579cbe9b2df67%2FCalls%3FTo%3D%2B14696512674%26From%3D%2B14322162465%26Url%3Dhttp%3A%2F%2Fec2-18-218-144-146.us-east-2.compute.amazonaws.com%3A1880%2Fcall_answered\"\n\n// Download the helper library from https://www.twilio.com/docs/node/install\n// Your Account Sid and Auth Token from twilio.com/console\nnode.error(\"MESSAGE IN CALL\")\nnode.error(msg)\nvar ack = flow.get('alarmAcked')||false\nif(!ack || msg.reset) {\n    if(msg.reset) {\n        flow.set('alarmAcked', false)\n    }\nvar twilio = global.get('twilio')\nconst accountSid = 'ACd3d1e28d6055eac9af7579cbe9b2df67';\nconst authToken = '075c463b1989281acdfe67dd508ea15a';\nconst client = twilio(accountSid, authToken);\n\nvar users = flow.get('alarmContacts')  \nvar nums = Object.keys(users)\nvar numIndex = flow.get('numIndex')||0\n\nif(numIndex >= nums.length) {\n    numIndex = 0\n} else if(msg.reset) {\n    numIndex = 0\n}\nnode.error(numIndex)\nvar to = nums[numIndex]\nnode.error(\"ALARM CALL NOW\")\nnode.error(to)\nnumIndex = numIndex + 1\nflow.set('numIndex', numIndex)\n\nclient.calls\n      .create({\n         url: 'http://ec2-3-17-129-213.us-east-2.compute.amazonaws.com:1880/call_answered',\n         to: to,\n         from: '+14322162073'\n      })\n      .then(call => node.error(call.sid))\n      .done(node.error);\n      \n      \nreturn {'payload': 0}\n}","outputs":1,"noerr":0,"x":1608.0044479370117,"y":950.0248756408691,"wires":[["77833e56.e587c"]]},{"id":"52e201a1.7145a","type":"function","z":"1e3250c0.1694ff","name":"Process Call","func":"// node.error(\"CALL PICKED UP\")\n// var twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n//     <Response> \\\n//     <Gather action=\\\"http://ec2-13-59-107-160.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n//         <Say voice=\\\"woman\\\">Hello, there is an active alarm at the Conroe Location.  Press 1 to acknowledge and prevent the next operator from being notified.</Say> \\\n//         </Gather> \\\n//         <Say voice=\\\"woman\\\">Sorry, that choice is invalid.</Say> \\\n//     </Response>\"\n      var voiceMsg = flow.get('voiceMsg')\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n    <Response> \\\n      <Gather action=\\\"http://ec2-3-17-129-213.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n        <Say voice=\\\"woman\\\">\"+voiceMsg+\"</Say> \\\n      </Gather> \\\n      <Say voice=\\\"woman\\\">Sorry, I didn't get your response. You can still acknowledge the alarm by texting 9 or a. c. k. to this number. Goodbye.</Say> \\\n    </Response>\";\n\nmsg.payload = twiml_response;\nreturn msg;      \n      \n\n// <Gather action=\\\"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n\n    //   </Gather> \\\n    //   <Say voice=\\\"woman\\\">Sorry, that choice is invalid.</Say> \\","outputs":1,"noerr":0,"x":1981.0038757324219,"y":1216.0246505737305,"wires":[["12630eaa.141281"]]},{"id":"df0ef23a.408f7","type":"function","z":"1e3250c0.1694ff","name":"handleGather","func":"// Use 2 outputs, 2nd is for mqtt topic/payload combination\n// Could be useful to post other caller info to a topic\n// var mqttOut = null;\n// var responseMsg = \"\";\nnode.error('INSIDE GATHER')\n// var name = \"wholehouse\";\n// var reading = context.global[name];\n\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n        <Response><Say voice=\\\"woman\\\"> \\\n\tYou have acknowledged the alarm.  No other operators will be called.  Check text message for alarm details. Goodbye.\\\n</Say>\\\n</Response>\"\nmsg.payload = twiml_response\nflow.set('alarmAcked', true)\nreturn [msg,msg]\n\n","outputs":1,"noerr":0,"x":1988.0273666381836,"y":1293.5637817382812,"wires":[["12630eaa.141281"]]},{"id":"1a2e2130.6afabf","type":"debug","z":"1e3250c0.1694ff","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2111.535125732422,"y":1388.9699630737305,"wires":[]},{"id":"dc7cce32.dc829","type":"comment","z":"1e3250c0.1694ff","name":"SECOND OUTPUT = VOICE","info":"","x":1654.0273971557617,"y":901.0637607574463,"wires":[]},{"id":"aaccbed9.9198f","type":"function","z":"1e3250c0.1694ff","name":"SET ALARM CONTACTS","func":"// var contacts = { '+14696512674': 'William Wylie', '+18172473760': 'Mark Cowan' }\n// var contacts = { '+14326648765': 'Kenneth Kuethe', '+14328133806': 'Martin Gonzales' , '+14328131895': 'Toby Santos'}\nvar contacts = { '+14328133806': 'Martin Gonzales' , '+14328131895': 'Julian', '+14326614092': 'Lewis', '+14325565341': 'Pumper', '+14324139363': 'Mizza', '+14324137920': 'Layton', '+14326645113': 'Gregg Dean', '+14326648765': 'Kenneth Kuethe'}\nflow.set('alarmContacts', contacts)\n\n// +14326648765,+14328133806,+14328131895","outputs":1,"noerr":0,"x":2012.5273132324219,"y":1476.9543380737305,"wires":[[]]},{"id":"c031776d.424868","type":"function","z":"1e3250c0.1694ff","name":"CLEAR ALARM CONTACTS","func":"flow.set('alarmContacts', undefined)","outputs":1,"noerr":0,"x":2022.0273132324219,"y":1536.0637130737305,"wires":[[]]},{"id":"2fe8228a.fbd4be","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":1799.0273399353027,"y":1472.0637512207031,"wires":[["aaccbed9.9198f"]]},{"id":"8d7884c5.b5d4f8","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1795.0273132324219,"y":1545.0637130737305,"wires":[["c031776d.424868"]]},{"id":"afb9161a.a40958","type":"http in","z":"1e3250c0.1694ff","name":"Operator Input","url":"/operator_response","method":"post","upload":false,"swaggerDoc":"","x":1702.0275344848633,"y":1287.0637493133545,"wires":[["df0ef23a.408f7","10ca3854.eb1958","dcd5b89b.30a058"]]},{"id":"f31483a3.b6ebe","type":"trigger","z":"1e3250c0.1694ff","op1":"","op2":"call_next","op1type":"nul","op2type":"str","duration":"5","extend":true,"units":"min","reset":"","bytopic":"all","name":"","x":1717.535530090332,"y":1081.9468975067139,"wires":[["90e35dbc.b35a9"]]},{"id":"77833e56.e587c","type":"delay","z":"1e3250c0.1694ff","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1835.2854080200195,"y":943.4231243133545,"wires":[["f31483a3.b6ebe"]]},{"id":"10ca3854.eb1958","type":"debug","z":"1e3250c0.1694ff","name":"OEPRATOR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1789.0234375,"y":1356.5286445617676,"wires":[]},{"id":"dcd5b89b.30a058","type":"function","z":"1e3250c0.1694ff","name":"send ack text message to other users","func":"node.error(\"SEND ACK TEXT MESSAGE FUNCTION\")\nvar users = flow.get('alarmContacts')\nvar nums = Object.keys(users)\nnode.error(\"MSG PAYLOAD TO\")\nnode.error(msg.payload.To)\nvar idx = nums.indexOf(msg.payload.To)\nvar userName = users[nums[idx]]\nnums.splice(idx,1)\nvar activeAlarms = \"\"\nvar count = 0\nvar alarms = flow.get(\"Alarms\")\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")||\"Normal\"\nif(scadaCommAlarm == \"Alarm\") {\n    activeAlarms += \"SCADA Comm Alarm, \"\n    count += 1\n}\n\n\nnode.error(\"BEFORE LOOP\")\n    alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms += name + \", \"\n            count += 1\n        }\n    });\n    activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\nnode.error(\"AFTER LOOP\")\nif(count > 1) {\nvar msg = \"The alarms: \" + activeAlarms + \" were acknowledged by: \" + userName    \n} else {\nvar msg = \"The alarm: \" + activeAlarms + \" was acknowledged by: \" + userName    \n}\n\nvar n = \"\"\nnums.forEach(function(num){\n   n = n + num + \",\" \n});\nn = n.substring(0,n.length-1)\nvar obj = {\"payload\": msg, \"topic\": n, \"reset\": true}\nnode.error(obj)\nreturn obj","outputs":1,"noerr":0,"x":1319.0235748291016,"y":1115.5287084579468,"wires":[["f31483a3.b6ebe","5b71a72f.811208"]]},{"id":"5b71a72f.811208","type":"sms","z":"1e3250c0.1694ff","name":"Customer Twilio","message":"","numbers":"","throttle":"5000","twilio":"ec520ccd.c27e8","x":1540.0234375,"y":695.0286445617676,"wires":[[]]},{"id":"80264e0f.83fea","type":"mysql","z":"1e3250c0.1694ff","mydb":"dff90020.a6a","name":"","x":800.5,"y":3132.9903144836426,"wires":[[]]},{"id":"fca7b44f.e3ba08","type":"comment","z":"1e3250c0.1694ff","name":"LOG TANK LEVELS","info":"","x":212.50001907348633,"y":3045.9903240203857,"wires":[]},{"id":"8ff49fe7.5ac31","type":"function","z":"1e3250c0.1694ff","name":"write levels to db","func":"var status = flow.get(\"Levels\")\nvar names = []\nvar query = \"INSERT INTO hannathon_krampf_historian \\\n        (value,name) VALUES\"\n        \nstatus.forEach(function(l){\n    var n = Object.keys(l)[0]\n\n    query = query + \" (\" + l[n] + \",'\" + n + \"'),\"    \n    \n})\n\nquery = query.substring(0, query.length - 1)\nquery = query + ';'\n\nnode.error(query)\n\nmsg.topic = query\nreturn msg;","outputs":1,"noerr":0,"x":571.5000534057617,"y":3132.990409851074,"wires":[["80264e0f.83fea"]]},{"id":"6d45e23c.c09a4c","type":"e-mail","z":"1e3250c0.1694ff","server":"smtp.gmail.com","port":"465","secure":true,"name":"","dname":"Email Tank Levels","x":1308.5000114440918,"y":3247.9906005859375,"wires":[]},{"id":"4cbcbd5c.cea6c4","type":"ui_chart","z":"1e3250c0.1694ff","name":"","group":"c870e4f4.c54aa8","order":1,"width":0,"height":0,"label":"Krampf Tank Levels","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":true,"ymin":"-1","ymax":"20","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1367,"y":2982.9903144836426,"wires":[[],[]]},{"id":"2906ba12.d6e476","type":"inject","z":"1e3250c0.1694ff","name":"TANK LEVEL SQL UPDATE INTERVAL","topic":"","payload":"","payloadType":"date","repeat":"300","crontab":"","once":true,"onceDelay":0.1,"x":234.00003051757812,"y":3132.9903144836426,"wires":[["8ff49fe7.5ac31"]]},{"id":"73a2002c.bcc96","type":"function","z":"1e3250c0.1694ff","name":"Weekly Trend All Tanks","func":"var query = \"SELECT name, value, timestamp FROM hannathon_krampf_historian WHERE timestamp > unix_timestamp(NOW() - INTERVAL 3 DAY)\"\nmsg.topic = query\nreturn msg;","outputs":1,"noerr":0,"x":600.5,"y":2982.9903144836426,"wires":[["9821cb85.729818"]]},{"id":"9821cb85.729818","type":"mysql","z":"1e3250c0.1694ff","mydb":"dff90020.a6a","name":"","x":850.9999923706055,"y":2982.990421295166,"wires":[["961fdc6.bb2512"]]},{"id":"961fdc6.bb2512","type":"function","z":"1e3250c0.1694ff","name":"Organize Chart Data","func":"// [{\n// \"series\": [\"A\", \"B\", \"C\"],\n// \"data\": [\n//     [{ \"x\": 1504029632890, \"y\": 5 },\n//      { \"x\": 1504029636001, \"y\": 4 },\n//      { \"x\": 1504029638656, \"y\": 2 }\n//     ],\n//     [{ \"x\": 1504029633514, \"y\": 6 },\n//      { \"x\": 1504029636622, \"y\": 7 },\n//      { \"x\": 1504029639539, \"y\": 6 }\n//     ],\n//     [{ \"x\": 1504029634400, \"y\": 7 },\n//      { \"x\": 1504029637959, \"y\": 7 },\n//      { \"x\": 1504029640317, \"y\": 7 }\n//     ]\n// ],\n// \"labels\": [\"\"]\n// }]\nconst UTC_TO_CST_CONST = 21600\n\nvar series = []\nvar a = msg.payload\nvar records = {}\na.forEach(function(o){ \n    if (series.indexOf(o.name) == -1) {\n        series.push(o.name)\n        records[o.name] = []\n    }\n    var d = new Date((o.timestamp)*1000)\n    records[o.name].push({\"x\": d, \"y\": o.value})\n});\n\n// series.sort()\n// var labels = series\nvar res = {}\nvar data = []\nseries.forEach(function(s){\n    data.push(records[s])\n});\nres.series = series\n// res.labels = labels\nres.data = data\nvar result = [res]\nmsg.payload = result\nnode.error(\"REFRESH CAHRT\")\nnode.error(data)\n\n\n\n\n\n\n\n\n// var TEST = [{\n// \"series\": [\"A\", \"B\", \"C\"],\n// \"data\": [\n//     [{ \"x\": '2018-02-07T14:33:03.927Z', \"y\": 5 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 4 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 2 }\n//     ],\n//     [{ \"x\": '2018-02-07T14:33:03.927Z', \"y\": 6 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 7 },\n//      { \"x\": '2018-02-07T14:33:03.927Z', \"y\": 6 }\n//     ],\n//     [{ \"x\": \"2018-03-05T22:27:21.068Z\", \"y\": 7 },\n//      { \"x\": \"2018-03-05T22:27:21.068Z\", \"y\": 7 },\n//      { \"x\": \"2018-03-05T22:27:21.068Z\", \"y\": 7 }\n//     ]\n// ],\n// \"labels\": [\"\"]\n// }]\n\n// msg.payload = TEST\n\n\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":1105.5,"y":2982.9903144836426,"wires":[["4cbcbd5c.cea6c4"]]},{"id":"d7c9268d.3ae7a8","type":"ui_button","z":"1e3250c0.1694ff","name":"Send CSV Report","group":"c870e4f4.c54aa8","order":5,"width":0,"height":0,"passthru":false,"label":"Send CSV Report","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":226.50001907348633,"y":3246.9903240203857,"wires":[["7f428144.55285"]]},{"id":"7f428144.55285","type":"function","z":"1e3250c0.1694ff","name":"Weekly Trend All Tanks","func":"var query = \"SELECT name, value, timestamp FROM hannathon_krampf_historian WHERE timestamp > unix_timestamp(NOW() - INTERVAL 1 WEEK)\"\nmsg.topic = query\nreturn msg;","outputs":1,"noerr":0,"x":484.0234565734863,"y":3247.5295419692993,"wires":[["69bfab82.fef074"]]},{"id":"69bfab82.fef074","type":"mysql","z":"1e3250c0.1694ff","mydb":"dff90020.a6a","name":"","x":692.0234489440918,"y":3247.5295419692993,"wires":[["6a1090fa.71522"]]},{"id":"6a1090fa.71522","type":"function","z":"1e3250c0.1694ff","name":"Organize Chart Data","func":"const UTC_TO_CST_CONST = 21600\n\nvar a = msg.payload\nvar records = {}\na.forEach(function(o){ \n    var d = new Date((o.timestamp)*1000)\n    if (!records[o.name]) {\n        records[o.name] = \"Value,Time\\n\"\n    }\n    records[o.name] = records[o.name] + o.value + \",\" + d + \"\\n\"\n    \n    // records[o.name].push({\"x\": d, \"y\": o.value})\n});\n\nnode.error(records)\nvar attachments = []\nvar names = Object.keys(records)\nnames.forEach(function(n){\n\n   attachments.push({\n            filename: n+'.csv',\n            content: records[n],\n            contentType: 'text/plain' \n   }) \n});\n\n// var today = new Date();\n// var dd = today.getDate();\nmsg.topic = \"Hannathon Krampf Tank Levels Report\"\nmsg.payload = \"CSV Report Generated for Krampf Tank\"\nmsg.attachments = attachments\nmsg.to = flow.get(\"reportEmailAddress\")\nreturn msg;","outputs":1,"noerr":0,"x":964.0234375,"y":3247.529541015625,"wires":[["6d45e23c.c09a4c"]]},{"id":"273dac49.fdf044","type":"ui_text_input","z":"1e3250c0.1694ff","name":"Email Address","label":"Email Address","group":"c870e4f4.c54aa8","order":4,"width":0,"height":0,"passthru":true,"mode":"text","delay":300,"topic":"","x":276.52346420288086,"y":3324.7562894821167,"wires":[["b86c83ea.cac7"]]},{"id":"b86c83ea.cac7","type":"function","z":"1e3250c0.1694ff","name":"cahce email","func":"flow.set(\"reportEmailAddress\",msg.payload)","outputs":1,"noerr":0,"x":466.5234565734863,"y":3323.9278240203857,"wires":[[]]},{"id":"48b420ff.6c69a","type":"inject","z":"1e3250c0.1694ff","name":"Dashboard Update Interval","topic":"","payload":"","payloadType":"date","repeat":"10","crontab":"","once":true,"onceDelay":0.1,"x":272.02346420288086,"y":1569.02925491333,"wires":[["aaf9ac68.02fe7","a0f42044.711fb","87641ad4.1748f8","5c59e5b4.d536bc"]]},{"id":"d19b3c2d.88f7b","type":"comment","z":"1e3250c0.1694ff","name":"MAIN DASHBOARD","info":"","x":227.02346420288086,"y":1491.5286445617676,"wires":[]},{"id":"aaf9ac68.02fe7","type":"function","z":"1e3250c0.1694ff","name":"Setpoint Values","func":"var lact1 = flow.get('Setpoints')\n\n// var reA = /[^a-zA-Z]/g;\n// var reN = /[^0-9]/g;\n\n// function sortAlphaNum(a, b) {\n//   var aA = Object.keys(a)[0].replace(reA, \"\");\n//   var bA = Object.keys(b)[0].replace(reA, \"\");\n//   if (aA === bA) {\n//     var aN = parseInt(Object.keys(a)[0].replace(reN, \"\"), 10);\n//     var bN = parseInt(Object.keys(b)[0].replace(reN, \"\"), 10);\n//     return aN === bN ? 0 : aN > bN ? 1 : -1;\n//   } else {\n//     return aA > bA ? 1 : -1;\n//   }\n// }\n\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\n\nlact1.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\nlact1.forEach(function(o){\n    var n = Object.keys(o)[0]\n    msgs.push({'topic': n, 'payload': o[n]}) \n});\nreturn msgs","outputs":16,"noerr":0,"x":572.0234680175781,"y":1565.5288887023926,"wires":[["c0039977.0265a8","1dd60db.a1a0ff2"],["6622cda.29f6d34","258662d3.92e10e"],["85cdec87.d2a64","b33fa275.3bef2"],["ca84c092.8bfdb","fe54214f.4a97"],["7313c879.427428","5d0fc64.bdb3838"],["f1eea091.01fab","490a8b75.ef6b54"],[],[],[],[],[],[],[],[],[],[]]},{"id":"c0039977.0265a8","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":1,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":" ","layout":"col-center","x":780.0234375,"y":1473.528522491455,"wires":[]},{"id":"6622cda.29f6d34","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":3,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":" ","layout":"col-center","x":780.7656059265137,"y":1508.0906705856323,"wires":[]},{"id":"85cdec87.d2a64","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":5,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":" ","layout":"col-center","x":778.7656059265137,"y":1537.0906705856323,"wires":[]},{"id":"ca84c092.8bfdb","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":7,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":" ","layout":"col-center","x":780.7656059265137,"y":1558.0906705856323,"wires":[]},{"id":"7313c879.427428","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":9,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":" ","layout":"col-center","x":786.7656059265137,"y":1588.0906705856323,"wires":[]},{"id":"f1eea091.01fab","type":"ui_text","z":"1e3250c0.1694ff","group":"979f1bd5.ce3318","order":11,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":" ","layout":"col-center","x":787.7656059265137,"y":1610.0906705856323,"wires":[]},{"id":"a0f42044.711fb","type":"function","z":"1e3250c0.1694ff","name":"Status Values","func":"var status = flow.get('Status')\nvar status1 = flow.get('Levels')\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\nvar arr = status\n\narr.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\narr = status1.concat(arr)\n\nvar msgs = []\narr.forEach(function(o){\n    var n = Object.keys(o)[0]\n    if (o[n].constructor == Number) {\n        msgs.push({'topic': n, 'payload': o[n]})     \n    } else {\n        msgs.push({'topic': n, 'payload': o[n]}) \n    }\n    \n});\nreturn msgs","outputs":18,"noerr":0,"x":555.0234375,"y":2149.028621673584,"wires":[["fd640d58.ffe64"],["68d6946b.24586c"],["5a2c8f9f.e28c4"],["b4fe7f0c.53fca"],["e2a11c19.04967"],["c49f8d25.bceab"],["e90ae99e.7fcc28"],["a6279317.bf9b2"],["488ca80f.fb5dc8"],["3678d833.ac9508"],[],[],[],[],[],[],[],[]]},{"id":"fd640d58.ffe64","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":2,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":756.0234222412109,"y":2058.0281867980957,"wires":[]},{"id":"68d6946b.24586c","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":3,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":754.7655830383301,"y":2083.590319633484,"wires":[]},{"id":"5a2c8f9f.e28c4","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":7,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":752.7655830383301,"y":2112.590319633484,"wires":[]},{"id":"b4fe7f0c.53fca","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":8,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":754.7655830383301,"y":2133.590319633484,"wires":[]},{"id":"e2a11c19.04967","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":6,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":760.7655830383301,"y":2163.590319633484,"wires":[]},{"id":"c49f8d25.bceab","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":9,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":761.7655830383301,"y":2185.590319633484,"wires":[]},{"id":"e90ae99e.7fcc28","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":10,"width":0,"height":0,"name":"lact1_text7","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":754.7655830383301,"y":2208.590319633484,"wires":[]},{"id":"a6279317.bf9b2","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":11,"width":0,"height":0,"name":"lact1_text8","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":766.7655830383301,"y":2245.590319633484,"wires":[]},{"id":"488ca80f.fb5dc8","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":12,"width":0,"height":0,"name":"lact1_text9","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":757.7655830383301,"y":2286.590319633484,"wires":[]},{"id":"87641ad4.1748f8","type":"function","z":"1e3250c0.1694ff","name":"Alarm Values","func":"var status = flow.get('Alarms')\n\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\n\nstatus.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\nstatus.forEach(function(o){\n    var n = Object.keys(o)[0]\n    msgs.push({'topic': n, 'payload': o[n]}) \n});\nreturn msgs","outputs":27,"noerr":0,"x":1019.0234451293945,"y":2175.028537750244,"wires":[["1114f7be.e73068","2a7ef410.2b839c"],["96dd5801.c51f48","6b5ecfa8.81cc1"],["f6a9c4e2.c9a768","bd020689.578ca8"],["b69a7bae.271418","40293b2d.ab08c4"],["c283f105.9e59","fab3f20f.36ae6"],["2d42d2b3.89816e","a3d45632.f9b068"],["435f9559.fa226c","1c56988b.45c9b7"],["6c56dc05.2b0304","7b0d0f89.a430d"],["92d6f2ad.5aa65","a7dda781.6428b8"],["9203ba76.dcdd98","6e24c0a.e2b7e4"],["730b8140.56483"],["8979d6d1.59c028"],["e3cd9e9.8fa956"],["713c1fed.816ac"],["72dc3c1c.46aec4"],["c928f595.c88618"],["2720974.0ac8568"],["cdf6800d.8a3c"],["5a9b992a.e453a8"],["daefee9b.2a884"],[],[],[],[],[],[],[]]},{"id":"1114f7be.e73068","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":2,"width":0,"height":0,"name":"lact1_text1","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1667.0234375,"y":2068.0281562805176,"wires":[]},{"id":"96dd5801.c51f48","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":3,"width":0,"height":0,"name":"lact1_text2","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1665.765625,"y":2110.5904121398926,"wires":[]},{"id":"f6a9c4e2.c9a768","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":4,"width":0,"height":0,"name":"lact1_text3","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1664.765625,"y":2152.5904121398926,"wires":[]},{"id":"b69a7bae.271418","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":5,"width":0,"height":0,"name":"lact1_text4","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1664.765625,"y":2190.5904121398926,"wires":[]},{"id":"c283f105.9e59","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":6,"width":0,"height":0,"name":"lact1_text5","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1664.765625,"y":2229.5904121398926,"wires":[]},{"id":"2d42d2b3.89816e","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":7,"width":0,"height":0,"name":"lact1_text6","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1662.765625,"y":2266.5904121398926,"wires":[]},{"id":"435f9559.fa226c","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":8,"width":0,"height":0,"name":"lact1_text7","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1663.765625,"y":2302.5904121398926,"wires":[]},{"id":"6c56dc05.2b0304","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":9,"width":0,"height":0,"name":"lact1_text8","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1664.765625,"y":2343.5904121398926,"wires":[]},{"id":"3678d833.ac9508","type":"ui_text","z":"1e3250c0.1694ff","group":"c870e4f4.c54aa8","order":13,"width":0,"height":0,"name":"lact1_text10","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":759.0234451293945,"y":2327.028537750244,"wires":[]},{"id":"d0619314.cf12e","type":"function","z":"1e3250c0.1694ff","name":"CLEAR LEVELS AND ALARMS","func":"flow.set(\"Levels\", undefined)\nflow.set(\"Alarms\", undefined)","outputs":1,"noerr":0,"x":241.53907012939453,"y":1903.4113502502441,"wires":[[]]},{"id":"6367f10b.9a2a3","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":121.53125762939453,"y":1828.4582252502441,"wires":[["d0619314.cf12e"]]},{"id":"439397e1.e7c528","type":"modbus-flex-getter","z":"1e3250c0.1694ff","name":"","showStatusActivities":false,"showErrors":false,"server":"a45ba8ab.a571f8","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":834.5235595703125,"y":595.9231567382812,"wires":[["cf044c94.765ff","12c5665d.83d32a"],[]]},{"id":"870b8150.78e41","type":"function","z":"1e3250c0.1694ff","name":"Alarm Acknowledge","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n   var alarms = flow.get(\"Alarms\")\n   var scadaCommAlarm = flow.get(\"scadaCommAlarm\")||\"Normal\"\n   var updateOtherUsersMsg = null\n   var alarmAcked = flow.get(\"alarmAcked\")||false\n    if(alarms && !alarmAcked) {\n        \n    var activeAlarms = \"\"\n    if(scadaCommAlarm == \"Alarm\") {\n        activeAlarms = \"SCADA Comm Alarm, \"\n    }\n    \n        alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms = activeAlarms + name + \", \"\n        }\n    });\n    if ((activeAlarms.length > 0)) {\n        updateOtherUsersMsg = {\"payload\": {}}\n        updateOtherUsersMsg.payload.To = msg.payload.From\n        // node.error(\"updateOtherUsersMsg\", updateOtherUsersMsg)\n        // node.error(\"updateOtherUsersMsg.payload.To\", updateOtherUsersMsg.payload.To)\n        // node.error(\"updateOtherUsersMsg.payload.From\", updateOtherUsersMsg.payload.From)\n        \n     activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\n     statusMsg += \"\\nKrampf\\nAlarms Acknowledged: \" + activeAlarms  \n     flow.set(\"alarmAcked\", true)\n    } else {\n     statusMsg += \"\\nKrampf\\nNo Active Alarms to Acknowledge\"       \n    }\n\n    } else {\n        statusMsg += \"\\nKrampf\\nNo Active Alarms to Acknowledge\" \n    }\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  if(updateOtherUsersMsg) {\n     return [msg, updateOtherUsersMsg]; \n  } else {\n      return [msg];\n  }\n  \n\n","outputs":1,"noerr":0,"x":1217.0234603881836,"y":210.02865028381348,"wires":[["cc0f2c75.8b58f"]]},{"id":"14aef8c.a3eba07","type":"modbus-write","z":"1e3250c0.1694ff","name":"Set/Reset Alarm Bit 0","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"50","quantity":"1","server":"a45ba8ab.a571f8","x":964,"y":449.9895820617676,"wires":[[],[]]},{"id":"5c59e5b4.d536bc","type":"function","z":"1e3250c0.1694ff","name":"Total Values","func":"var lact1 = flow.get('Total')\n\n// var reA = /[^a-zA-Z]/g;\n// var reN = /[^0-9]/g;\n\n// function sortAlphaNum(a, b) {\n//   var aA = Object.keys(a)[0].replace(reA, \"\");\n//   var bA = Object.keys(b)[0].replace(reA, \"\");\n//   if (aA === bA) {\n//     var aN = parseInt(Object.keys(a)[0].replace(reN, \"\"), 10);\n//     var bN = parseInt(Object.keys(b)[0].replace(reN, \"\"), 10);\n//     return aN === bN ? 0 : aN > bN ? 1 : -1;\n//   } else {\n//     return aA > bA ? 1 : -1;\n//   }\n// }\n\nfunction naturalSorter(as, bs){\n    var a, b, a1, b1, i= 0, n, L,\n    rx=/(\\.\\d+)|(\\d+(\\.\\d+)?)|([^\\d.]+)|(\\.\\D+)|(\\.$)/g;\n    if(as=== bs) return 0;\n    a= as.toLowerCase().match(rx);\n    b= bs.toLowerCase().match(rx);\n    L= a.length;\n    while(i<L){\n        if(!b[i]) return 1;\n        a1= a[i],\n        b1= b[i++];\n        if(a1!== b1){\n            n= a1-b1;\n            if(!isNaN(n)) return n;\n            return a1>b1? 1:-1;\n        }\n    }\n    return b[i]? -1:0;\n}\n\n\nlact1.sort(function(o1, o2) {\n    return naturalSorter(Object.keys(o1)[0], Object.keys(o2)[0]);\n});\n\nvar msgs = []\nlact1.forEach(function(o){\n    var n = Object.keys(o)[0]\n    msgs.push({'topic': n, 'payload': o[n]}) \n});\nreturn msgs","outputs":16,"noerr":0,"x":1061.0234375,"y":1568.0286445617676,"wires":[["f8daa34b.9a353","c30b39ce.dd4898"],["eedaf55.ce89f08","eededa58.22e548"],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"f8daa34b.9a353","type":"ui_text","z":"1e3250c0.1694ff","group":"ac0c43d5.6c257","order":1,"width":0,"height":0,"name":"other_text1","label":"{{msg.topic}}","format":" ","layout":"col-center","x":1278.0234375,"y":1486.02827835083,"wires":[]},{"id":"eedaf55.ce89f08","type":"ui_text","z":"1e3250c0.1694ff","group":"ac0c43d5.6c257","order":3,"width":0,"height":0,"name":"other_text2","label":"{{msg.topic}}","format":" ","layout":"col-center","x":1279.7655754089355,"y":1510.5904264450073,"wires":[]},{"id":"762fbf00.bb604","type":"mqtt out","z":"1e3250c0.1694ff","name":"Hannathon Krampf Keepalive","topic":"Hannathon_Krampf","qos":"0","retain":"","broker":"975eae2.064e85","x":646,"y":1030.9895820617676,"wires":[]},{"id":"7b042208.11182c","type":"comment","z":"1e3250c0.1694ff","name":"CCS SCADA HEALTH MANAGER KEEPALIVE MQTT","info":"","x":716,"y":989.9895820617676,"wires":[]},{"id":"2eec28fd.63e848","type":"ui_text","z":"1e3250c0.1694ff","group":"ce4da90c.ba04d8","order":2,"width":0,"height":0,"name":"","label":"Web View of HMI:","format":"166.247.86.131","layout":"col-center","x":698,"y":2502.9895820617676,"wires":[]},{"id":"771c50c0.f82b9","type":"ui_text","z":"1e3250c0.1694ff","group":"ce4da90c.ba04d8","order":1,"width":0,"height":0,"name":"","label":"Hannathon:","format":"Krampf","layout":"col-center","x":678,"y":2538.9895820617676,"wires":[]},{"id":"fe54214f.4a97","type":"ui_gauge","z":"1e3250c0.1694ff","name":"THH","group":"979f1bd5.ce3318","order":8,"width":0,"height":0,"gtype":"gage","title":"","label":"units","format":"{{msg.payload}}","min":0,"max":"16","colors":["#008000","#008000","#008000"],"seg1":"","seg2":"","x":819,"y":1360.9895820617676,"wires":[]},{"id":"b33fa275.3bef2","type":"ui_gauge","z":"1e3250c0.1694ff","name":"TH","group":"979f1bd5.ce3318","order":6,"width":0,"height":0,"gtype":"gage","title":"","label":"units","format":"{{msg.payload}}","min":0,"max":"16","colors":["#008000","#008000","#008000"],"seg1":"","seg2":"","x":822,"y":1329.9895820617676,"wires":[]},{"id":"5d0fc64.bdb3838","type":"ui_gauge","z":"1e3250c0.1694ff","name":"TL","group":"979f1bd5.ce3318","order":10,"width":0,"height":0,"gtype":"gage","title":"","label":"units","format":"{{msg.payload}}","min":0,"max":"16","colors":["#008000","#008000","#008000"],"seg1":"","seg2":"","x":821,"y":1389.9895820617676,"wires":[]},{"id":"490a8b75.ef6b54","type":"ui_gauge","z":"1e3250c0.1694ff","name":"TLL","group":"979f1bd5.ce3318","order":12,"width":0,"height":0,"gtype":"gage","title":"","label":"units","format":"{{msg.payload}}","min":0,"max":"16","colors":["#008000","#008000","#008000"],"seg1":"","seg2":"","x":820,"y":1417.9895820617676,"wires":[]},{"id":"258662d3.92e10e","type":"ui_gauge","z":"1e3250c0.1694ff","name":"Suction","group":"979f1bd5.ce3318","order":4,"width":0,"height":0,"gtype":"gage","title":"","label":"units","format":"{{msg.payload}}","min":0,"max":"400","colors":["#008000","#008000","#008000"],"seg1":"","seg2":"","x":828,"y":1299.9895820617676,"wires":[]},{"id":"1dd60db.a1a0ff2","type":"ui_gauge","z":"1e3250c0.1694ff","name":"Injection","group":"979f1bd5.ce3318","order":2,"width":0,"height":0,"gtype":"gage","title":"","label":"units","format":"{{msg.payload}}","min":0,"max":"2000","colors":["#008000","#008000","#008000"],"seg1":"","seg2":"","x":827,"y":1265.9895820617676,"wires":[]},{"id":"c30b39ce.dd4898","type":"ui_gauge","z":"1e3250c0.1694ff","name":"TT","group":"ac0c43d5.6c257","order":2,"width":"6","height":"7","gtype":"wave","title":"","label":"","format":"{{value}}","min":0,"max":"20000","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":1274,"y":1371.9895820617676,"wires":[]},{"id":"eededa58.22e548","type":"ui_gauge","z":"1e3250c0.1694ff","name":"YT","group":"ac0c43d5.6c257","order":4,"width":"6","height":"7","gtype":"wave","title":"","label":"","format":"{{value}}","min":0,"max":"20000","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":1275,"y":1406.9895820617676,"wires":[]},{"id":"2a7ef410.2b839c","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1273,"y":1765.9895820617676,"wires":[["1114f7be.e73068"]]},{"id":"92d6f2ad.5aa65","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"lact1_text9","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1664,"y":2378.9895820617676,"wires":[]},{"id":"6b5ecfa8.81cc1","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1274,"y":1794.9895820617676,"wires":[["96dd5801.c51f48"]]},{"id":"bd020689.578ca8","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1275,"y":1825.9895820617676,"wires":[["f6a9c4e2.c9a768"]]},{"id":"40293b2d.ab08c4","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1277,"y":1856.9895820617676,"wires":[["b69a7bae.271418"]]},{"id":"fab3f20f.36ae6","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1280,"y":1886.9895820617676,"wires":[["c283f105.9e59"]]},{"id":"a3d45632.f9b068","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1279,"y":1918.9895820617676,"wires":[["2d42d2b3.89816e"]]},{"id":"1c56988b.45c9b7","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1282,"y":1949.9895820617676,"wires":[["435f9559.fa226c"]]},{"id":"7b0d0f89.a430d","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1283,"y":1980.9895820617676,"wires":[["6c56dc05.2b0304"]]},{"id":"a7dda781.6428b8","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"green\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"red\";\n    break;\n    \ndefault : \n    msg.color = \"black\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1284,"y":2012.9895820617676,"wires":[["92d6f2ad.5aa65"]]},{"id":"5383bd1f.5372e4","type":"comment","z":"1e3250c0.1694ff","name":"Edit ui-guage.js for color change","info":"","x":1289,"y":1318.9895820617676,"wires":[]},{"id":"cbe0467f.b06d68","type":"ui_template","z":"1e3250c0.1694ff","group":"ce4da90c.ba04d8","name":"","order":0,"width":0,"height":0,"format":"<iframe sandbox height = 900px src=\"http://166.247.86.131/logon.htm?uri=/\"></iframe>","storeOutMessages":true,"fwdInMessages":true,"templateScope":"local","x":1289,"y":1632.9895820617676,"wires":[[]]},{"id":"d7d87a9f.9fc378","type":"cron","z":"1e3250c0.1694ff","name":"","crontab":"0 */3 * * * *","x":395,"y":198.98958206176758,"wires":[["d32d11dc.c8ec4"]]},{"id":"7eece4c6.2abf2c","type":"comment","z":"1e3250c0.1694ff","name":"REFRESH points every 3 minutes","info":"","x":626,"y":199.98958206176758,"wires":[]},{"id":"9203ba76.dcdd98","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"<font color= {{msg.color}} > {{msg.payload}} </font>","layout":"row-spread","x":1638,"y":2419.9895820617676,"wires":[]},{"id":"730b8140.56483","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1635,"y":2464.9895820617676,"wires":[]},{"id":"8979d6d1.59c028","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1632,"y":2505.9895820617676,"wires":[]},{"id":"e3cd9e9.8fa956","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1630,"y":2545.9895820617676,"wires":[]},{"id":"713c1fed.816ac","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1629,"y":2590.9895820617676,"wires":[]},{"id":"72dc3c1c.46aec4","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1622,"y":2646.9895820617676,"wires":[]},{"id":"c928f595.c88618","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1619,"y":2691.9895820617676,"wires":[]},{"id":"2720974.0ac8568","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1616,"y":2732.9895820617676,"wires":[]},{"id":"cdf6800d.8a3c","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1614,"y":2772.9895820617676,"wires":[]},{"id":"5a9b992a.e453a8","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1613,"y":2817.9895820617676,"wires":[]},{"id":"daefee9b.2a884","type":"ui_text","z":"1e3250c0.1694ff","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"name":"2","label":"{{msg.topic}}","format":"{{msg.payload}}","layout":"row-spread","x":1610,"y":2859.9895820617676,"wires":[]},{"id":"d8f96eb1.41b8a","type":"comment","z":"1e3250c0.1694ff","name":"color \"yellow\" and sort/rename to catgories","info":"i.e tanks, main, pumps, ect","x":1846,"y":2564.9895820617676,"wires":[]},{"id":"6e24c0a.e2b7e4","type":"function","z":"1e3250c0.1694ff","name":"Alarm Color","func":"switch (msg.payload) {\n\ncase \"Normal\" : \n    msg.color = \"yellow\";\n    break;\n    \ncase \"Alarm\" : \n    msg.color = \"yellow\";\n    break;\n    \ndefault : \n    msg.color = \"yellow\";\n    break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1240,"y":2580.9895820617676,"wires":[["9203ba76.dcdd98"]]},{"id":"505bbd1d.318594","type":"sms","z":"1e3250c0.1694ff","name":"SCADA Tester Twilio","message":"","numbers":"","throttle":"5000","twilio":"ec520ccd.c27e8","x":2600,"y":438.9895820617676,"wires":[[]]},{"id":"c0bd472c.487d98","type":"comment","z":"1e3250c0.1694ff","name":"To add Numbers At Dashboard","info":"Use ui_forum to \"write a csv\"\nUse Parse Structure and output ot cache and dashboard\nParse for #'s to populate numbers\nWill be in last node of flow to #'s, passes payload on\nNames? (needs to be parsed out fo #'s if used)\nEdit past entries (rewrite with flow.set and then pass msg?)","x":2583,"y":362.9895820617676,"wires":[]},{"id":"d708e3b7.fb189","type":"comment","z":"1e3250c0.1694ff","name":"comm failure alarm callout loop","info":"","x":2290.480712890625,"y":534.8749389648438,"wires":[]},{"id":"61dc221.e1902dc","type":"function","z":"1e3250c0.1694ff","name":"CLEAR SCADA COMM ALARM COUNT","func":"flow.set(\"scadaCommAlarmCount\",0)","outputs":1,"noerr":0,"x":2386.480712890625,"y":766.8749389648438,"wires":[[]]},{"id":"df24be51.95f55","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":2122.480712890625,"y":769.8749389648438,"wires":[["61dc221.e1902dc"]]},{"id":"f2376a56.2abda8","type":"function","z":"1e3250c0.1694ff","name":"SET ALARM ACKED TO FALSE","func":"flow.set(\"alarmAcked\",false)","outputs":1,"noerr":0,"x":2393.480712890625,"y":823.8749389648438,"wires":[[]]},{"id":"50e8f4fc.a5839c","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":2159.480712890625,"y":826.8749389648438,"wires":[["f2376a56.2abda8"]]},{"id":"ba1b5587.828108","type":"comment","z":"1e3250c0.1694ff","name":"MANUAL MESSAGE ALARM","info":"","x":1280,"y":410,"wires":[]},{"id":"95508a65.dbe128","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1170.0000267028809,"y":462.99999809265137,"wires":[["93a9977a.311498"]]},{"id":"93a9977a.311498","type":"function","z":"1e3250c0.1694ff","name":"Add alarm message","func":"var alarmMsg = \"Current Time        \" + msg.timeStamp\nalarmMsg += \"\\nKrampf\"\nalarmMsg += \"\\nAlarm Active:    PD2 FTS\"","outputs":1,"noerr":0,"x":1385.0000610351562,"y":463,"wires":[["423f7437.64712c"]]},{"id":"1238494f.d872d7","type":"modbus-write","z":"1e3250c0.1694ff","name":"Set/Reset Alarm Bit 0","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"50","quantity":"1","server":"9eb6c26d.ec4e","x":945,"y":390,"wires":[[],[]]},{"id":"e5c4796a.4a0068","type":"modbus-write","z":"1e3250c0.1694ff","name":"Set/Reset Alarm Bit 0","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"50","quantity":"1","server":"7be2ae99.22e84","x":931,"y":326,"wires":[[],[]]},{"id":"6662d90c.872578","type":"sms","z":"1e3250c0.1694ff","name":"SCADA Tech Twilio","message":"","numbers":"","throttle":"5000","twilio":"ec520ccd.c27e8","x":1644,"y":378,"wires":[[]]},{"id":"f33a4d53.ad688","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"","payloadType":"date","repeat":"5","crontab":"","once":false,"onceDelay":0.1,"x":457,"y":3616,"wires":[["44c38dc4.e8ad74"]]},{"id":"44c38dc4.e8ad74","type":"function","z":"1e3250c0.1694ff","name":"MQTT Parse","func":"//This takes the cache of point and iterates over it\n//to make it an object so tha tags come in \"pretty\"\n// and standardized into Ignition\n\n//Vals\n\nobject = flow.get(\"points\")\npoints = Object.keys(object)\nalarms = flow.get(\"Alarms\")\nflows = flow.get(\"Flow\")\nlevels = flow.get(\"Levels\")\npressures = flow.get(\"Pressure\")\nrunnings = flow.get(\"Running\")\nsetpoints = flow.get(\"Setpoints\")\ntotals = flow.get(\"Total\")\nstatus= flow.get(\"Status\")\nnewPoints = {}\n\n//Levels\n\nlenPoints = levels.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   tag = levels[index]\n   key = Object.keys(tag)\n   label = key[0]\n   value = tag[label]\n   units = \"ft\"\n   point = {label: label, value: value, units: units }\n   newPoints[label] = point\n   index++\n}\n\n//Pressures\n\nlenPoints = pressures.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   tag = pressures[index]\n   key = Object.keys(tag)\n   label = key[0]\n   value = tag[label]\n   units = \"psi\"\n   point = {label: label, value: value, units: units }\n   newPoints[label] = point\n   index++\n}\n\n//Flow\n\nlenPoints = flows.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   tag = flows[index]\n   key = Object.keys(tag)\n   label = key[0]\n   value = tag[label]\n   units = \"bpd\"\n   point = {label: label, value: value, units: units }\n   newPoints[label] = point\n   index++\n}\n\n//Totals\n\nlenPoints = totals.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   tag = totals[index]\n   key = Object.keys(tag)\n   label = key[0]\n   value = tag[label]\n   units = \"bpd\"\n   point = {label: label, value: value, units: units }\n   newPoints[label] = point\n   index++\n}\n\n//Setpoints\n\nlenPoints = setpoints.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   tag = setpoints[index]\n   key = Object.keys(tag)\n   label = key[0]\n   value = tag[label]\n   units = \"none\"\n   point = {label: label, value: value, units: units }\n   newPoints[label] = point\n   index++\n}\n\n//Status\n\nlenPoints = status.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   tag = status[index]\n   key = Object.keys(tag)\n   label = key[0]\n   value = tag[label]\n   units = \"none\"\n   \n   //Tank Selected removal for easier dev testing, less data\n   \n   if (label.includes(\"Tank\")){\n       index++\n   } else {\n       point = {label: label, value: value, units: units }\n       newPoints[label] = point\n       index++\n   }\n}\n\n//Alarms\n\nlenPoints = alarms.length\nindex = 0\nfor (r = 0; r < lenPoints; r++){\n   tag = alarms[index]\n   key = Object.keys(tag)\n   label = key[0]\n   value = tag[label]\n   units = \"none\"\n   \n   //Bool the alarms for esier pipelines in Ignition\n   \n   if (value == \"Alarm\"){\n       value = true\n   } else if (value == \"Normal\"){\n       value = false\n   } else {\n       value = value\n   }\n   \n   //Remove Tanks since we have the setpoints for the pipeline\n   \n   if (label.includes(\"Tank\")){\n       index++\n   } else {\n       point = {label: label, value: value, units: units }\n       newPoints[label] = point\n       index++\n   }\n}\n\n//Payload\n\nmsg.payload = newPoints\nreturn msg;","outputs":1,"noerr":0,"x":656,"y":3666,"wires":[["b13babee.730048","10db21ec.979fde"]]},{"id":"b13babee.730048","type":"debug","z":"1e3250c0.1694ff","name":"MQTT TEST","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":801,"y":3761,"wires":[]},{"id":"69994282.b3497c","type":"inject","z":"1e3250c0.1694ff","name":"","topic":"","payload":"points","payloadType":"flow","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":488,"y":3800,"wires":[["b13babee.730048"]]},{"id":"10db21ec.979fde","type":"mqtt out","z":"1e3250c0.1694ff","name":"","topic":"Hannathon Krampf","qos":"","retain":"","broker":"70345195.529bb","x":915,"y":3656,"wires":[]}]