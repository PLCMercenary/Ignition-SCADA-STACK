[{"id":"816aa166.a340a","type":"tab","label":"Americo CRU","disabled":false,"info":"TEXT EVERY 15 MINUTES UNTIL SOMEONE CLEARS ALERTS\nTRANSITION TO VOICE CALLOUTS LATER\n(not implemented yet)\n\nCALLOUT LIST:\n\nBilly Botts +13252074220 (LEAD CONTACT)\nLynn Parham +13254367687\nBill Payne +13252071141\nJames Owens +13252420417\n\"+13252420417 james owens,+13375229291,+14696512674\"\n+14696512674,+18172473760,+13252074220,+13254367687,+13252071141,+13252420417\n"},{"id":"83afd947.e3d0f8","type":"twilioConfig","z":"","name":"SCADABit Twilio Midland"},{"id":"4fad8b3a.4a5844","type":"twilio-api","z":"","name":"SCADABit Twilio Midland","sid":"ACd3d1e28d6055eac9af7579cbe9b2df67","from":"+14323150086"},{"id":"2394da76.e09106","type":"ui_tab","z":"","name":"Morgan SWD 1","icon":"dashboard","order":1},{"id":"975eae2.064e85","type":"mqtt-broker","z":"","name":"MQTT Health Broker","broker":"18.222.119.245","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9a4b6151.b1386","type":"twilioConfig","z":"","name":"SCADABit Twilio Tyler"},{"id":"3b976e99.98f6d2","type":"ui_base","theme":{"name":"theme-custom","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#808080","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","reset":false},"themeState":{"base-color":{"default":"#4B7930","value":"#808080","edited":true},"page-titlebar-backgroundColor":{"value":"#808080","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#c0c0c0","edited":true},"group-textColor":{"value":"#000000","edited":true},"group-borderColor":{"value":"#808080","edited":true},"group-backgroundColor":{"value":"#c0c0c0","edited":true},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#808080","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Americo CRU","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":45,"sy":48,"gx":20,"gy":20,"cx":3,"cy":3,"px":0,"py":0}}},{"id":"70700cf0.3271c4","type":"mqtt-broker","z":"","name":"Test MQTT Connection","broker":"18.222.217.68","port":"1885","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"b77c53f.84b19b","type":"ui_group","z":"","name":"Alarms","tab":"2394da76.e09106","order":2,"disp":true,"width":"6","collapse":false},{"id":"c870e4f4.c54aa8","type":"ui_group","z":"","name":"Status","tab":"2394da76.e09106","order":1,"disp":true,"width":"8","collapse":false},{"id":"98b55c86.c6ed8","type":"modbus-client","z":"","name":"Americo 1","clienttype":"tcp","bufferCommands":false,"stateLogEnabled":false,"tcpHost":"166.247.86.128","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":1,"commandDelay":30,"clientTimeout":5000,"reconnectTimeout":10000},{"id":"6a986612.01cd18","type":"twilioConfig","z":"","name":"SCADABit Midland Twilio #2"},{"id":"231f1c8f.6ce2f4","type":"twilioConfig","z":"","name":"Hannathon Conroe"},{"id":"d77257e.fb2faa8","type":"sms","z":"816aa166.a340a","name":"Customer Twilio","message":"","numbers":"","throttle":"5000","twilio":"6a986612.01cd18","x":1796.500389099121,"y":1240.0001678466797,"wires":[[]]},{"id":"409b8969.e836d8","type":"sms","z":"816aa166.a340a","name":"Internal Twilio","message":"","numbers":"+18172473760","throttle":"5000","twilio":"9a4b6151.b1386","x":2040.0001220703125,"y":776.0002746582031,"wires":[[]]},{"id":"6569bc8c.c35b44","type":"trigger","z":"816aa166.a340a","op1":"","op2":"bad","op1type":"pay","op2type":"str","duration":"30","extend":true,"units":"min","reset":"","bytopic":"all","name":"Comm Fail Message Trigger","x":546.5000228881836,"y":783.0001678466797,"wires":[["4d001f08.e8f0d"]]},{"id":"9a7e255.ac307d8","type":"function","z":"816aa166.a340a","name":"Comm Status Cache","func":"var m = \"Current Time        \" + msg.timeStamp\nm += \"\\nAmerico CRU\\n\"\n\nvar scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\nif(msg.payload === \"bad\") {\n        flow.set(\"scadaCommAlarm\", \"Alarm\")\n    if(scadaCommAlarm === \"Normal\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Active:   SCADA Communication Offline\"\n        msg.payload = m\n        return msg\n    }\n    \n} else {\n        flow.set(\"scadaCommAlarm\", \"Normal\")\n    if(scadaCommAlarm === \"Alarm\") {\n        \n        flow.set(\"scadaCommAlarmDate\", msg.timeStamp)\n        m += \"Alarm Cleared:  SCADA Communication Now Online\"\n        msg.payload = m\n        return msg\n    }  \n}","outputs":1,"noerr":0,"x":1439.500099182129,"y":779.0001678466797,"wires":[["409b8969.e836d8","faca4217.f6b08"]]},{"id":"de300d8b.1cdb","type":"comment","z":"816aa166.a340a","name":"CUSTOMER ALARMS","info":"","x":258.0000228881836,"y":674.0001678466797,"wires":[]},{"id":"4d001f08.e8f0d","type":"moment","z":"816aa166.a340a","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":1191.000099182129,"y":779.0001678466797,"wires":[["9a7e255.ac307d8"]]},{"id":"3cfb0af.d8d97f6","type":"http in","z":"816aa166.a340a","name":"Manual Get Status","url":"/get_status","method":"post","upload":false,"swaggerDoc":"","x":113.51388549804688,"y":30.000022888183594,"wires":[["2dacef1f.cdf28","dbd1634a.6189e"]]},{"id":"f9cdd4b.8430728","type":"http response","z":"816aa166.a340a","name":"Respond with Status Msg","statusCode":"200","headers":{"content-type":"text/plain"},"x":1733.5244598388672,"y":20,"wires":[]},{"id":"b963dc6b.16105","type":"function","z":"816aa166.a340a","name":"Check Cmd Add Return Phone","func":"var cmd = msg.payload.Body.toLowerCase()\nnode.error(\"INCOMING COMMAND:  \", cmd)\nif(cmd.indexOf(\"status\") != -1 || cmd.indexOf(\"1\") != -1) {\n    node.error(\"status elseif\")\n    return msg\n} else if(cmd.indexOf(\"reset\") != -1 || cmd.indexOf(\"2\") != -1) {\n    node.error(\"reset elseif\")\n    return [null, msg]\n} else if((cmd.indexOf(\"ack\") != -1) || (cmd.indexOf(\"9\") != -1)) {\n    node.error(\"ack elseif\")\n    return [null, null, null, null, msg]\n} else if (cmd.indexOf(\"remove\") != -1) {\n    msg.payload = msg.payload.From\n    return [null, null, null, null, null, null, msg]\n} else if(cmd.indexOf(\"start\") == -1 && cmd.indexOf(\"stop\") == -1) {\n    node.error(\"start/stop elseif\")\n    return [null, null, null, null, null, msg]\n}\n\n// else if(cmd.indexOf(\"setpoint\") !== -1 || cmd.indexOf(\"3\") !== -1) {\n//     return [null, null, msg]\n// }","outputs":7,"noerr":0,"x":1169.5208740234375,"y":63.00001525878906,"wires":[["87e7c746.b44668"],["222de74e.dbaec8","c280d5dc.89c248"],[],[],["79eb141d.392a6c"],["90440e1.e4d18f"],["5bb67925.e37788"]]},{"id":"87e7c746.b44668","type":"function","z":"816aa166.a340a","name":"Send Status Message","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nAmerico CRU\\nStatus Update:\"\n\n    // GET STATUS READ TIMESTAMP\n    var statusRegDate = flow.get(\"statusRegDate\")\n    var alarmRegDate = flow.get(\"alarmRegDate\")\n\n    var status = flow.get(\"Status\")\n    var alarms = flow.get(\"Alarms\")\n\n    var scadaCommAlarm = flow.get(\"scadaCommAlarm\")\n\n    const POINT_HEADER_DEF_LENGTH = 21\n\n    statusMsg = statusMsg + \"\\nStatus Time         \" + statusRegDate\n    status.sort()\n\n  var nHand = \"\"\n    var sHand = \"\"\n    var nHandError = false\n    var sHandError = false\n\n    status.forEach(function(o){\n\n        var name = Object.keys(o)[0]\n\n        if(name == \"N. Pump Auto\") {\n            if(o[name] == \"Auto\") {\n                if(nHand.length > 0) {\n                    nHandError = true\n                } else {\n                    nHand = \"Auto\"\n                }\n            }\n        } else if(name == \"S. Pump Auto\") {\n            if(o[name] == \"Auto\") {\n                if(sHand.length > 0) {\n                    sHandError = true\n                } else {\n                    sHand = \"Auto\"\n                }\n            }\n        } else if(name == \"N. Pump Hand\") {\n            if(o[name] == \"Hand\") {\n                if(nHand.length > 0) {\n                    nHandError = true\n                } else {\n                    nHand = \"Hand\"\n                }\n            }\n        } else if(name == \"S. Pump Hand\") {\n            if(o[name] == \"Hand\") {\n                if(sHand.length > 0) {\n                    sHandError = true\n                } else {\n                    sHand = \"Hand\"\n                }\n            }\n        } else {\n             var st = \"\\n\" + name\n            for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n                st = st + \" \"\n            }\n            statusMsg = statusMsg + st + o[name]           \n        }\n\n    });\n\nif(nHand.length == 0) {\n    nHand = \"Off\"\n}\n\nif(sHand.length == 0) {\n    sHand = \"Off\"\n}\n\nif(nHandError) {\n    nHand = \"Error\"\n}\n\nif(sHandError) {\n    sHand = \"Error\"\n}\n\n var st = \"\\n\" + \"N. Pump HOA\"\nfor(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n    st = st + \" \"\n}\nstatusMsg = statusMsg + st + nHand       \n\n var st = \"\\n\" + \"S. Pump HOA\"\n for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n    st = st + \" \"\n}\nstatusMsg = statusMsg + st + sHand       \n\n    var foundAlarm = false\n\n    alarms.forEach(function(o){\n        var name = Object.keys(o)[0]\n        if(o[name] === \"Alarm\") {\n\n            if(!foundAlarm) {\n            statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n            foundAlarm = true\n            }\n\n        var st = \"\\n\" + name\n      //  for(var i = st.length; i < POINT_HEADER_DEF_LENGTH; i++) {\n     //       st = st + \" \"\n     //   }\n\n        statusMsg = statusMsg + st \n        }\n        \n    });\n\n\n    if(scadaCommAlarm === \"Alarm\") {\n    if(!foundAlarm) {\n    statusMsg = statusMsg + \"\\n\\nActive Alarms:\"\n    }\n\n    //statusMsg = statusMsg + \"\\nActive:  \" + scadaCommAlarmDate\n    statusMsg = statusMsg + \"\\nSCADA Communication Offline\"\n    foundAlarm = true  \n    }  \n\n  msg.payload = statusMsg\n  return msg;\n","outputs":1,"noerr":0,"x":1440.017375946045,"y":33.01043224334717,"wires":[["f9cdd4b.8430728"]]},{"id":"175eb110.3cc74f","type":"moment","z":"816aa166.a340a","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":923.017333984375,"y":36.01043224334717,"wires":[["b963dc6b.16105"]]},{"id":"8fcf49f2.261398","type":"cron","z":"816aa166.a340a","name":"Status Message Schedule","crontab":"0 0,30 6-17 * * 1-5","x":238.01738739013672,"y":852.0105791091919,"wires":[[]]},{"id":"3ad06aa6.b4e976","type":"comment","z":"816aa166.a340a","name":"Mon-Fri 06:00AM-5:30PM 30 minutes","info":"","x":254.00003051757812,"y":815.0105590820312,"wires":[]},{"id":"4bd6e0b8.1be67","type":"comment","z":"816aa166.a340a","name":"DASHBOARD","info":"","x":252.01748275756836,"y":2286.2333030700684,"wires":[]},{"id":"cfd2d775.900b78","type":"inject","z":"816aa166.a340a","name":"Dashboard Update Interval","topic":"","payload":"","payloadType":"date","repeat":"10","crontab":"","once":false,"onceDelay":0.1,"x":284.5209617614746,"y":2374.184684753418,"wires":[["ab9ef4f3.6b9678"]]},{"id":"ab9ef4f3.6b9678","type":"function","z":"816aa166.a340a","name":"Update Dashboard Values","func":"","outputs":18,"noerr":0,"x":584.5244598388672,"y":2375.136474609375,"wires":[["1ce18872.c44368"],["16239791.4ca188"],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"62f05510.c02e0c","type":"ui_button","z":"816aa166.a340a","name":"Alarm Reset","group":"b77c53f.84b19b","order":1,"width":0,"height":0,"passthru":false,"label":"RESET ALARMS","color":"","bgcolor":"Red","icon":"","payload":"2","payloadType":"str","topic":"","x":255.19471740722656,"y":1112.775321006775,"wires":[["c280d5dc.89c248"]]},{"id":"1adfe4bf.82d91b","type":"modbus-write","z":"816aa166.a340a","name":"Set/Reset Alarm Bit 0","showStatusActivities":false,"showErrors":false,"unitid":"1","dataType":"HoldingRegister","adr":"50","quantity":"1","server":"98b55c86.c6ed8","x":1115.1877059936523,"y":1113.6363372802734,"wires":[[],[]]},{"id":"acbf0a7.417a5f8","type":"trigger","z":"816aa166.a340a","op1":"1","op2":"0","op1type":"num","op2type":"num","duration":"5","extend":false,"units":"s","reset":"","bytopic":"all","name":"","x":668.5244140625,"y":1112.4105834960938,"wires":[["6f3888fe.3f0618"]]},{"id":"6f3888fe.3f0618","type":"function","z":"816aa166.a340a","name":"Reset Cache","func":"if(msg.payload == 0) {\nflow.set(\"resetButton\", 0)\n} else {\nflow.set(\"resetButton\", 1)   \n}\nreturn msg\n\n\n","outputs":1,"noerr":0,"x":856.0174560546875,"y":1112.5112915039062,"wires":[["1adfe4bf.82d91b"]]},{"id":"222de74e.dbaec8","type":"function","z":"816aa166.a340a","name":"Send Reset Confirmation","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n    statusMsg += \"\\nAmerico CRU\\nAlarm Reset executed.\"\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1466.023452758789,"y":82.03907775878906,"wires":[["f9cdd4b.8430728"]]},{"id":"c280d5dc.89c248","type":"function","z":"816aa166.a340a","name":"Send and Set Cache","func":"var resetButton = flow.get(\"resetButton\")\n\nif(resetButton != 1) {\nflow.set(\"resetButton\", 1)     \nreturn msg\n}\n\n\n","outputs":1,"noerr":0,"x":472.02354431152344,"y":1113.0399684906006,"wires":[["acbf0a7.417a5f8"]]},{"id":"a5c991eb.b9191","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"good","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":315.5000228881836,"y":777.0001678466797,"wires":[["6569bc8c.c35b44"]]},{"id":"1ce18872.c44368","type":"ui_text","z":"816aa166.a340a","group":"c870e4f4.c54aa8","order":8,"width":0,"height":0,"name":"Status Reg Date","label":"Status Reg Date:","format":"{{msg.payload}}","layout":"row-spread","x":945.0197296142578,"y":2255.0046997070312,"wires":[]},{"id":"90440e1.e4d18f","type":"function","z":"816aa166.a340a","name":"Send Help Menu","func":"var statusMsg = \"Current Time        \" + msg.timeStamp\nstatusMsg += \"\\nError: Command not recognized.\\nView Status=1\\nReset Alarms=2\\nAckAlarm=9\\nUnsubscribe=remove\"\n    \nmsg.payload = statusMsg\nreturn msg;\n\n","outputs":1,"noerr":0,"x":1463.019676208496,"y":175.00395011901855,"wires":[["f9cdd4b.8430728"]]},{"id":"d8b6701f.c0e36","type":"fastcsv","z":"816aa166.a340a","name":"fastcsv","headers":true,"headerstr":"","ignoreEmpty":true,"discardUnmappedColumns":true,"strictColumnHandling":false,"delimiter":",","quote":"\"","escape":"\"","comment":"#","ltrim":false,"rtrim":false,"rowDelimiter":"\\n","includeEndRowDelimiter":false,"quoteHeaders":false,"quoteColumns":false,"x":228.51563262939453,"y":984.3283138275146,"wires":[["b1051577.07a818"]]},{"id":"2b9f2547.8d2e0a","type":"file in","z":"816aa166.a340a","name":"Read Modbus Point Config","filename":"/data/modbus_points.csv","format":"utf8","chunk":false,"sendError":false,"x":410.5195541381836,"y":910.7111263275146,"wires":[["d8b6701f.c0e36"]]},{"id":"1ed09f72.b9a041","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":198.1367301940918,"y":909.4337606430054,"wires":[["2b9f2547.8d2e0a"]]},{"id":"b1051577.07a818","type":"function","z":"816aa166.a340a","name":"cacheConfig","func":"var pts = msg.payload\nvar points_lookup = {}\npts.forEach(function(p){\n    \n    if (points_lookup[p.reg_name]) {\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off, 'parse': p.parse})\n    } else {\n      points_lookup[p.reg_name] = {}\n      points_lookup[p.reg_name].name = p.reg_name\n      points_lookup[p.reg_name].parse = p.parse\n      points_lookup[p.reg_name].group = p.group\n      points_lookup[p.reg_name].quantity = p.quantity\n      points_lookup[p.reg_name].address = parseInt(p.reg_address)\n      points_lookup[p.reg_name].points = []\n      points_lookup[p.reg_name].points.push({'bit': parseInt(p.bit), 'name': p.point_name, 'alias_on': p.alias_on, 'alias_off': p.alias_off})\n    } \n});\n\nflow.set('points', points_lookup)        ","outputs":1,"noerr":0,"x":420.5234603881836,"y":988.351752281189,"wires":[[]]},{"id":"2104df1d.d5137","type":"modbus-flex-getter","z":"816aa166.a340a","name":"","showStatusActivities":false,"showErrors":false,"server":"98b55c86.c6ed8","useIOFile":false,"ioFile":"","useIOForPayload":false,"x":962.5236206054688,"y":1225.9337768554688,"wires":[["b8fe5e24.73142","6569bc8c.c35b44"],[]]},{"id":"bc69d377.f93b9","type":"cron","z":"816aa166.a340a","name":"","crontab":"*/7 * * * * *","x":229.52346801757812,"y":1259.445556640625,"wires":[["432e5378.29ee1c","12480111.a809df"]]},{"id":"404dcc55.6fc5c4","type":"function","z":"816aa166.a340a","name":"Loop Through Points","func":"var points = flow.get('points')\nvar modbusStatus = flow.get('modbusStatus')\nif(points && (modbusStatus.indexOf('active') != -1 || modbusStatus.indexOf('timeout') != -1)) {\nvar numPoints = Object.keys(points).length\nvar idx = flow.get('idx')\n\nif (idx == undefined || idx >= numPoints) {\n    idx = 0\n}\n\nvar names = Object.keys(points)\nmsg.points = points[names[idx]].points\nmsg.name = names[idx]\nmsg.parse = points[names[idx]].parse\nmsg.group = points[names[idx]].group\nnode.error(msg.name)\n\nmsg.payload = { value: msg.payload, 'fc': 3, 'unitid': 1, 'address': points[names[idx]].address, 'quantity': points[names[idx]].quantity }\n\nif(idx <= numPoints-1) {\n    idx += 1\n    flow.set('idx', idx)\n      \n} else {\nflow.set('idx', 0)  \n}\nreturn msg;  \n}\n\n","outputs":1,"noerr":0,"x":726.5117797851562,"y":1225.3400268554688,"wires":[["2104df1d.d5137"]]},{"id":"432e5378.29ee1c","type":"moment","z":"816aa166.a340a","name":"Inject timeStamp","topic":"","input":"","inputType":"date","inTz":"America/Chicago","adjAmount":0,"adjType":"days","adjDir":"add","format":"MM/DD/YY hh:mm A","locale":"POSIX","output":"timeStamp","outputType":"msg","outTz":"America/Chicago","x":501.01959228515625,"y":1225.0042114257812,"wires":[["404dcc55.6fc5c4"]]},{"id":"8c58f98a.6ca968","type":"comment","z":"816aa166.a340a","name":"Poll once every 10 seconds","info":"","x":279.5234603881836,"y":1174.3517303466797,"wires":[]},{"id":"16239791.4ca188","type":"ui_text","z":"816aa166.a340a","group":"b77c53f.84b19b","order":8,"width":"0","height":"0","name":"Alarm Reg Date","label":"Alarm Reg Date:","format":"{{msg.payload}}","layout":"row-spread","x":947.0196685791016,"y":2293.754250049591,"wires":[]},{"id":"b94029d6.dee4e8","type":"inject","z":"816aa166.a340a","name":"SEND RESET MANUALLY","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":228.5000228881836,"y":1043.3335132598877,"wires":[["62f05510.c02e0c","c280d5dc.89c248"]]},{"id":"fb64cdc.38ae73","type":"status","z":"816aa166.a340a","name":"","scope":["9ddabc9.77a974","2104df1d.d5137"],"x":512.5000305175781,"y":1286.3335609436035,"wires":[["874d99dc.ceef68"]]},{"id":"874d99dc.ceef68","type":"function","z":"816aa166.a340a","name":"modbus status","func":"flow.set(\"modbusStatus\",msg.status.text)","outputs":1,"noerr":0,"x":720.4999694824219,"y":1286.0001831054688,"wires":[[]]},{"id":"152bc8c0.6e3f67","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":267.2812728881836,"y":718.9611053466797,"wires":[[]]},{"id":"b8fe5e24.73142","type":"function","z":"816aa166.a340a","name":"Parse Result","func":"\nif (msg.name == \"Status\") {\n  return msg\n} else if(msg.name.indexOf(\"Alarms\") != -1) {\nreturn [null,msg]    \n} \n\n\n\n","outputs":3,"noerr":0,"x":1182.0235595703125,"y":1223.039306640625,"wires":[["438829c6.50d1a8","28e9ab07.0c0544"],["fde05aee.a97178","28e9ab07.0c0544"],["28e9ab07.0c0544"]]},{"id":"438829c6.50d1a8","type":"function","z":"816aa166.a340a","name":"Parse Status","func":"flow.set(\"statusRegDate\", msg.timeStamp)\nvar status = flow.get(\"Status\")||[]\nvar names = []\nstatus.forEach(function(o){\n    names.push(Object.keys(o)[0])\n})\n// var names = Object.keys(status)\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n    var val = \"\"\n    if((r & Math.pow(2,p.bit)) > 0) {\n        // var obj = {}\n        val = p.alias_on\n        // status.push(obj)\n    } else {\n        // var obj = {}\n        val = p.alias_off\n        // status.push(obj)\n    }\n    var idx = names.indexOf(p.name)\n    var o = {}\n    o[p.name] = val\n    if(idx == -1) {\n        status.push(o)\n    } else {\n        status[idx] = o\n    }\n});\n\nflow.set(\"Status\", status)","outputs":1,"noerr":0,"x":1377.5234375,"y":1160.703369140625,"wires":[[]]},{"id":"fde05aee.a97178","type":"function","z":"816aa166.a340a","name":"Parse Alarms","func":"\nvar alarmMsg = \"Current Time        \" + msg.timeStamp\nalarmMsg += \"\\nAmerico CRU\"\nvar voiceMsg = \"Hello. There are active alarms at location. C. R. U. \"\n\nvar newAlarm = false\n\nflow.set(\"alarmRegDate\", msg.timeStamp)\nvar alarms = flow.get(\"Alarms\")||[]\nvar old_names = []\nalarms.forEach(function(a){\n  old_names.push(Object.keys(a)[0]) \n});\n\n// var new_alarms = []\nvar r = msg.payload[0]\n\nmsg.points.forEach(function(p){\n\n     if((r & Math.pow(2,p.bit)) > 0) {\n      var obj = {}\n      obj[p.name] = p.alias_on\n    //   new_alarms.push(obj)\n     } else {\n      var obj = {}\n      obj[p.name] = p.alias_off\n    //   new_alarms.push(obj)\n     }\n    \n    // node.error(old_names)\n    var idx = old_names.indexOf(p.name)\n    // node.error('INDEX OF NAME')\n    // node.error(idx)\n    \n    if (idx != -1) {\n        // node.error('obj[p.name]')\n        // node.error(obj[p.name])\n        // node.error('alarms[idx][p.name]')\n        // node.error(alarms[idx][p.name])        \n        \n        if(alarms[idx][p.name] != obj[p.name]) {\n          if(obj[p.name] == p.alias_on) {\n             alarmMsg = alarmMsg + \"\\nAlarm Active:   \" + p.name\n             voiceMsg = voiceMsg + \"Active. \" + p.name + \".\"\n          } else {\n             alarmMsg = alarmMsg + \"\\nAlarm Cleared:  \" + p.name\n          }\n          newAlarm = true\n        } \n        \n        alarms[idx][p.name] = obj[p.name]\n        \n    } else {\n        alarms.push(obj)\n    }\n    \n});\n\n\n\nflow.set(\"Alarms\", alarms)\n\nif(newAlarm) {\n    var alarmActive = false\n    alarms.forEach(function(a){\n        var val = Object.keys(a)[0]\n        val = a[val]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            alarmActive = true\n        }\n    });\n    flow.set('alarmActive', alarmActive)\n    // if active alarm, call and text\n    if(alarmMsg.indexOf('Alarm Active') != -1) {\n        voiceMsg = voiceMsg + \". Press any key to acknowledge the alarm.\"\n        flow.set('voiceMsg', voiceMsg)\n        return [{\"payload\": alarmMsg}, {\"payload\": voiceMsg, 'reset': true}]\n    } else {\n    return {\"payload\": alarmMsg}     \n    }\n    // if alarm clear, just text\n   \n} \n","outputs":2,"noerr":0,"x":1375.5234375,"y":1235.7034912109375,"wires":[["faca4217.f6b08"],["4f55e706.6200b8"]]},{"id":"28e9ab07.0c0544","type":"debug","z":"816aa166.a340a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1320.5390014648438,"y":1563.9376220703125,"wires":[]},{"id":"e2303f7.b0aabc","type":"function","z":"816aa166.a340a","name":"CLEAR CACHE","func":"flow.set('Status', undefined)\nflow.set('Points', undefined)\nflow.set('Alarms', undefined)\n// flow.set('Alarms', undefined)\n// flow.set('points', undefined)","outputs":1,"noerr":0,"x":795.5390853881836,"y":1450.9376678466797,"wires":[[]]},{"id":"ab34216.f724fe","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":611.0234985351562,"y":1451.0392456054688,"wires":[["e2303f7.b0aabc"]]},{"id":"7993c198.68c6f","type":"comment","z":"816aa166.a340a","name":"CLEAR CACHE","info":"","x":683.0234603881836,"y":1415.0392303466797,"wires":[]},{"id":"5178b6d0.b0ad38","type":"http in","z":"816aa166.a340a","name":"Alarm Call Pickup","url":"/call_answered","method":"post","upload":false,"swaggerDoc":"","x":1830,"y":1840,"wires":[["10f89346.a622ed"]]},{"id":"230f294e.06b0f6","type":"http response","z":"816aa166.a340a","name":"Send TwiML","statusCode":"200","headers":{},"x":2272.0038986206055,"y":1846.0352363586426,"wires":[]},{"id":"4f55e706.6200b8","type":"function","z":"816aa166.a340a","name":"Start Call","func":"// msg.headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\n// msg.headers = {\"Content-Type\": \"application/json\"}\n// msg.payload = {\"From\": \"+14322162465\", \"To\": \"+14696512674\", \"Url\": \"http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"}\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls?To=14696512674&From=+14322162465&Url=http://ec2-18-218-144-146.us-east-2.compute.amazonaws.com:1880/call_answered\"\n// msg.url = \"https://api.twilio.com/2010-04-01/Accounts/ACd3d1e28d6055eac9af7579cbe9b2df67/Calls.json?To%3D%2B14696512674%26From%3D%2B14322162465%26\"\n// msg.url = \"https%3A%2F%2Fapi.twilio.com%2F2010-04-01%2FAccounts%2FACd3d1e28d6055eac9af7579cbe9b2df67%2FCalls%3FTo%3D%2B14696512674%26From%3D%2B14322162465%26Url%3Dhttp%3A%2F%2Fec2-18-218-144-146.us-east-2.compute.amazonaws.com%3A1880%2Fcall_answered\"\n\n// Download the helper library from https://www.twilio.com/docs/node/install\n// Your Account Sid and Auth Token from twilio.com/console\nnode.error(\"MESSAGE IN CALL\")\nnode.error(msg)\nvar ack = flow.get('alarmAcked')||false\nif(!ack || msg.reset) {\n    if(msg.reset) {\n        flow.set('alarmAcked', false)\n    }\nvar twilio = global.get('twilio')\nconst accountSid = 'ACd3d1e28d6055eac9af7579cbe9b2df67';\nconst authToken = '075c463b1989281acdfe67dd508ea15a';\nconst client = twilio(accountSid, authToken);\n\nvar users = flow.get('alarmContacts')  \nvar nums = Object.keys(users)\nvar numIndex = flow.get('numIndex')||0\n\nif(numIndex >= nums.length) {\n    numIndex = 0\n} else if(msg.reset) {\n    numIndex = 0\n}\nnode.error(numIndex)\nvar to = nums[numIndex]\nnode.error(\"ALARM CALL NOW\")\nnode.error(to)\nnumIndex = numIndex + 1\nflow.set('numIndex', numIndex)\n\nclient.calls\n      .create({\n         url: 'http://ec2-18-218-187-123.us-east-2.compute.amazonaws.com:1880/call_answered',\n         to: to,\n         from: '+14322162465'\n      })\n      .then(call => node.error(call.sid))\n      .done(node.error);\n      \n      \nreturn {'payload': 0}\n}","outputs":1,"noerr":0,"x":1749.00439453125,"y":1580.035400390625,"wires":[["9bb9940f.e00878"]]},{"id":"10f89346.a622ed","type":"function","z":"816aa166.a340a","name":"Process Call","func":"\n      var voiceMsg = flow.get('voiceMsg')\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n    <Response> \\\n      <Gather action=\\\"http://ec2-18-218-187-123.us-east-2.compute.amazonaws.com:1880/operator_response\\\" numDigits=\\\"1\\\"> \\\n        <Say voice=\\\"woman\\\">\"+voiceMsg+\"</Say> \\\n      </Gather> \\\n      <Say voice=\\\"woman\\\">Sorry, I didn't get your response. You can still acknowledge the alarm by texting 9 or a. c. k. to this number. Goodbye.</Say> \\\n    </Response>\";\n\nmsg.payload = twiml_response;\nreturn msg;      \n     ","outputs":1,"noerr":0,"x":2083.0038986206055,"y":1846.0352363586426,"wires":[["230f294e.06b0f6"]]},{"id":"b7af044c.b50cc8","type":"function","z":"816aa166.a340a","name":"handleGather","func":"// Use 2 outputs, 2nd is for mqtt topic/payload combination\n// Could be useful to post other caller info to a topic\n// var mqttOut = null;\n// var responseMsg = \"\";\nnode.error('INSIDE GATHER')\n// var name = \"wholehouse\";\n// var reading = context.global[name];\n\nvar twiml_response = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?> \\\n        <Response><Say voice=\\\"woman\\\"> \\\n\tYou have acknowledged the alarm.  No other operators will be called.  Check text message for alarm details. Goodbye.\\\n</Say>\\\n</Response>\"\nmsg.payload = twiml_response\nflow.set('alarmAcked', true)\nreturn [msg,msg]\n\n","outputs":1,"noerr":0,"x":2090.027389526367,"y":1923.5743675231934,"wires":[["230f294e.06b0f6"]]},{"id":"3a140bb.1c052f4","type":"catch","z":"816aa166.a340a","name":"","scope":null,"x":2046.2773361206055,"y":2021.4414863586426,"wires":[["8240cda5.a5545"]]},{"id":"8240cda5.a5545","type":"debug","z":"816aa166.a340a","name":"ERROR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2213.5351486206055,"y":2018.9805488586426,"wires":[]},{"id":"8500b7fa.fd0b48","type":"comment","z":"816aa166.a340a","name":"SECOND OUTPUT = VOICE","info":"","x":1756.0274200439453,"y":1531.0743465423584,"wires":[]},{"id":"63f33949.394cb8","type":"function","z":"816aa166.a340a","name":"SET ALARM CONTACTS","func":"// var contacts = {'+13252420417': 'James Owens', '+13375229291': \"Americo User\"}\n// // Billy Botts +13252074220 (LEAD CONTACT)\n// // Lynn Parham +13254367687\n// // Bill Payne +13252071141\n// // James Owens +13252420417\n\nvar contacts = JSON.parse(msg.payload)\nflow.set('alarmContacts', contacts)","outputs":1,"noerr":0,"x":697.77734375,"y":1890.2147827148438,"wires":[[]]},{"id":"e65fc0ac.3ccbc","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":"1","x":225.02737426757812,"y":1890.07421875,"wires":[["416042c9.c9de4c"]]},{"id":"ae7c665a.e96cf8","type":"http in","z":"816aa166.a340a","name":"Operator Input","url":"/operator_response","method":"post","upload":false,"swaggerDoc":"","x":1804.0275573730469,"y":1917.0743350982666,"wires":[["b7af044c.b50cc8","fe186635.7c73e8","66772a3f.2101c4"]]},{"id":"3216fa72.fab3e6","type":"trigger","z":"816aa166.a340a","op1":"","op2":"call_next","op1type":"nul","op2type":"str","duration":"8","extend":true,"units":"min","reset":"","bytopic":"all","name":"","x":1906.535659790039,"y":1722.9575290679932,"wires":[["4f55e706.6200b8"]]},{"id":"9bb9940f.e00878","type":"delay","z":"816aa166.a340a","name":"","pauseType":"delay","timeout":"1","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1956.285400390625,"y":1577.4337158203125,"wires":[["3216fa72.fab3e6"]]},{"id":"79eb141d.392a6c","type":"function","z":"816aa166.a340a","name":"Alarm Acknowledge","func":"\n    var statusMsg = \"Current Time        \" + msg.timeStamp\n   var alarms = flow.get(\"Alarms\")\n    if(alarms) {\n        \n    var activeAlarms = \"\"\n        alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms += name + \", \"\n        }\n    });\n    if (activeAlarms.length > 0) {\n     activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\n     statusMsg += \"\\nAmerico CRU\\nAlarms Acknowledged: \" + activeAlarms  \n     flow.set(\"alarmAcked\", true)\n    } else {\n     statusMsg += \"\\nAmerico CRU\\nNo Active Alarms to Acknowledge\"       \n    }\n\n    } else {\n        statusMsg += \"\\nAmerico CRU\\nNo Active Alarms to Acknowledge\" \n    }\n    \n    // alarms = flow.get(\"Alarms\")\n    // alarm_names = Object.keys(alarms)\n    // var foundAlarm = false\n    \n    // alarm_names.forEach(function(a){\n\n        \n    // if(alarms)\n    \n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"\\n\\nReset Alarms:\"\n    // }    \n    // statusMsg = statusMsg + \"\\nTank High-High Level\"\n    // foundAlarm = true\n        \n        \n        \n    // });\n\n    // if(!foundAlarm) {\n    // statusMsg = statusMsg + \"  There were no alarms to reset.\"\n    // }\n\n  msg.payload = statusMsg\n  return msg;\n\n","outputs":1,"noerr":0,"x":1466.023551940918,"y":124.03907585144043,"wires":[["f9cdd4b.8430728"]]},{"id":"fe186635.7c73e8","type":"debug","z":"816aa166.a340a","name":"OEPRATOR","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1891.0234603881836,"y":1986.5392303466797,"wires":[]},{"id":"66772a3f.2101c4","type":"function","z":"816aa166.a340a","name":"send ack text message to other users","func":"node.error(\"SEND ACK TEXT MESSAGE FUNCTION\")\nvar users = flow.get('alarmContacts')\nvar nums = Object.keys(users)\nvar idx = nums.indexOf(msg.payload.To)\nvar userName = users[nums[idx]]\nnums.splice(idx,1)\nvar alarms = flow.get(\"Alarms\")\nvar activeAlarms = \"\"\nvar count = 0\nnode.error(\"BEFORE LOOP\")\n    alarms.forEach(function(a){\n        var name = Object.keys(a)[0]\n        var val = a[name]\n        val = val.toLowerCase()\n        if(val.indexOf(\"alarm\") !== -1) {\n            activeAlarms += name + \", \"\n            count += 1\n        }\n    });\n    activeAlarms = activeAlarms.substring(0,activeAlarms.length-2)\nnode.error(\"AFTER LOOP\")\nif(count > 1) {\nvar msg = \"The alarms: \" + activeAlarms + \" were acknowledged by: \" + userName  \n} else {\nvar msg = \"The alarm: \" + activeAlarms + \" was acknowledged by: \" + userName\n}\n\nvar n = \"\"\nnums.forEach(function(num){\n   n = n + num + \",\" \n});\nn = n.substring(0,n.length-1)\nvar obj = {\"payload\": msg, \"topic\": n, \"reset\": true}\nnode.error(obj)\nreturn obj","outputs":1,"noerr":0,"x":1421.0235977172852,"y":1745.539294242859,"wires":[["34ad8e96.7c07c2","3216fa72.fab3e6"]]},{"id":"34ad8e96.7c07c2","type":"sms","z":"816aa166.a340a","name":"Customer Twilio","message":"","numbers":"","throttle":"5000","twilio":"6a986612.01cd18","x":1642.0234603881836,"y":1325.0392303466797,"wires":[[]]},{"id":"3331d6d9.404f0a","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":830.5000610351562,"y":1711.33349609375,"wires":[["9ddabc9.77a974"]]},{"id":"9ddabc9.77a974","type":"function","z":"816aa166.a340a","name":"CALL TEST","func":"var voiceMsg = \"Hello. There are active alarms at location. C. R. U. \" + \" Active. N. Pump Kill\" + \". Press any key to acknowledge the alarm.\"\nflow.set(\"voiceMsg\", voiceMsg)\nvar msg = {\"payload\": voiceMsg, 'reset': true}\nreturn msg;","outputs":1,"noerr":0,"x":1099.75,"y":1712.0001220703125,"wires":[[]]},{"id":"12480111.a809df","type":"mqtt out","z":"816aa166.a340a","name":"Hannathon Americo_CRU Keepalive","topic":"Americo_CRU","qos":"0","retain":"","broker":"975eae2.064e85","x":713,"y":1562.0001220703125,"wires":[]},{"id":"759b9a70.238024","type":"comment","z":"816aa166.a340a","name":"CCS SCADA HEALTH MANAGER KEEPALIVE MQTT","info":"","x":695.0390853881836,"y":1519.0001678466797,"wires":[]},{"id":"5b8264d4.394c4c","type":"cron","z":"816aa166.a340a","name":"","crontab":"0 */3 * * * *","x":513.0000228881836,"y":827.0001678466797,"wires":[["2b9f2547.8d2e0a"]]},{"id":"c753dc62.240ed","type":"comment","z":"816aa166.a340a","name":"REFRESH Points every 3 minutes","info":"","x":1169.000099182129,"y":818.0001678466797,"wires":[]},{"id":"dd0e7c1c.c5882","type":"comment","z":"816aa166.a340a","name":"AMERICO SUBSCRIPTION SERVICE","info":"","x":258.00006103515625,"y":134.00030326843262,"wires":[]},{"id":"22bcf4a6.1495dc","type":"function","z":"816aa166.a340a","name":"VALIDATE INCOMING SUBSCRIBE COMMAND","func":"// first output, add pin to list\n// second output, remove pin from list\n// third output, no action, text response\n\nvar cmd = msg.payload.Body.toLowerCase()\nvar subscribe_pin = flow.get(\"subscribe_pin\")||\"0000\"\nvar incoming_pin = \"9999\"\nvar result = \"\"\n\n\nvar test_inc = parseInt(cmd) \nif(isNaN(test_inc)) {\n    // not a valid pin, check for remove command\n if(cmd.indexOf(\"remove\") != -1) {\n    // remove incoming number from list\n    msg.payload = msg.payload.From\n    return [null, msg]\n } else {\n    msg.payload = \"Error: Your command or pin is invalid.  Send a numeric pin to subscribe to Americo CRU alarms.\"\n     return [null,null,msg]\n }\n} else {\n    // valid pin, check if equal to current subscribe_pin\n    incoming_pin = msg.payload.Body\n    if(incoming_pin == subscribe_pin) {\n        // add number to current list if number is not already in subscribed list\n        msg.payload = msg.payload.From\n        return [msg]\n    } else {\n        // pin doesnt match, return error message\n        msg.payload = \"Error: Your command or pin is invalid.  Send a numeric pin to subscribe to Americo CRU alarms.\"\n        return [null, null, msg]\n    }\n}   \n","outputs":3,"noerr":0,"x":647.5000610351562,"y":275.00030517578125,"wires":[["b97c6275.610b8"],["5bb67925.e37788"],["c59955a4.86af18"]]},{"id":"c59955a4.86af18","type":"http response","z":"816aa166.a340a","name":"Respond with Status Msg","statusCode":"200","headers":{"content-type":"text/plain"},"x":1740.0001983642578,"y":301.0003128051758,"wires":[]},{"id":"f29b701.2bf659","type":"inject","z":"816aa166.a340a","name":"SUBSCRIBE_PIN","topic":"","payload":"4837","payloadType":"str","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":325.00006103515625,"y":379.00030517578125,"wires":[["4a702ae5.b35b34"]]},{"id":"4a702ae5.b35b34","type":"function","z":"816aa166.a340a","name":"SET SUBSCRIBE PIN","func":"flow.set(\"subscribe_pin\", msg.payload)","outputs":1,"noerr":0,"x":558.5000610351562,"y":379.00030303001404,"wires":[[]]},{"id":"b97c6275.610b8","type":"function","z":"816aa166.a340a","name":"ADD NUMBER","func":"var smsContacts = flow.get(\"smsContacts\")\nvar alarmContacts = flow.get(\"alarmContacts\")\nvar response = \"\"\nif(smsContacts.indexOf(msg.payload) == -1) {\n    smsContacts = smsContacts + \",\" + msg.payload\n    flow.set(\"smsContacts\", smsContacts)\n    alarmContacts[msg.payload] = \"Unknown Americo User\"\n    flow.set(\"alarmContacts\", alarmContacts)\n    msg.phoneNumber = msg.payload\n    msg.payload = \"Success: You are now subscribed to sms & voice alarms for Americo CRU. Please enter your first and last name to attach to your account: \"\n    return msg\n} else {\n    msg.payload = \"You are already subscribed to sms & voice alarms for Americo CRU\"\n    return [null,msg]\n}\n\n","outputs":2,"noerr":0,"x":977.0001831054688,"y":201.00035095214844,"wires":[["c98b382.eafcdc8","2e1ed74b.771878","1009ad66.db2833"],["c59955a4.86af18"]]},{"id":"5bb67925.e37788","type":"function","z":"816aa166.a340a","name":"REMOVE NUMBER","func":"var smsContacts = flow.get(\"smsContacts\")\nvar alarmContacts = flow.get(\"alarmContacts\")\nvar response = \"\"\nif(smsContacts.indexOf(msg.payload) != -1) {\n    var s1 = \",\" + msg.payload\n    var s2 = msg.payload + \",\"\n    var s3 = msg.payload\n    if(smsContacts.indexOf(s1) != -1) {\n        smsContacts = smsContacts.replace(s1, \"\")\n    } else if(smsContacts.indexOf(s2) != -1) {\n        smsContacts = smsContacts.replace(s2, \"\")\n    } else {\n        smsContacts = smsContacts.replace(s3, \"\")\n    }\n    flow.set(\"smsContacts\", smsContacts)\n    var o = {}\n    var k = Object.keys(alarmContacts)\n    k.forEach(function(key){\n        if(key != msg.payload) {\n            o[key] = alarmContacts[key]\n         }\n    });\n    flow.set(\"alarmContacts\", o)\n    msg.payload = \"Success: You are now unsubscribed from sms & voice alarms for Americo CRU.\"\n} else {\n    msg.payload = \"You are already unsubscribed from sms & voice alarms for Americo CRU\"\n}\n\nreturn msg","outputs":1,"noerr":0,"x":1037.0001983642578,"y":277.00033378601074,"wires":[["c59955a4.86af18","2e1ed74b.771878","1009ad66.db2833"]]},{"id":"c2743a6f.86cd78","type":"function","z":"816aa166.a340a","name":"SET SMS CONTACTS","func":"var contacts = '+13252420417,+13375229291,+13254367687,+13252071141,+13252420417,+13252077037,+1432741885'\n// var contacts = msg.payload\nflow.set('smsContacts', contacts)","outputs":1,"noerr":0,"x":687.5000190734863,"y":1943.0001373291016,"wires":[[]]},{"id":"3f5b24d2.d0bffc","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":"1","x":224.00004196166992,"y":1942.1095581054688,"wires":[["1a2a8986.5417a6"]]},{"id":"faca4217.f6b08","type":"function","z":"816aa166.a340a","name":"Get SMS Contacts","func":"msg.topic = flow.get(\"smsContacts\")\nreturn msg","outputs":1,"noerr":0,"x":1590,"y":1239.0001220703125,"wires":[["d77257e.fb2faa8"]]},{"id":"2dacef1f.cdf28","type":"function","z":"816aa166.a340a","name":"Check Incoming Number","func":"var smsContacts = flow.get(\"smsContacts\")\nif(smsContacts.indexOf(msg.payload.From) != -1) {\n    return msg;    \n} else {\n    return [null,msg];\n}\n","outputs":2,"noerr":0,"x":359.0234680175781,"y":30.03907585144043,"wires":[["1be39f5f.90abb1"],["22bcf4a6.1495dc"]]},{"id":"c98b382.eafcdc8","type":"function","z":"816aa166.a340a","name":"Waiting For Name to True","func":"var waiting = \"waitingForName_\"+msg.phoneNumber\nflow.set(waiting, true)\nreturn msg;","outputs":1,"noerr":0,"x":1224.7499389648438,"y":193,"wires":[["c59955a4.86af18"]]},{"id":"1be39f5f.90abb1","type":"function","z":"816aa166.a340a","name":"Check for Name","func":"var num = \"waitingForName_\"+msg.payload.From\nvar waiting = flow.get(num)||false\nif(waiting) {\n    flow.set(num, false)\n    var alarmContacts = flow.get(\"alarmContacts\")\n    alarmContacts[msg.payload.From] = msg.payload.Body\n    flow.set(\"alarmContacts\", alarmContacts)\n    msg.payload = \"Success: Account name set to: \" + msg.payload.Body\n    return [null, msg]\n} else {\n    return msg;    \n}\n\n","outputs":2,"noerr":0,"x":633,"y":30.000003814697266,"wires":[["175eb110.3cc74f"],["f9cdd4b.8430728","2e1ed74b.771878"]]},{"id":"1ebd28f1.b57197","type":"file","z":"816aa166.a340a","name":"File Cache Alarm Contacts","filename":"/data/alarm_contacts.json","appendNewline":false,"createDir":false,"overwriteFile":"true","x":1574,"y":373.0001220703125,"wires":[]},{"id":"7e053c3f.80ecf4","type":"file","z":"816aa166.a340a","name":"File Cache Sms Contacts","filename":"/data/sms_contacts.txt","appendNewline":false,"createDir":false,"overwriteFile":"true","x":1562,"y":433.0001220703125,"wires":[]},{"id":"2e1ed74b.771878","type":"function","z":"816aa166.a340a","name":"Get Alarm Contacts","func":"var contacts = flow.get(\"alarmContacts\")||{}\nmsg.payload = JSON.stringify(contacts)\nreturn msg;","outputs":1,"noerr":0,"x":1326.0000305175781,"y":374.000036239624,"wires":[["1ebd28f1.b57197"]]},{"id":"1009ad66.db2833","type":"function","z":"816aa166.a340a","name":"Get SMS Contacts","func":"var contacts = flow.get(\"smsContacts\")||\"\"\nmsg.payload = contacts\nreturn msg;","outputs":1,"noerr":0,"x":1325,"y":432,"wires":[["7e053c3f.80ecf4"]]},{"id":"416042c9.c9de4c","type":"file in","z":"816aa166.a340a","name":"get alarm contacts","filename":"alarm_contacts.json","format":"utf8","chunk":false,"sendError":false,"x":457.75,"y":1890.1665649414062,"wires":[["63f33949.394cb8"]]},{"id":"1a2a8986.5417a6","type":"file in","z":"816aa166.a340a","name":"get sms contacts","filename":"sms_contacts.txt","format":"utf8","chunk":false,"sendError":false,"x":456,"y":1942.6666259765625,"wires":[["c2743a6f.86cd78"]]},{"id":"30b881c4.46a16e","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":"1","x":212.02734375,"y":2016.9647216796875,"wires":[["67043dbd.6c3234"]]},{"id":"67043dbd.6c3234","type":"function","z":"816aa166.a340a","name":"CLEAR ALL CONTACTS","func":"flow.set('alarmContacts', {})\nflow.set('smsContacts', \"\")","outputs":1,"noerr":0,"x":707.5273628234863,"y":2016.8553657531738,"wires":[[]]},{"id":"dbd1634a.6189e","type":"debug","z":"816aa166.a340a","name":"TWILIO","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":310.16668701171875,"y":82.66667175292969,"wires":[]},{"id":"2ce8200b.b378c","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1306,"y":2020,"wires":[[]]},{"id":"cec2a53.2ac8858","type":"function","z":"816aa166.a340a","name":"","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1463.5,"y":2017,"wires":[[]]},{"id":"218c95e4.d92e1a","type":"ui_button","z":"816aa166.a340a","name":"Send CSV Report","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"passthru":false,"label":"Send CSV Report","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":318.33331298828125,"y":495.79998779296875,"wires":[["902fc548.a03"]]},{"id":"902fc548.a03","type":"function","z":"816aa166.a340a","name":"Weekly Trend All Alarms","func":"var query = \"SELECT name, value, timestamp FROM ccs_scada WHERE timestamp > unix_timestamp(NOW() - INTERVAL 1 WEEK)\"\nmsg.topic = query\nreturn msg;","outputs":1,"noerr":0,"x":570.3333129882812,"y":495.4666748046875,"wires":[[]]},{"id":"88e3e3dc.af7ba","type":"ui_button","z":"816aa166.a340a","name":"Send CSV Report","group":"b77c53f.84b19b","order":0,"width":0,"height":0,"passthru":false,"label":"Send CSV Report","color":"","bgcolor":"","icon":"","payload":"","payloadType":"date","topic":"","x":524.7618408203125,"y":1376.4285278320312,"wires":[["8908f58a.2de238"]]},{"id":"8908f58a.2de238","type":"function","z":"816aa166.a340a","name":"Weekly Trend Alarms","func":"\nreturn msg;","outputs":1,"noerr":0,"x":764.7618408203125,"y":1376.5238647460938,"wires":[[]]},{"id":"faf8ce3a.6e7778","type":"comment","z":"816aa166.a340a","name":"Historic Alarm Trend","info":"","x":653.333251953125,"y":1333.5237426757812,"wires":[]},{"id":"3630bdee.ea5a92","type":"inject","z":"816aa166.a340a","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1622,"y":1009,"wires":[["f17b7e79.ff57c"]]},{"id":"f17b7e79.ff57c","type":"function","z":"816aa166.a340a","name":"SMS Number Testing","func":"msg.topic = flow.get(\"smsContacts\")\n//msg.topic = \"+14327411885\"\nmsg.payload = \"This is a test message for the Americo CRU Alarm notifications and can be ignored. If you have questions please contact Cowan Consulting  Services at 833-722-3246.\"\nreturn msg;","outputs":1,"noerr":0,"x":1824,"y":1075,"wires":[["7b15d34e.683dfc"]]},{"id":"7b15d34e.683dfc","type":"sms","z":"816aa166.a340a","name":"Customer Twilio","message":"","numbers":"","throttle":"5000","twilio":"6a986612.01cd18","x":2057,"y":1121,"wires":[[]]},{"id":"615685d9.f1c9fc","type":"status","z":"816aa166.a340a","name":"","scope":["12480111.a809df"],"x":509,"y":1625,"wires":[["8b0444e5.269b88"]]},{"id":"8b0444e5.269b88","type":"function","z":"816aa166.a340a","name":"MQTT status","func":"flow.set(\"mqttHealth\",msg.status.text)","outputs":1,"noerr":0,"x":698.9999389648438,"y":1624.6666259765625,"wires":[[]]}]