{"version":3,"sources":["core/opcua-iiot-core-listener.js"],"names":["require","install","de","biancoroyal","opcua","iiot","core","listener","client","internalDebugLog","detailDebugLog","subscribeDebugLog","subscribeDetailDebugLog","eventDebugLog","eventDetailDebugLog","SUBSCRIBE_DEFAULT_INTERVAL","MIN_LISTENER_INTERVAL","MAX_LISTENER_INTERVAL","SUBSCRIBE_DEFAULT_QUEUE_SIZE","EVENT_DEFAULT_INTERVAL","getEventSubscribtionParameters","timeMilliseconds","requestedPublishingInterval","requestedLifetimeCount","requestedMaxKeepAliveCount","maxNotificationsPerPublish","publishingEnabled","getSubscriptionParameters","collectAlarmFields","field","key","value","eventInformation","eventId","eventType","sourceNode","sourceName","time","receiveTime","message","text","severity","conditionClassId","conditionClassName","conditionName","branchId","retain","enabledState","quality","lastSeverity","comment","clientUserId","ackedState","confirmedState","activeState","inputNode","supressedState","highHighLimit","highLimit","lowLimit","lowLowLimit","name","getBasicEventFields","getAllEventFields","reject","interval","queueSize","getStateFields","subscription","nodeId","attributeId","samplingInterval","discardOldest","coreListener","resolve","getConditionFields","buildNewMonitoredItem","msg","payload","Promise","Error","filter","eventFilter","nodeOPCUA","read_service","monitoredItem","monitoredItemResult","parseInt","session","resolveNodeId","AttributeIds","Value","entries","makeNodeId","ObjectTypeIds","browseEventTypes","TimestampsToReturn","Both","referenceTypeId","browseDirection","err","includeSubtypes","resultMask","buildNewEventItem","results","references","monitor","EventNotifier","browseForBrowseName","index","eventResults","dataValue","forEach","variant","dataType","DataType","this","BaseEventType","BrowseDirection","Forward","push","browse","nodesToBrowse","diagnostics","length","reference","displayName","analyzeEvent","toString","monitoringParameters","selectClauses","NodeId","browseName","eventData","toJSON","error","module","exports"],"mappings":"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","file":"../../core/opcua-iiot-core-listener.js","sourcesContent":["/**\n The BSD 3-Clause License\n\n Copyright 2016,2017,2018 - Klaus Landsdorf (http://bianco-royal.de/)\n Copyright 2015,2016 - Mika Karaila, Valmet Automation Inc. (node-red-contrib-opcua)\n All rights reserved.\n node-red-contrib-iiot-opcua\n */\n'use strict'\nrequire('source-map-support').install()\n\n/**\n * Nested namespace settings.\n *\n * @type {{biancoroyal: {opcua: {iiot: {core: {client: {listener: {}}}}}}}}\n *\n * @Namesapce de.biancoroyal.opcua.iiot.core.client.listener\n */\nvar de = de || {biancoroyal: {opcua: {iiot: {core: {listener: {}}}}}} // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.core = de.biancoroyal.opcua.iiot.core.listener.core || require('./opcua-iiot-core') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.client = de.biancoroyal.opcua.iiot.core.listener.client || require('./opcua-iiot-core-client') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.internalDebugLog = de.biancoroyal.opcua.iiot.core.listener.internalDebugLog || require('debug')('opcuaIIoT:listener') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.detailDebugLog = de.biancoroyal.opcua.iiot.core.listener.detailDebugLog || require('debug')('opcuaIIoT:listener:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.subscribeDebugLog = de.biancoroyal.opcua.iiot.core.listener.subscribeDebugLog || require('debug')('opcuaIIoT:listener:subscribe') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.subscribeDetailDebugLog = de.biancoroyal.opcua.iiot.core.listener.subscribeDetailDebugLog || require('debug')('opcuaIIoT:listener:subscribe:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.eventDebugLog = de.biancoroyal.opcua.iiot.core.listener.eventDebugLog || require('debug')('opcuaIIoT:listener:event') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.eventDetailDebugLog = de.biancoroyal.opcua.iiot.core.listener.eventDetailDebugLog || require('debug')('opcuaIIoT:listener:event:details') // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.SUBSCRIBE_DEFAULT_INTERVAL = 1000 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.MIN_LISTENER_INTERVAL = 100 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.MAX_LISTENER_INTERVAL = 3600000 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.SUBSCRIBE_DEFAULT_QUEUE_SIZE = 1 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.EVENT_DEFAULT_INTERVAL = 250 // eslint-disable-line no-use-before-define\nde.biancoroyal.opcua.iiot.core.listener.EVENT_DEFAULT_QUEUE_SIZE = 10000 // eslint-disable-line no-use-before-define\n\nde.biancoroyal.opcua.iiot.core.listener.getEventSubscribtionParameters = function (timeMilliseconds) {\n  return {\n    requestedPublishingInterval: timeMilliseconds || 100,\n    requestedLifetimeCount: 60,\n    requestedMaxKeepAliveCount: 10,\n    maxNotificationsPerPublish: 4,\n    publishingEnabled: true,\n    priority: 1\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.listener.getSubscriptionParameters = function (timeMilliseconds) {\n  return {\n    requestedPublishingInterval: timeMilliseconds || 100,\n    requestedLifetimeCount: 1000,\n    requestedMaxKeepAliveCount: 12,\n    maxNotificationsPerPublish: 100,\n    publishingEnabled: true,\n    priority: 10\n  }\n}\n\nde.biancoroyal.opcua.iiot.core.listener.collectAlarmFields = function (field, key, value) {\n  let eventInformation = {}\n\n  switch (field) {\n    // Common fields\n    case 'EventId':\n      eventInformation.eventId = value\n      break\n    case 'EventType':\n      eventInformation.eventType = value\n      break\n    case 'SourceNode':\n      eventInformation.sourceNode = value\n      break\n    case 'SourceName':\n      eventInformation.sourceName = value\n      break\n    case 'Time':\n      eventInformation.time = value\n      break\n    case 'ReceiveTime':\n      eventInformation.receiveTime = value\n      break\n    case 'Message':\n      eventInformation.message = value.text\n      break\n    case 'Severity':\n      eventInformation.severity = value\n      break\n\n    // ConditionType\n    case 'ConditionClassId':\n      eventInformation.conditionClassId = value\n      break\n    case 'ConditionClassName':\n      eventInformation.conditionClassName = value\n      break\n    case 'ConditionName':\n      eventInformation.conditionName = value\n      break\n    case 'BranchId':\n      eventInformation.branchId = value\n      break\n    case 'Retain':\n      eventInformation.retain = value\n      break\n    case 'EnabledState':\n      eventInformation.enabledState = value.text\n      break\n    case 'Quality':\n      eventInformation.quality = value\n      break\n    case 'LastSeverity':\n      eventInformation.lastSeverity = value\n      break\n    case 'Comment':\n      eventInformation.comment = value.text\n      break\n    case 'ClientUserId':\n      eventInformation.clientUserId = value\n      break\n\n    // AcknowledgeConditionType\n    case 'AckedState':\n      eventInformation.ackedState = value.text\n      break\n    case 'ConfirmedState':\n      eventInformation.confirmedState = value.text\n      break\n\n    // AlarmConditionType\n    case 'ActiveState':\n      eventInformation.activeState = value.text\n      break\n    case 'InputNode':\n      eventInformation.inputNode = value\n      break\n    case 'SupressedState':\n      eventInformation.supressedState = value.text\n      break\n\n    // Limits\n    case 'HighHighLimit':\n      eventInformation.highHighLimit = value\n      break\n    case 'HighLimit':\n      eventInformation.highLimit = value\n      break\n    case 'LowLimit':\n      eventInformation.lowLimit = value\n      break\n    case 'LowLowLimit':\n      eventInformation.lowLowLimit = value\n      break\n    case 'Value':\n      eventInformation.value = value\n      break\n    default:\n      eventInformation.field = {}\n      eventInformation.field.name = field\n      eventInformation.field.value = value\n\n      if (value.text) {\n        eventInformation.field.value.text = value.text\n      }\n      break\n  }\n\n  return eventInformation\n}\n\nde.biancoroyal.opcua.iiot.core.listener.getBasicEventFields = function () {\n  return ['EventId', 'SourceName', 'Message', 'ReceiveTime']\n}\n\nde.biancoroyal.opcua.iiot.core.listener.getAllEventFields = function () {\n  return [\n    'ConditionName',\n    'ConditionType',\n    'ConditionClassId',\n    'ConditionClassName',\n    'ConditionVariableType',\n    'SourceNode',\n    'BranchId',\n    'EventType',\n    'Severity',\n    'Retain',\n    'Comment',\n    'Comment.SourceTimestamp',\n    'EnabledState',\n    'EnabledState.Id',\n    'EnabledState.EffectiveDisplayName',\n    'EnabledState.TransitionTime',\n    'LastSeverity',\n    'LastSeverity.SourceTimestamp',\n    'Quality',\n    'Quality.SourceTimestamp',\n    'Time',\n    'ClientUserId',\n    'AckedState',\n    'AckedState.Id',\n    'ConfirmedState',\n    'ConfirmedState.Id',\n    'LimitState',\n    'LimitState.Id',\n    'ActiveState',\n    'ActiveState.Id'\n  ]\n}\n\nde.biancoroyal.opcua.iiot.core.listener.getStateFields = function () {\n  return [\n    'ConditionName',\n    'SourceNode',\n    'Quality',\n    'Time',\n    'EnabledState',\n    'EnabledState.Id',\n    'EnabledState.EffectiveDisplayName',\n    'EnabledState.TransitionTime',\n    'AckedState',\n    'AckedState.Id',\n    'ConfirmedState',\n    'ConfirmedState.Id',\n    'LimitState',\n    'LimitState.Id',\n    'ActiveState',\n    'ActiveState.Id'\n  ]\n}\n\nde.biancoroyal.opcua.iiot.core.listener.getConditionFields = function () {\n  return [\n    'Time',\n    'Quality',\n    'BranchId',\n    'SourceNode',\n    'ConditionName',\n    'ConditionType',\n    'ConditionClassId',\n    'ConditionClassName',\n    'ConditionVariableType'\n  ]\n}\n\nde.biancoroyal.opcua.iiot.core.listener.buildNewMonitoredItem = function (nodeId, msg, subscription) {\n  let coreListener = de.biancoroyal.opcua.iiot.core.listener\n\n  return new Promise(\n    function (resolve, reject) {\n      if (!nodeId) {\n        reject(new Error('NodeId Is Not Valid'))\n      }\n\n      let interval\n      let queueSize\n\n      if (typeof msg.payload.interval === 'number' &&\n        msg.payload.interval <= coreListener.MAX_LISTENER_INTERVAL &&\n        msg.payload.interval >= coreListener.MIN_LISTENER_INTERVAL) {\n        interval = parseInt(msg.payload.interval)\n      } else {\n        interval = coreListener.SUBSCRIBE_DEFAULT_INTERVAL\n      }\n\n      if (msg.payload.queueSize && typeof msg.payload.queueSize === 'number') {\n        queueSize = parseInt(msg.payload.queueSize)\n      } else {\n        queueSize = coreListener.SUBSCRIBE_DEFAULT_QUEUE_SIZE\n      }\n\n      subscription.monitor(\n        {\n          nodeId: coreListener.core.nodeOPCUA.resolveNodeId(nodeId),\n          attributeId: coreListener.core.nodeOPCUA.AttributeIds.Value\n        },\n        {\n          samplingInterval: interval,\n          discardOldest: true,\n          queueSize: queueSize\n        },\n        coreListener.core.nodeOPCUA.read_service.TimestampsToReturn.Both,\n        function (err, monitoredItemResult) {\n          if (err) {\n            coreListener.internalDebugLog('subscribing monitored item ' + err)\n            reject(err)\n          } else {\n            resolve({nodeId: nodeId, monitoredItem: monitoredItemResult})\n          }\n        }\n      )\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.listener.buildNewEventItem = function (nodeId, msg, subscription) {\n  let coreListener = de.biancoroyal.opcua.iiot.core.listener\n\n  return new Promise(\n    function (resolve, reject) {\n      if (!nodeId) {\n        reject(new Error('NodeId Is Not Valid'))\n      }\n\n      let interval\n      let queueSize\n\n      if (typeof msg.payload.interval === 'number' && msg.payload.interval < coreListener.MAX_LISTENER_INTERVAL) {\n        interval = parseInt(msg.payload.interval)\n      } else {\n        interval = coreListener.EVENT_DEFAULT_INTERVAL\n      }\n\n      if (typeof msg.payload.queueSize === 'number') {\n        queueSize = parseInt(msg.payload.queueSize)\n      } else {\n        queueSize = coreListener.EVENT_DEFAULT_QUEUE_SIZE\n      }\n\n      subscription.monitor(\n        {\n          nodeId: coreListener.core.nodeOPCUA.resolveNodeId(nodeId),\n          attributeId: coreListener.core.nodeOPCUA.AttributeIds.EventNotifier\n        },\n        {\n          samplingInterval: interval,\n          discardOldest: true,\n          queueSize: queueSize,\n          filter: msg.payload.eventFilter\n        },\n        coreListener.core.nodeOPCUA.read_service.TimestampsToReturn.Both,\n        function (err, monitoredItemResult) {\n          if (err) {\n            coreListener.internalDebugLog('subscribing event item ' + err)\n            reject(err)\n          } else {\n            resolve({ nodeId: nodeId, monitoredItem: monitoredItemResult })\n          }\n        }\n      )\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.listener.getAllEventTypes = function (session) {\n  return new Promise(\n    function (resolve, reject) {\n      if (!session) {\n        reject(new Error('Session Is Not Valid To Browse For Event Types'))\n      }\n\n      let entries = []\n      let makeNodeId = this.core.nodeOPCUA.makeNodeId\n      let ObjectTypeIds = this.core.nodeOPCUA.ObjectTypeIds\n\n      let browseEventTypes = {\n        nodeId: makeNodeId(ObjectTypeIds.BaseEventType),\n        referenceTypeId: this.core.nodeOPCUA.resolveNodeId('HasSubtype'),\n        browseDirection: this.core.nodeOPCUA.BrowseDirection.Forward,\n        includeSubtypes: true,\n        nodeClassMask: this.core.nodeOPCUA.NodeClassMask.ObjectType,\n        resultMask: 63 // All ResultMask_Schema\n      }\n\n      let nodesToBrowse = [browseEventTypes]\n\n      session.browse(nodesToBrowse, function (err, results, diagnostics) {\n        if (err) {\n          reject(err)\n        } else {\n          if (results) {\n            if (results.length > 0) {\n              results[0].references.forEach(function (reference) {\n                entries.push({displayName: reference.displayName.text, nodeId: reference.nodeId, reference: reference})\n              })\n            } else {\n              if (results.references) {\n                results.references.forEach(function (reference) {\n                  entries.push({displayName: reference.displayName.text, nodeId: reference.nodeId, reference: reference})\n                })\n              }\n            }\n          }\n          resolve(entries)\n        }\n      })\n    })\n}\n\nde.biancoroyal.opcua.iiot.core.listener.analyzeEvent = function (session, browseForBrowseName, dataValue) {\n  let core = de.biancoroyal.opcua.iiot.core.listener.core\n  let coreListener = de.biancoroyal.opcua.iiot.core.listener\n\n  return new Promise(\n    function (resolve, reject) {\n      if (!session) {\n        reject(new Error('Session Is Not Valid To Analyze Event'))\n      }\n\n      if (!browseForBrowseName || typeof browseForBrowseName !== 'function') {\n        reject(new Error('BrowseForBrowseName Is Not Valid Function'))\n      }\n\n      if (!dataValue) {\n        reject(new Error('Event Response Not Valid'))\n      } else {\n        let index = 0\n        let eventInformation = {}\n        let eventResults = []\n\n        dataValue.forEach(function (variant) {\n          coreListener.eventDebugLog('variant entry: ' + variant.toString())\n\n          try {\n            if (variant.dataType && variant.value) {\n              eventInformation = coreListener.collectAlarmFields(dataValue.monitoringParameters.filter.selectClauses[index], variant.dataType.key.toString(), variant.value)\n\n              if (variant.dataType === core.nodeOPCUA.DataType.NodeId) {\n                browseForBrowseName(session, variant.value, function (err, browseName) {\n                  if (err) {\n                    reject(err)\n                  } else {\n                    eventInformation.browseName = browseName\n                    eventResults.push({ eventInformation: eventInformation, eventData: variant.toJSON() })\n                  }\n                })\n              } else {\n                eventResults.push({ eventInformation: eventInformation, eventData: variant.toJSON() })\n              }\n            }\n            index++\n          } catch (err) {\n            eventInformation = {error: err}\n            eventResults.push({ eventInformation: eventInformation, eventData: variant.toJSON() })\n          }\n        })\n\n        resolve(eventResults)\n      }\n    }\n  )\n}\n\nmodule.exports = de.biancoroyal.opcua.iiot.core.listener\n"]}