"use strict";module.exports=function(s){require("source-map-support").install();var l=require("./core/opcua-iiot-core-server"),c=require("path"),d=require("os"),u=require("vm2").VM,p={};s.nodes.registerType("OPCUA-IIoT-Flex-Server",function(e){s.nodes.createNode(this,e),this.port=e.port,this.endpoint=e.endpoint,this.maxAllowedSessionNumber=parseInt(e.maxAllowedSessionNumber)||10,this.maxConnectionsPerEndpoint=parseInt(e.maxConnectionsPerEndpoint)||10,this.maxAllowedSubscriptionNumber=parseInt(e.maxAllowedSubscriptionNumber)||50,this.alternateHostname=e.alternateHostname,this.name=e.name,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.publicCertificateFile=e.publicCertificateFile,this.privateCertificateFile=e.privateCertificateFile,this.allowAnonymous=e.allowAnonymous,this.users=e.users,this.xmlsets=e.xmlsets,this.isAuditing=e.isAuditing,this.disableDiscovery=!e.serverDiscovery,this.maxNodesPerRead=e.maxNodesPerRead||1e3,this.maxNodesPerBrowse=e.maxNodesPerBrowse||2e3;var a=this;a.setMaxListeners(0),a.initialized=!1,a.opcuaServer=null,a.assert=require("better-assert");var r=new u({sandbox:{node:a,coreServer:l,scriptObjects:p}});a.constructAddressSpaceScript=function(e,r,t){e.internalDebugLog("Init Function Block Flex Server")},r.run("node.constructAddressSpaceScript = "+e.addressSpaceScript),l.core.nodeOPCUA.OPCUAServer.MAX_SUBSCRIPTION=a.maxAllowedSubscriptionNumber;var t=l.core.nodeOPCUA.get_fully_qualified_domain_name,i=l.core.nodeOPCUA.makeApplicationUrn,o=[l.core.nodeOPCUA.standard_nodeset_file];a.xmlsets&&(a.xmlsets.forEach(function(e,r){l.detailDebugLog("Load XML Set for "+e.name),e.path&&(e.path.startsWith("public/vendor/")?o.push(c.join(__dirname,e.path)):o.push(e.path),e.path.includes("ISA95")&&l.isa95DebugLog("installing ISA95 extend"))}),l.detailDebugLog("append xmlFiles: "+o.toString()));var n=l.core.getNodeOPCUAServerPath();l.detailDebugLog("config: "+a.publicCertificateFile),null!==a.publicCertificateFile&&""!==a.publicCertificateFile||(a.publicCertificateFile=c.join(n,"/certificates/server_selfsigned_cert_2048.pem"),l.detailDebugLog("default key: "+a.publicCertificateFile)),l.detailDebugLog("config: "+a.privateCertificateFile),null!==a.privateCertificateFile&&""!==a.privateCertificateFile||(a.privateCertificateFile=c.join(n,"/certificates/PKI/own/private/private_key.pem"),l.detailDebugLog("default key: "+a.privateCertificateFile)),a.setNodeStatusTo=function(e){var r=l.core.getNodeStatus(e);a.status({fill:r.fill,shape:r.shape,text:r.status})},a.setNodeStatusTo("waiting"),l.internalDebugLog("flex node sets:"+o.toString()),a.checkUser=function(i,o){var n=!1;return l.internalDebugLog("Is Valid Server User?"),a.users.forEach(function(e,r,t){i===e.name&&o===e.password&&(l.internalDebugLog("Valid Server User Found"),n=!0)}),n},a.initNewServer=function(){a.initialized=!1,l.name="NodeREDFlexIIoTServer";var e={port:a.port,nodeset_filename:o,resourcePath:a.endpoint||"UA/NodeREDFlexIIoTServer",buildInfo:{productName:a.name||"Node-RED Flex IIoT Server",buildNumber:"24122017",buildDate:new Date(2017,12,24)},serverCapabilities:{operationLimits:{maxNodesPerRead:a.maxNodesPerRead,maxNodesPerBrowse:a.maxNodesPerBrowse}},serverInfo:{applicationUri:i(t(),"NodeRED-Flex-IIoT-Server"),productUri:"NodeRED-Flex-IIoT-Server",applicationName:{text:"NodeRED",locale:"en"},gatewayServerUri:null,discoveryProfileUri:null,discoveryUrls:[]},maxAllowedSessionNumber:a.maxAllowedSessionNumber,maxConnectionsPerEndpoint:a.maxConnectionsPerEndpoint,allowAnonymous:a.allowAnonymous,certificateFile:a.publicCertificateFile,privateKeyFile:a.privateCertificateFile,alternateHostname:a.alternateHostname||"",userManager:{isValidUser:a.checkUser},isAuditing:a.isAuditing,disableDiscovery:a.disableDiscovery};l.detailDebugLog("serverOptions:"+JSON.stringify(e));try{a.opcuaServer=new l.core.nodeOPCUA.OPCUAServer(e),a.opcuaServer.initialize(a.postInitialize)}catch(e){a.error(e,{payload:"Server Failure! Please, check the server settings!"})}a.opcuaServer.on("newChannel",function(e){l.internalDebugLog("Client connected new channel with address = ".bgYellow,e.remoteAddress," port = ",e.remotePort)}),a.opcuaServer.on("closeChannel",function(e){l.internalDebugLog("Client disconnected close channel with address = ".bgCyan,e.remoteAddress," port = ",e.remotePort)})},a.postInitialize=function(){a.opcuaServer?(a.eventObjects={},l.constructAddressSpaceFromScript(a.opcuaServer,a.constructAddressSpaceScript,a.eventObjects).then(function(){l.start(a.opcuaServer,a),a.setNodeStatusTo("active"),a.registerDiscovery()}).catch(function(e){l.internalDebugLog(e),a.showErrors&&a.error(e,{payload:""})})):(a.initialized=!1,l.internalDebugLog("OPC UA Server Is Not Ready".red),a.showErrors&&a.error(new Error("OPC UA Server Is Not Ready"),{payload:""}))},a.registerDiscovery=function(){var e=d.hostname(),r=void 0;e&&(r="opc.tcp://"+e+":4840/UAFlexDiscovery",l.internalDebugLog("Registering Server To "+r),a.opcuaServer.registerServer(r,function(e){e?l.internalDebugLog("Register Server Discovery Error".red+e):l.internalDebugLog("Discovery Setup Discovery Done".green)})),r="opc.tcp://localhost:4840/UAFlexDiscovery",l.internalDebugLog("Registering Server To "+r),a.opcuaServer.registerServer(r,function(e){e?l.internalDebugLog("Register Server Discovery Error".red+e):l.internalDebugLog("Discovery Setup Discovery Done".green)})},a.initNewServer(),a.on("input",function(e){if(!a.opcuaServer||!a.initialized)return a.error(new Error("Server Not Ready For Inputs"),e),!1;switch(e.nodetype){case"CMD":a.executeOpcuaCommand(e);break;default:a.error(new Error("Unknown Node Type "+e.nodetype),e)}a.send(e)}),a.executeOpcuaCommand=function(e){var r=a.opcuaServer.engine.addressSpace;switch(r||a.error(new Error("Server AddressSpace Not Valid"),e),e.payload.commandtype){case"restart":a.restartServer();break;case"deleteNode":if(e.payload.nodeId){var t=r.findNode(e.payload.nodeId);t?(l.internalDebugLog("Delete NodeId "+e.payload.nodeId),r.deleteNode(t)):l.internalDebugLog("Delete NodeId Not Found "+e.payload.nodeId)}else a.error(new Error("OPC UA Command NodeId Not Valid"),e);break;default:a.error(new Error("Unknown OPC UA Command"),e)}},a.restartServer=function(){l.internalDebugLog("Restart OPC UA Server"),a.opcuaServer?a.opcuaServer.shutdown(function(){a.opcuaServer=null,a.emit("shutdown"),a.initNewServer()}):(a.opcuaServer=null,a.emit("shutdown"),a.initNewServer()),a.opcuaServer?l.internalDebugLog("OPC UA Server restarted"):l.internalDebugLogr("Can not restart OPC UA Server")},a.on("close",function(e){a.closeServer(e)}),a.closeServer=function(e){a.opcuaServer?(l.simulatorInterval&&clearInterval(l.simulatorInterval),l.simulatorInterval=null,a.opcuaServer.shutdown(function(){a.opcuaServer=null,e&&e()})):(a.opcuaServer=null,e&&e())}})};
//# sourceMappingURL=maps/opcua-iiot-flex-server.js.map
