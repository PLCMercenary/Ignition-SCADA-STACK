// --------- This code has been automatically generated !!! 2018-02-08T07:25:18.653Z
"use strict";
/**
 * @module opcua.address_space.types
 */
var assert = require("node-opcua-assert");
var util = require("util");
var _  = require("underscore");
var makeNodeId = require("node-opcua-nodeid").makeNodeId;
var schema_helpers =  require("node-opcua-factory/src/factories_schema_helpers");
var extract_all_fields                       = schema_helpers.extract_all_fields;
var resolve_schema_field_types               = schema_helpers.resolve_schema_field_types;
var initialize_field                         = schema_helpers.initialize_field;
var initialize_field_array                   = schema_helpers.initialize_field_array;
var check_options_correctness_against_schema = schema_helpers.check_options_correctness_against_schema;
var _defaultTypeMap = require("node-opcua-factory/src/factories_builtin_types")._defaultTypeMap;
var ec = require("node-opcua-basic-types");
var encodeArray = ec.encodeArray;
var decodeArray = ec.decodeArray;
var makeExpandedNodeId = require("node-opcua-nodeid/src/expanded_nodeid").makeExpandedNodeId;
var generate_new_id = require("node-opcua-factory").generate_new_id;
var _enumerations = require("node-opcua-factory/src/factories_enumerations")._private._enumerations;
var schema = require("../schemas/GetEndpointsRequest_schema").GetEndpointsRequest_Schema;
var getFactory = require("node-opcua-factory/src/factories_factories").getFactory;
var RequestHeader = getFactory("RequestHeader");
var BaseUAObject = require("node-opcua-factory/src/factories_baseobject").BaseUAObject;

/**
 * 
 * @class GetEndpointsRequest
 * @constructor
 * @extends BaseUAObject
 * @param  options {Object}
 * @param  [options.requestHeader] {RequestHeader} 
 * @param  [options.endpointUrl] {String} 
 * @param  [options.localeIds] {LocaleId[]} 
 * @param  [options.profileUris] {String[]} 
 */
function GetEndpointsRequest(options)
{
    options = options || {};
    /* istanbul ignore next */
    if (schema_helpers.doDebug) { check_options_correctness_against_schema(this,schema,options); }
    var self = this;
    assert(this instanceof BaseUAObject); //  ' keyword "new" is required for constructor call')
    resolve_schema_field_types(schema);

    BaseUAObject.call(this,options);
    if (options === null) { 
        BaseUAObject.call(this,options);
        self.requestHeader =  null; /* new RequestHeader(null); */
        return ;
    }

    /**
      * 
      * @property requestHeader
      * @type {RequestHeader}
      */
    self.requestHeader =  new RequestHeader( options.requestHeader);

    /**
      * 
      * @property endpointUrl
      * @type {String}
      */
    self.endpointUrl = initialize_field(schema.fields[1], options.endpointUrl);

    /**
      * 
      * @property localeIds
      * @type {LocaleId[]}
      */
    self.localeIds = initialize_field_array(schema.fields[2], options.localeIds);

    /**
      * 
      * @property profileUris
      * @type {String[]}
      */
    self.profileUris = initialize_field_array(schema.fields[3], options.profileUris);

   // Object.preventExtensions(self);
}
util.inherits(GetEndpointsRequest,BaseUAObject);
GetEndpointsRequest.prototype.encodingDefaultBinary = makeExpandedNodeId(428,0);
GetEndpointsRequest.prototype.encodingDefaultXml = makeExpandedNodeId(427,0);
GetEndpointsRequest.prototype._schema = schema;

var encode_String = _defaultTypeMap.String.encode;
var decode_String = _defaultTypeMap.String.decode;
var encode_LocaleId = _defaultTypeMap.LocaleId.encode;
var decode_LocaleId = _defaultTypeMap.LocaleId.decode;
/**
 * encode the object into a binary stream
 * @method encode
 *
 * @param stream {BinaryStream} 
 */
GetEndpointsRequest.prototype.encode = function(stream,options) {
    // call base class implementation first
    BaseUAObject.prototype.encode.call(this,stream,options);
   this.requestHeader.encode(stream,options);
    encode_String(this.endpointUrl,stream);
    encodeArray(this.localeIds, stream, encode_LocaleId);
    encodeArray(this.profileUris, stream, encode_String);
};
/**
 * decode the object from a binary stream
 * @method decode
 *
 * @param stream {BinaryStream} 
 * @param [option] {object} 
 */
GetEndpointsRequest.prototype.decode = function(stream,options) {
    // call base class implementation first
    BaseUAObject.prototype.decode.call(this,stream,options);
    this.requestHeader.decode(stream,options);
    this.endpointUrl = decode_String(stream,options);
    this.localeIds = decodeArray(stream, decode_LocaleId);
    this.profileUris = decodeArray(stream, decode_String);
};
GetEndpointsRequest.possibleFields = [
  "requestHeader",
         "endpointUrl",
         "localeIds",
         "profileUris"
];


exports.GetEndpointsRequest = GetEndpointsRequest;
var register_class_definition = require("node-opcua-factory/src/factories_factories").register_class_definition;
register_class_definition("GetEndpointsRequest",GetEndpointsRequest);
